<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AddinExpress.XL.2005</name>
    </assembly>
    <members>
        <member name="T:AddinExpress.XL.ADXRegionBorderStyle">
            <summary>Specifies the border style for a region.</summary>
        </member>
        <member name="T:AddinExpress.XL.ADXRegionState">
            <summary>The default states of the region to which the forms created by the
            current collection item will be embedded.</summary>
        </member>
        <member name="T:AddinExpress.XL.ADXOutlookVersion">
            <summary>Outlook versions.</summary>
        </member>
        <member name="T:AddinExpress.XL.ADXOlReadingPaneLayout">
            <summary>Reading Pane layouts.</summary>
        </member>
        <member name="T:AddinExpress.XL.ADXOlExplorerItemTypes">
            <summary>
            Outlook item types for which an ADXOlForm can be shown.
            </summary>
        </member>
        <member name="T:AddinExpress.XL.ADXOlInspectorItemTypes">
            <summary>
            Outlook item types for which an ADXOlForm can be shown.
            </summary>
        </member>
        <member name="T:AddinExpress.XL.ADXOlInspectorMode">
            <summary>
            Outlook item types for which an ADXOlForm can be shown.
            </summary>
        </member>
        <member name="T:AddinExpress.XL.ADXOlExplorerLayout">
            <summary>Regions available for embedding an ADXOlForm into explorer
            windows.</summary>
        </member>
        <member name="F:AddinExpress.XL.ADXOlExplorerLayout.Unknown">
            <summary>
            The form will not be shown.
            </summary>
        </member>
        <member name="F:AddinExpress.XL.ADXOlExplorerLayout.TopSubpane">
            <summary>
            At the top of the list of messages, tasks, etc
            </summary>
        </member>
        <member name="F:AddinExpress.XL.ADXOlExplorerLayout.BottomSubpane">
            <summary>
            At the bottom of the list of messages, tasks, etc
            </summary>
        </member>
        <member name="F:AddinExpress.XL.ADXOlExplorerLayout.RightSubpane">
            <summary>
            To the right of the list of messages, tasks, etc
            </summary>
        </member>
        <member name="F:AddinExpress.XL.ADXOlExplorerLayout.WebViewPane">
            <summary>
            The form will be shown as the folder home page.
            </summary>
        </member>
        <member name="F:AddinExpress.XL.ADXOlExplorerLayout.LeftSubpane">
            <summary>
            To the left of the list of messages, tasks, etc
            </summary>
        </member>
        <member name="F:AddinExpress.XL.ADXOlExplorerLayout.BottomOutlookBar">
            <summary>At the bottom of the Outlook Bar in Outlook 2000 and 2002.</summary>
        </member>
        <member name="F:AddinExpress.XL.ADXOlExplorerLayout.BottomNavigationPane">
            <summary>At the bottom of the Navigation Pane in Outlook 2003, 2007 and 2010.</summary>
        </member>
        <member name="F:AddinExpress.XL.ADXOlExplorerLayout.BottomTodoBar">
            <summary>At the bottom of the To-Do Bar in Outlook 2007 and 2010.</summary>
        </member>
        <member name="F:AddinExpress.XL.ADXOlExplorerLayout.TopReadingPane">
            <summary>
            At the top of the Reading Pane's content
            </summary>
        </member>
        <member name="F:AddinExpress.XL.ADXOlExplorerLayout.BottomReadingPane">
            <summary>
            At the bottom of the Reading Pane's content 
            </summary>
        </member>
        <member name="F:AddinExpress.XL.ADXOlExplorerLayout.LeftReadingPane">
            <summary>
            To the left of the Reading Pane's content
            </summary>
        </member>
        <member name="F:AddinExpress.XL.ADXOlExplorerLayout.RightReadingPane">
            <summary>
            To the right of the Reading Pane's content
            </summary>
        </member>
        <member name="F:AddinExpress.XL.ADXOlExplorerLayout.ReadingPane">
            <summary>
            The form will be shown below the Reading Pane's content. This will also show a header allowing the end-user to switch between the form and the Reading Pane's content.
            </summary>
        </member>
        <member name="F:AddinExpress.XL.ADXOlExplorerLayout.FolderView">
            <summary>
            The form will be shown below the Reading Pane's content. This will also show a header allowing the end-user to switch between the form and the Reading Pane's content.
            </summary>
        </member>
        <member name="T:AddinExpress.XL.ADXOlSplitterBehavior">
            <summary>Splitter behavior.</summary>
        </member>
        <member name="F:AddinExpress.XL.ADXOlSplitterBehavior.None">
            <summary>The user is unable to resize the form. The developer is able to resize the
            form programmatically.</summary>
        </member>
        <member name="F:AddinExpress.XL.ADXOlSplitterBehavior.Standard">
            <summary>The user is able to resize, show, or hide the form. The developer is
            unable to resize the form programmatically.</summary>
        </member>
        <member name="T:AddinExpress.XL.ADXOlInspectorLayout">
            <summary>Regions available for embedding an ADXOlForm into inspector
            windows.</summary>
        </member>
        <member name="F:AddinExpress.XL.ADXOlInspectorLayout.Unknown">
            <summary>
            The form will not be shown.
            </summary>
        </member>
        <member name="F:AddinExpress.XL.ADXOlInspectorLayout.TopSubpane">
            <summary>
            At the top of the body of the message, task, etc
            </summary>
        </member>
        <member name="F:AddinExpress.XL.ADXOlInspectorLayout.BottomSubpane">
            <summary>
            At the bottom of the body of the message, task, etc
            </summary>
        </member>
        <member name="F:AddinExpress.XL.ADXOlInspectorLayout.RightSubpane">
            <summary>
            In the right part of the body of the message, task, etc
            </summary>
        </member>
        <member name="F:AddinExpress.XL.ADXOlInspectorLayout.LeftSubpane">
            <summary>
            In the left part of the body of the message, task, etc
            </summary>
        </member>
        <member name="F:AddinExpress.XL.ADXOlInspectorLayout.InspectorRegion">
            <summary>
            Underneath the body of the message, task, etc. This will also show a header allowing the end-user to switch between the form and the message itself.
            </summary>
        </member>
        <member name="T:AddinExpress.XL.ADXOlCachingStrategy">
            <summary>Caching strategies when an ADXOlFom is embedded into an explorer
            window.</summary>
        </member>
        <member name="F:AddinExpress.XL.ADXOlCachingStrategy.None">
            <summary>A new instance of the ADXOlForm will be
            created whenever the user switches between
            folders.</summary>
        </member>
        <member name="F:AddinExpress.XL.ADXOlCachingStrategy.NewInstanceForEachFolder">
            <summary>While in the same
            explorer window, the same instance of the ADXOlForm will be shown whenever the
            user navigates to the same folder.</summary>
        </member>
        <member name="F:AddinExpress.XL.ADXOlCachingStrategy.OneInstanceForAllFolders">
            <summary>While in the same
            explorer window, the same instance of the ADXOlForm will be shown for every
            folder from the folder set that the FolderName(s), ExplorerMessgageClass(es),
            and ExplorerItemTypes properties
            constitute.</summary>
        </member>
        <member name="T:AddinExpress.XL.SupportedInVisualDesignerAttribute">
            <summary> 
            This class supports the Add-in Express infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:AddinExpress.XL.SupportedInVisualDesignerAttribute.#ctor">
            <summary>
            Initializes an instance of the class.
            </summary>
        </member>
        <member name="M:AddinExpress.XL.SupportedInVisualDesignerAttribute.#ctor(System.Boolean)">
            <summary> 
            This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.
            </summary>
            <param name="visible">Determines whether a property will show up in the Add-in Express designer list.</param>
        </member>
        <member name="P:AddinExpress.XL.SupportedInVisualDesignerAttribute.Visible">
            <summary> 
            This property supports the Add-in Express infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:AddinExpress.Extensions.ADXErrorForm">
            <summary>
            Summary description for ADXErrorForm.
            </summary>
        </member>
        <member name="F:AddinExpress.Extensions.ADXErrorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:AddinExpress.Extensions.ADXErrorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:AddinExpress.Extensions.ADXErrorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:AddinExpress.Extensions.ADXForm">
            <summary> The base class for a form embeddable into windows of the host
            applications which are supported by the Add-in Express Extensions product
            line.</summary>
        </member>
        <member name="F:AddinExpress.Extensions.ADXForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:AddinExpress.Extensions.ADXForm.#ctor">
            <summary>
            Initializes an instance of the class.
            </summary>
        </member>
        <member name="M:AddinExpress.Extensions.ADXForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:AddinExpress.Extensions.ADXForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:AddinExpress.Extensions.ADXForm.Show">
            <summary>
            This method should be overridden by the descendants of the class.
            </summary>
        </member>
        <member name="M:AddinExpress.Extensions.ADXForm.Activate">
            <summary>
            Places the form on top of the set of ADXForm instances in the current layout.
            </summary>
        </member>
        <member name="M:AddinExpress.Extensions.ADXForm.Hide">
            <summary>
            Hides the form.
            </summary>
        </member>
        <member name="M:AddinExpress.Extensions.ADXForm.Highlight">
            <summary>
            Flashes the specified instance of the form. It does not change the active state of the form.
            </summary>
        </member>
        <member name="P:AddinExpress.Extensions.ADXForm.Text">
            <summary>
            Gets or sets the text associated with this form.
            </summary>
        </member>
        <member name="P:AddinExpress.Extensions.ADXForm.Icon">
            <summary>
            Gets or sets the icon for the form.
            </summary>
        </member>
        <member name="P:AddinExpress.Extensions.ADXForm.Visible">
            <summary>
            Gets or sets a value indicating whether the form is embedded.
            </summary>
        </member>
        <member name="P:AddinExpress.Extensions.ADXForm.TransparencyKey">
            <summary>
            This property is not supported. 
            </summary>
        </member>
        <member name="P:AddinExpress.Extensions.ADXForm.Opacity">
            <summary>
            This property is not supported. 
            </summary>
        </member>
        <member name="P:AddinExpress.Extensions.ADXForm.AutoSize">
            <summary>
            Returns false. You cannot set this property.
            </summary>
        </member>
        <member name="P:AddinExpress.Extensions.ADXForm.FormBorderStyle">
            <summary>
            Gets or sets the border style of the form.
            </summary>
        </member>
        <member name="P:AddinExpress.Extensions.ADXForm.Active">
            <summary>
            Gets a boolean value indicating whether the form is on top of the set of ADXForm instances in the current layout.
            </summary>
        </member>
        <member name="E:AddinExpress.Extensions.ADXForm.Activated">
            <summary>
            Occurs when the form becomes placed on top of the set of ADXForm instances in the current layout.
            </summary>
        </member>
        <member name="E:AddinExpress.Extensions.ADXForm.Deactivate">
            <summary>
            Occurs when the form is moved from the top of the set of ADXForm instances in the current layout.
            </summary>
        </member>
        <member name="T:AddinExpress.Extensions.ADXIntResource">
            <summary> This member supports the Add-in Express infrastructure and is not
            intended to be used directly from your code.</summary>
        </member>
        <member name="M:AddinExpress.Extensions.ADXIntResource.#ctor">
            <summary>
            Initializes a new instance of the ADXIntResource class.
            </summary>
        </member>
        <member name="M:AddinExpress.Extensions.ADXIntResource.Renewal(System.Runtime.Remoting.Lifetime.ILease)">
            <summary> This member supports the Add-in Express infrastructure and is not
            intended to be used directly from your code.</summary>
            <param name="lease">In the current version, this parameter is ignored.</param>
        </member>
        <member name="M:AddinExpress.Extensions.ADXIntResource.GetInstance">
            <summary> This member supports the Add-in Express infrastructure and is not
            intended to be used directly from your code.</summary>
        </member>
        <member name="M:AddinExpress.Extensions.ADXIntResource.Register">
            <summary> This member supports the Add-in Express infrastructure and is not
            intended to be used directly from your code.</summary>
        </member>
        <member name="M:AddinExpress.Extensions.ADXIntResource.Unregister">
            <summary> This member supports the Add-in Express infrastructure and is not
            intended to be used directly from your code.</summary>
        </member>
        <member name="M:AddinExpress.Extensions.ADXIntResource.LoadAssembly(System.AppDomain@)">
            <summary> This member supports the Add-in Express infrastructure and is not
            intended to be used directly from your code.</summary>
            <param name="newDomain">The AppDomain instance that will be set.</param>
        </member>
        <member name="M:AddinExpress.Extensions.ADXIntResource.AssemblyResolveEventHandler(System.Object,System.ResolveEventArgs)">
            <summary> This member supports the Add-in Express infrastructure and is not
            intended to be used directly from your code.</summary>
            <param name="sender">In the current version, this parameter is ignored.</param>
            <param name="args">In the current version, this parameter is ignored.</param>
        </member>
        <member name="T:AddinExpress.Extensions.ADXCTPControl">
            <summary> This member supports the Add-in Express infrastructure and is not
            intended to be used directly from your code.</summary>
        </member>
        <member name="T:AddinExpress.Extensions.AdxWMIEmulateWindow">
            <summary>
            Summary description for AdxWMIEmulateWindow.
            </summary>
        </member>
        <member name="T:AddinExpress.Extensions.WindowsAPI._EnumWindows">
            <summary>
            EnumWindows wrapper for .NET
            </summary>
        </member>
        <member name="M:AddinExpress.Extensions.WindowsAPI._EnumWindows.GetWindows">
            <summary>
            Gets all top level windows on the system.
            </summary>
        </member>
        <member name="M:AddinExpress.Extensions.WindowsAPI._EnumWindows.GetWindows(System.IntPtr)">
            <summary>
            Gets all child windows of the specified window
            </summary>
            <param name="hWndParent">Window Handle to get children for</param>
        </member>
        <member name="M:AddinExpress.Extensions.WindowsAPI._EnumWindows.WindowEnum(System.IntPtr,System.Int32)">
            <summary>
            The enum Windows callback.
            </summary>
            <param name="hWnd">Window Handle</param>
            <param name="lParam">Application defined value</param>
            <returns>1 to continue enumeration, 0 to stop</returns>
        </member>
        <member name="M:AddinExpress.Extensions.WindowsAPI._EnumWindows.OnWindowEnum(System.IntPtr)">
            <summary>
            Called whenever a new window is about to be added
            by the Window enumeration called from GetWindows.
            If overriding this function, return true to continue
            enumeration or false to stop.  If you do not call
            the base implementation the Items collection will
            be empty.
            </summary>
            <param name="hWnd">Window handle to add</param>
            <returns>True to continue enumeration, False to stop</returns>
        </member>
        <member name="P:AddinExpress.Extensions.WindowsAPI._EnumWindows.Items">
            <summary>
            Returns the collection of windows returned by
            GetWindows
            </summary>
        </member>
        <member name="T:AddinExpress.Extensions.WindowsAPI.EnumWindowsCollection">
            <summary>
            Holds a collection of Windows returned by GetWindows.
            </summary>
        </member>
        <member name="M:AddinExpress.Extensions.WindowsAPI.EnumWindowsCollection.Add(System.IntPtr)">
            <summary>
            Add a new Window to the collection.  Intended for
            internal use by EnumWindows only.
            </summary>
            <param name="hWnd">Window handle to add</param>
        </member>
        <member name="M:AddinExpress.Extensions.WindowsAPI.EnumWindowsCollection.#ctor">
            <summary>
            Constructs a new EnumWindowsCollection object.
            </summary>
        </member>
        <member name="P:AddinExpress.Extensions.WindowsAPI.EnumWindowsCollection.Item(System.Int32)">
            <summary>
            Gets the Window at the specified index
            </summary>
        </member>
        <member name="T:AddinExpress.Extensions.WindowsAPI.EnumWindowsItem">
            <summary>
            Provides details about a Window returned by the 
            enumeration
            </summary>
        </member>
        <member name="F:AddinExpress.Extensions.WindowsAPI.EnumWindowsItem.hWnd">
            <summary>
            The window handle.
            </summary>
        </member>
        <member name="M:AddinExpress.Extensions.WindowsAPI.EnumWindowsItem.GetHashCode">
            <summary>
            To allow items to be compared, the hash code
            is set to the Window handle, so two EnumWindowsItem
            objects for the same Window will be equal.
            </summary>
            <returns>The Window Handle for this window</returns>
        </member>
        <member name="M:AddinExpress.Extensions.WindowsAPI.EnumWindowsItem.Restore">
            <summary>
            Restores and Brings the window to the front, 
            assuming it is a visible application window.
            </summary>
        </member>
        <member name="M:AddinExpress.Extensions.WindowsAPI.EnumWindowsItem.#ctor(System.IntPtr)">
            <summary>
             Constructs a new instance of this class for
             the specified Window Handle.
            </summary>
            <param name="hWnd">The Window Handle</param>
        </member>
        <member name="P:AddinExpress.Extensions.WindowsAPI.EnumWindowsItem.Handle">
            <summary>
            Gets the window's handle
            </summary>
        </member>
        <member name="P:AddinExpress.Extensions.WindowsAPI.EnumWindowsItem.Text">
            <summary>
            Gets the window's title (caption)
            </summary>
        </member>
        <member name="P:AddinExpress.Extensions.WindowsAPI.EnumWindowsItem.ClassName">
            <summary>
            Gets the window's class name.
            </summary>
        </member>
        <member name="P:AddinExpress.Extensions.WindowsAPI.EnumWindowsItem.Iconic">
            <summary>
            Gets/Sets whether the window is iconic (mimimised) or not.
            </summary>
        </member>
        <member name="P:AddinExpress.Extensions.WindowsAPI.EnumWindowsItem.Maximised">
            <summary>
            Gets/Sets whether the window is maximised or not.
            </summary>
        </member>
        <member name="P:AddinExpress.Extensions.WindowsAPI.EnumWindowsItem.Visible">
            <summary>
            Gets whether the window is visible.
            </summary>
        </member>
        <member name="P:AddinExpress.Extensions.WindowsAPI.EnumWindowsItem.Rect">
            <summary>
            Gets the bounding rectangle of the window
            </summary>
        </member>
        <member name="P:AddinExpress.Extensions.WindowsAPI.EnumWindowsItem.Location">
            <summary>
            Gets the location of the window relative to the screen.
            </summary>
        </member>
        <member name="P:AddinExpress.Extensions.WindowsAPI.EnumWindowsItem.Size">
            <summary>
            Gets the size of the window.
            </summary>
        </member>
        <member name="F:AddinExpress.Extensions.WindowsAPI.EnumWindowsItem.UnManagedMethods.FLASHW_STOP">
            <summary>
            Stop flashing. The system restores the window to its original state.
            </summary>
        </member>
        <member name="F:AddinExpress.Extensions.WindowsAPI.EnumWindowsItem.UnManagedMethods.FLASHW_CAPTION">
            <summary>
            Flash the window caption. 
            </summary>
        </member>
        <member name="F:AddinExpress.Extensions.WindowsAPI.EnumWindowsItem.UnManagedMethods.FLASHW_TRAY">
            <summary>
            Flash the taskbar button.
            </summary>
        </member>
        <member name="F:AddinExpress.Extensions.WindowsAPI.EnumWindowsItem.UnManagedMethods.FLASHW_ALL">
            <summary>
            Flash both the window caption and taskbar button.
            </summary>
        </member>
        <member name="F:AddinExpress.Extensions.WindowsAPI.EnumWindowsItem.UnManagedMethods.FLASHW_TIMER">
            <summary>
            Flash continuously, until the FLASHW_STOP flag is set.
            </summary>
        </member>
        <member name="F:AddinExpress.Extensions.WindowsAPI.EnumWindowsItem.UnManagedMethods.FLASHW_TIMERNOFG">
            <summary>
            Flash continuously until the window comes to the foreground. 
            </summary>
        </member>
        <member name="M:AddinExpress.XL.About.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:AddinExpress.XL.ADXExcelTaskPane">
            <summary>A highly specific version of the System.Windows.Forms.Form class
            designed for being embedded into Excel windows.</summary>
            <remarks>This class and its base class (AddinExpress.Extensions.ADXForm)
            override a number of properties, methods and events of the
            System.Windows.Forms.Form class and also add some new members the most notable
            of which is the ADXBeforeCellEdit and ADXAfterCellEdit events. 
            <para>In addition, this class provides a number of members that relate to the
            architecture of Add-in Express Extensions for Excel. For instance, you can
            access AddinModule, FormsManager, and Item properties.</para>
            <para>An ADXExcelTaskPane can be in one of three states determined by the Active
            and Visible properties of the instance. When on top of the set of
            ADExcelTaskPane instances in a given layout, the Active property of the instance
            is True. This state is called Active. When not on top of the set of
            ADXExcelTaskPane instances in the layout, the Active property of the instance is
            False. This state is called Visible. When not in any layout, the Visible
            property is False.</para>
            <para>When you need to show a form in a usual way, say as a dialog window, use
            the System.Windows.Forms.Form class.</para></remarks>
        </member>
        <member name="F:AddinExpress.XL.ADXExcelTaskPane.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:AddinExpress.XL.ADXExcelTaskPane.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:AddinExpress.XL.ADXExcelTaskPane.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:AddinExpress.XL.ADXExcelTaskPane.Show">
            <summary>Embeds the ADXExcelTaskPane into the layout specified by the
            ADXExcelTaskPanesCollectionItem (see the Item property).</summary>
            <remarks>When the ADXExcelTaskPane is embedded, its Visible property is True. To
            move the form on top of the set of ADXExcelTaskPane instances in the layout, use
            the Activate method.</remarks>
        </member>
        <member name="M:AddinExpress.XL.ADXExcelTaskPane.Hide">
            <summary>Hides the ADXExcelTaskPane.
            </summary>
            <remarks>The Visible property of the ADXExcelTaskPane becomes False.</remarks>
        </member>
        <member name="M:AddinExpress.XL.ADXExcelTaskPane.ADXPostMessage(System.IntPtr,System.IntPtr)">
            <summary>
            Sends a custom message to the internal window of the add-in. 
            When the message is received, the ADXExcelTaskPane raises the ADXPostMessageReceived event.
            </summary>
            <param name="wParam">A value that will be available in the ADXPostMessageReceived event.</param>
            <param name="lParam">A value that will be available in the ADXPostMessageReceived event.</param>
        </member>
        <member name="P:AddinExpress.XL.ADXExcelTaskPane.ExcelAppObj">
            <summary>
            Returns a reference to the Excel.Application in the context of which the add-in works.
            </summary>
        </member>
        <member name="P:AddinExpress.XL.ADXExcelTaskPane.ExcelTaskPanesManager">
            <summary>
            Returns a reference to the Excel Forms Manager
            </summary>
        </member>
        <member name="P:AddinExpress.XL.ADXExcelTaskPane.AddinModule">
            <summary>
            Returns the add-in module.
            </summary>
        </member>
        <member name="P:AddinExpress.XL.ADXExcelTaskPane.Item">
            <summary>
            Returns a reference to the item of the ADXExcelTaskPanesManager.Items collection that controls the form.
            </summary>
        </member>
        <member name="P:AddinExpress.XL.ADXExcelTaskPane.RegionState">
            <summary>
            Returns or sets the state of a region for a visible ADXExcelTaskPane. 
            </summary>
        </member>
        <member name="E:AddinExpress.XL.ADXExcelTaskPane.ADXBeforeTaskPaneShow">
            <summary>
            Occurs before the ADXExcelTaskPane is displayed.
            </summary>
        </member>
        <member name="E:AddinExpress.XL.ADXExcelTaskPane.ADXAfterTaskPaneShow">
            <summary>
            Occurs after the ADXExcelTaskPane is displayed.
            </summary>
        </member>
        <member name="E:AddinExpress.XL.ADXExcelTaskPane.ADXAfterTaskPaneHide">
            <summary>
            Occurs just after the ADXExcelTaskPane is hidded.
            </summary>
        </member>
        <member name="E:AddinExpress.XL.ADXExcelTaskPane.ADXBeforeCellEdit">
            <summary>
            Occurs when the user starts editing an Excel cell.
            </summary>
        </member>
        <member name="E:AddinExpress.XL.ADXExcelTaskPane.ADXAfterCellEdit">
            <summary>
            Occurs when the user finishes editing an Excel cell.
            </summary>
        </member>
        <member name="E:AddinExpress.XL.ADXExcelTaskPane.ADXKeyFilter">
            <summary>If the focus is on the ADXExcelTaskPane, occurs whenever the user
            presses a keyboard button. Allows determinig whether the button press should be
            dispatched to the ADXExcelTaskPane or to Excel.</summary>
            <remarks>Note that whenever a button press is dispatched to Excel, the focus is
            moved to Excel. It is highly recommended that the code in the event handler of this event run as quick as possible. Don't show any windows/forms/messages in the event handler. </remarks>
        </member>
        <member name="E:AddinExpress.XL.ADXExcelTaskPane.ADXEnter">
            <summary>
            Occurs when the task pane is entered.
            </summary>
        </member>
        <member name="E:AddinExpress.XL.ADXExcelTaskPane.ADXLeave">
            <summary>
            Occurs when the input focus leaves the task pane.
            </summary>
        </member>
        <member name="E:AddinExpress.XL.ADXExcelTaskPane.ADXPostMessageReceived">
            <summary>
            Occurs after the ADXPostMessage method is called.
            </summary>
        </member>
        <member name="E:AddinExpress.XL.ADXExcelTaskPane.ADXCloseButtonClick">
            <summary>
            Occurs when the user clicks on the Close button.
            </summary>
        </member>
        <member name="E:AddinExpress.XL.ADXExcelTaskPane.ADXSplitterMove">
            <summary>
            Occurs when the user drags the splitter. 
            </summary>
        </member>
        <member name="E:AddinExpress.XL.ADXExcelTaskPane.ADXDragOverMinimized">
            <summary>
            Occurs when an object is dragged over the ADXExcelTaskPane and the ADXExcelTaskPane is minimised.
            </summary>
        </member>
        <member name="T:AddinExpress.XL.ADXExcelTaskPane.ADXSplitterMoveEventArgs">
            <summary>
             Provides data for the ADXSplitterMove event of ADXExcelTaskPane.
            </summary>
        </member>
        <member name="P:AddinExpress.XL.ADXExcelTaskPane.ADXSplitterMoveEventArgs.NewRegionSize">
            <summary>
             Returns a Size containing a new size of ADXExcelTaskPane.
            </summary>
        </member>
        <member name="P:AddinExpress.XL.ADXExcelTaskPane.ADXSplitterMoveEventArgs.Cancel">
            <summary>
             If set to true, the user cannot move the splitter and, consequently, change the size of ADXExcelTaskPane.
            </summary>
        </member>
        <member name="T:AddinExpress.XL.ADXExcelTaskPane.ADXSplitterMoveEventHandler">
            <summary>
            Represents the method that handles the ADXSplitterMove event of ADXExcelTaskPane.
            </summary>
            <param name="sender">The ADXExcelTaskPane which is the source of the event.</param>
            <param name="e">An ADXSplitterMoveEventArgs that provides event data.</param>
        </member>
        <member name="T:AddinExpress.XL.ADXExcelTaskPane.ADXDragOverMinimizedEventArgs">
            <summary>
            Provides data for the ADXDragOverMinimized event of the ADXExcelTaskPane.
            </summary>
        </member>
        <member name="P:AddinExpress.XL.ADXExcelTaskPane.ADXDragOverMinimizedEventArgs.Expand">
            <summary>
            If true, the minimised ADXExcelTaskPane will be expanded.
            </summary>
        </member>
        <member name="T:AddinExpress.XL.ADXExcelTaskPane.DragOverMinimized_EventHandler">
            <summary>
            Represents the method that handles the ADXDragOverMinimized event of the ADXExcelTaskPane.
            </summary>
            <param name="sender">The ADXExcelTaskPane that is the source of the event.</param>
            <param name="e">An ADXDragOverMinimizedEventArgs that contains the event data.</param>
        </member>
        <member name="T:AddinExpress.XL.ADXBeforeTaskPaneShowEventHandler">
            <summary> Represents the method that handles the ADXBeforeTaskPaneShow event of
            the ADXExcelTaskPane.</summary>
            <param name="sender">The ADXExcelTaskPane which is the source of the
            event.</param>
            <param name="e">An ADXBeforeTaskPaneShowEventArgs which contains event
            data.</param>
        </member>
        <member name="T:AddinExpress.XL.ADXAfterTaskPaneShowEventHandler">
            <summary>
            Represents the method that handles the ADXAfterTaskPaneShow event of the ADXExcelTaskPane.
            </summary>
            <param name="sender">The ADXExcelTaskPane which is the source of the event.</param>
            <param name="e">An ADXAfterTaskPaneShowEventArgs which contains event data.</param>
        </member>
        <member name="T:AddinExpress.XL.ADXAfterTaskPaneHideEventHandler">
            <summary>
            Represents the method that handles the ADXAfterTaskPaneHide event of the ADXExcelTaskPane.
            </summary>
            <param name="sender">The ADXExcelTaskPane which is the source of the event.</param>
            <param name="e">An ADXAfterTaskPaneHideEventArgs which contains event data.</param>
        </member>
        <member name="T:AddinExpress.XL.ADXBeforeCellEditEventHandler">
            <summary>
            Represents the method that handles the ADXBeforeCellEdit event of the ADXExcelTaskPane.
            </summary>
            <param name="sender">The ADXExcelTaskPane which is the source of the event.</param>
            <param name="e">An ADXBeforeCellEditEventArgs which contains event data.</param>
        </member>
        <member name="T:AddinExpress.XL.ADXAfterCellEditEventHandler">
            <summary>
            Represents the method that handles the ADXAfterCellEdit event of the ADXExcelTaskPane.
            </summary>
            <param name="sender">The ADXExcelTaskPane which is the source of the event.</param>
            <param name="e">An ADXAfterCellEditEventArgs which contains event data.</param>
        </member>
        <member name="T:AddinExpress.XL.ADXCloseButtonClickEventHandler">
            <summary>
            Represents the method that handles the ADXCloseButtonClick event of the ADXExcelTaskPane.
            </summary>
            <param name="sender">An ADXExcelTaskPane that is curretly active.</param>
            <param name="e">An ADXCloseButtonClickEventArgs that provides event data.</param>
        </member>
        <member name="T:AddinExpress.XL.ADXBeforeTaskPaneShowEventArgs">
            <summary>
            Provides data for the ADXBeforeTaskPaneShow event of the ADXExcelTaskPane. 
            </summary>
        </member>
        <member name="T:AddinExpress.XL.ADXAfterTaskPaneShowEventArgs">
            <summary>
            Provides data for the ADXAfterTaskPaneShow event of the ADXExcelTaskPane. 
            </summary>
        </member>
        <member name="T:AddinExpress.XL.ADXAfterTaskPaneHideEventArgs">
            <summary>
            Provides data for the ADXAfterTaskPaneHide event of the ADXExcelTaskPane. 
            </summary>
        </member>
        <member name="T:AddinExpress.XL.ADXBeforeCellEditEventArgs">
            <summary>
            Provides data for the ADXBeforeCellEdit event of the ADXExcelTaskPane. 
            </summary>
        </member>
        <member name="T:AddinExpress.XL.ADXAfterCellEditEventArgs">
            <summary>
            Provides data for the ADXAfterCellEdit event of the ADXExcelTaskPane. 
            </summary>
        </member>
        <member name="T:AddinExpress.XL.ADXEnterEventArgs">
            <summary>
            Provides data for the ADXEnter event of the ADXOlForm.
            </summary>
        </member>
        <member name="T:AddinExpress.XL.ADXEnterEventHandler">
            <summary>
            Represents the method that handles the ADXEnter event of the ADXOlForm.
            </summary>
            <param name="sender">The ADXOlForm which is the source of the event.</param>
            <param name="e">An ADXEnterEventArgs that provides event data.</param>
        </member>
        <member name="T:AddinExpress.XL.ADXLeaveEventArgs">
            <summary>
            Provides data for the ADXLeave event of the ADXOlForm.
            </summary>
        </member>
        <member name="T:AddinExpress.XL.ADXLeaveEventHandler">
            <summary>
            Represents the method that handles the ADXLeave event of the ADXOlForm.
            </summary>
            <param name="sender">The ADXOlForm which is the source of the event.</param>
            <param name="e">An ADXLeaveEventArgs that provides event data.</param>
        </member>
        <member name="T:AddinExpress.XL.ADXPostMessageReceivedEventArgs">
            <summary>
            Provides data for the ADXPostMessageReceived event of the ADXOlForm.
            </summary>
        </member>
        <member name="P:AddinExpress.XL.ADXPostMessageReceivedEventArgs.WParam">
            <summary>
            This is a message-specific parameter from the ADXExcelTaskPane.ADXPostMessage method.
            </summary>
        </member>
        <member name="P:AddinExpress.XL.ADXPostMessageReceivedEventArgs.LParam">
            <summary>
            This is a message-specific parameter from the ADXExcelTaskPane.ADXPostMessage method.
            </summary>
        </member>
        <member name="T:AddinExpress.XL.ADXPostMessageReceivedEventHandler">
            <summary>
            Represents the method that handles the ADXPostMessageReceived event of the ADXOlForm.
            </summary>
            <param name="sender">The ADXOlForm which is the source of the event.</param>
            <param name="e">An ADXPostMessageReceivedEventArgs that provides event data.</param>
        </member>
        <member name="T:AddinExpress.XL.ADXCloseButtonClickEventArgs">
            <summary>
            Provides data for the ADXCloseButtonClick event of the ADXExcelTaskPane.
            </summary>
        </member>
        <member name="P:AddinExpress.XL.ADXCloseButtonClickEventArgs.CloseForm">
            <summary>
            If true, the form will be closed. Default - true.
            </summary>
        </member>
        <member name="P:AddinExpress.XL.ADXCloseButtonClickEventArgs.DisableItem">
            <summary>
            If true, the item corresponding to the form will be disabled. Default - false.
            </summary>
        </member>
        <member name="T:AddinExpress.XL.ADXKeyFilterEventHandler">
            <summary>
            Represents the method that handles the ADXKeyFilter event of the ADXExcelTaskPane.
            </summary>
            <param name="sender">The ADXExcelTaskPane which is the source of the event.</param>
            <param name="e">An ADXKeyFilterEventArgs which contains event data.</param>
        </member>
        <member name="T:AddinExpress.XL.AuditKeyState">
            <summary>
            The key states.
            </summary>
        </member>
        <member name="T:AddinExpress.XL.ADXKeyFilterAction">
            <summary>
            The action to be performed as a result of the ADXKeyFilter event.
            </summary>
        </member>
        <member name="T:AddinExpress.XL.ADXKeyFilterEventArgs">
            <summary>
            Provides data for the ADXKeyFilter event of the ADXExcelTaskPane. 
            </summary>
        </member>
        <member name="P:AddinExpress.XL.ADXKeyFilterEventArgs.Alt">
            <summary>
            Returns True, if an Alt button is pressed.
            </summary>
        </member>
        <member name="P:AddinExpress.XL.ADXKeyFilterEventArgs.Control">
            <summary>
            Returns True, if a Ctrl button is pressed.
            </summary>
        </member>
        <member name="P:AddinExpress.XL.ADXKeyFilterEventArgs.Shift">
            <summary>
            Returns True, if a Shift button is pressed.
            </summary>
        </member>
        <member name="P:AddinExpress.XL.ADXKeyFilterEventArgs.KeyCode">
            <summary>
            Returns a member of System.Windows.Forms.Keys enumeration what corresponds to the button which is pressed.
            </summary>
        </member>
        <member name="P:AddinExpress.XL.ADXKeyFilterEventArgs.KeyValue">
            <summary>
            Returns the keyboard value for the ADXKeyFilter event.
            </summary>
        </member>
        <member name="P:AddinExpress.XL.ADXKeyFilterEventArgs.State">
            <summary>
            Returns the state of the keyboard button.
            </summary>
        </member>
        <member name="P:AddinExpress.XL.ADXKeyFilterEventArgs.Action">
            <summary>
            Returns or sets a value that determines if the keyboard event should be dispatched to the ADXExcelTaskPane or to Excel. If specified as SendToHostApplication, also moves the focus off the ADXExcelTaskPane to Excel. 
            </summary>
        </member>
        <member name="T:AddinExpress.XL.ADXExcelTaskPanesCollection">
            <summary>
            A collection of items that manage task pane embedding. Every item (of the ADXExcelTaskPanesCollectionItem type) specifies the form (of the ADXExcelTaskPane type) to be embedded as well as position and other aspects of form embedding.
            </summary>
        </member>
        <member name="M:AddinExpress.XL.ADXExcelTaskPanesCollection.Copy">
            <summary>
            Creates a new ADXExcelTaskPanesCollection object and copies all collection items to this object.
            </summary>
        </member>
        <member name="M:AddinExpress.XL.ADXExcelTaskPanesCollection.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:AddinExpress.XL.ADXExcelTaskPanesCollection.Add(AddinExpress.XL.ADXExcelTaskPanesCollectionItem)">
            <summary>
            Adds an ADXExcelTaskPanesCollectionItem to the end of the ADXOlFormsCollection.
            </summary>
            <param name="formsItem">The ADXExcelTaskPanesCollectionItem to be added to the end of the ADXExcelTaskPanesCollection.</param>
            <returns>Either the ADXExcelTaskPanesCollectionItem (existing or just added) or null (Nothing in VB.NET).</returns>
        </member>
        <member name="M:AddinExpress.XL.ADXExcelTaskPanesCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the ADXExcelTaskPanesCollectionItem at the specified index of the ADXExcelTaskPanesCollection.
            </summary>
            <param name="index">The zero-based index of the ADXExcelTaskPanesCollectionItem to remove. </param>
        </member>
        <member name="M:AddinExpress.XL.ADXExcelTaskPanesCollection.IndexOf(AddinExpress.XL.ADXExcelTaskPanesCollectionItem)">
            <summary>
            Searches for the specified ADXExcelTaskPanesCollectionItem and returns the zero-based index of the first occurrence within the entire ADXExcelTaskPanesCollection.
            </summary>
            <param name="formsItem">The ADXExcelTaskPanesCollectionItem to locate in the collection.</param>
            <returns>The zero-based index of the first occurrence of value within the entire ADXExcelTaskPanesCollection, if found; otherwise, -1.</returns>
        </member>
        <member name="M:AddinExpress.XL.ADXExcelTaskPanesCollection.Contains(AddinExpress.XL.ADXExcelTaskPanesCollectionItem)">
            <summary> Determines whether an element is in the
            ADXOlFormsCollection.</summary>
            <param name="formsItem">The Object to locate in the ADXExcelTaskPanesCollection. The
            value can be a null reference (Nothing in Visual Basic).</param>
            <returns><b>true</b> if <i>formsItem</i> is found in the ADXExcelTaskPanesCollection;
            otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:AddinExpress.XL.ADXExcelTaskPanesCollection.Remove(AddinExpress.XL.ADXExcelTaskPanesCollectionItem)">
            <summary>
            Removes the item from the ADXExcelTaskPanesCollection,
            </summary>
            <param name="formsItem">The ADXExcelTaskPanesCollection to remove from the ADXExcelTaskPanesCollection.</param>
        </member>
        <member name="P:AddinExpress.XL.ADXExcelTaskPanesCollection.Owner">
            <summary>
            Returns the ADXExcelTaskPanesManager which is the owner of the collection.
            </summary>
        </member>
        <member name="P:AddinExpress.XL.ADXExcelTaskPanesCollection.Item(System.Int32)">
            <summary>
            Returns an ADXExcelTaskPanesCollectionItem at the specified index.
            </summary>
            <param name="index">The zero-based index of the ADXExcelTaskPanesCollectionItem to get.</param>
        </member>
        <member name="T:AddinExpress.XL.ADXExcelTaskPanesCollectionItem">
            <summary> Represents an item in an ADXExcelTaskPanesCollection.</summary>
            <remarks>First off, you specify an ADXExcelTaskPane in the FormClassName
            property and set the Enabled property to True. 
            <para>To show instances of the ADXExcelTaskPane in Excel, specify an appropriate
            layout in the Position property.</para>
            <para>To be able to resize the ADXExcelTaskPane programmatically, you set the
            Splitter property to None.</para></remarks>
        </member>
        <member name="M:AddinExpress.XL.ADXExcelTaskPanesCollectionItem.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:AddinExpress.XL.ADXExcelTaskPanesCollectionItem.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="container">An IContainer that represents the container for the component.</param>
        </member>
        <member name="M:AddinExpress.XL.ADXExcelTaskPanesCollectionItem.ShowTaskPane">
            <summary>
            Creates an instance of the ADXExcelTaskPane or finds existing an instance and shows it.
            </summary>
        </member>
        <member name="M:AddinExpress.XL.ADXExcelTaskPanesCollectionItem.CreateTaskPaneInstance">
            <summary>
            Creates an instance of the ADXExcelTaskPane. If the instance exists, fires an exception.
            </summary>
        </member>
        <member name="P:AddinExpress.XL.ADXExcelTaskPanesCollectionItem.Collection">
            <summary>
            Returns the ADXExcelTaskPanesCollection which is the parent of the ADXExcelTaskPanesCollectionItem.
            </summary>
        </member>
        <member name="P:AddinExpress.XL.ADXExcelTaskPanesCollectionItem.Position">
            <summary>
            Specifies the position the instance of the ADXExcelTaskPane specified in the TaskPaneClassName property will be embedded into.
            </summary>
        </member>
        <member name="P:AddinExpress.XL.ADXExcelTaskPanesCollectionItem.AlwaysShowHeader">
            <summary>
            If False and an only instance of an ADXExcelTaskPane is shown in Position, the header isn't shown. 
            </summary>
        </member>
        <member name="P:AddinExpress.XL.ADXExcelTaskPanesCollectionItem.CloseButton">
            <summary>  If true, the close button will be displayed for every instance of
            ADXExcelTaskPane which class name is specified in the TaskPaneClassName
            property. When the user clicks the button, the corresponding ADXExcelTaskPane
            fires the ADXCloseButtonClick event.</summary>
        </member>
        <member name="P:AddinExpress.XL.ADXExcelTaskPanesCollectionItem.IsHiddenStateAllowed">
             <summary> If false, the hidden state will be unavailable through the user interface 
             for the region showing an instance of ADXExcelTaskPane whose class name is specified 
             in the TaskPaneClassName property. 
            </summary>
        </member>
        <member name="P:AddinExpress.XL.ADXExcelTaskPanesCollectionItem.TaskPaneClassName">
            <summary>
            Returns or sets the class name of an ADXExcelTaskPane instances of which will be created and shown by the ADXExcelTaskPanesCollectionItem.
            </summary>
        </member>
        <member name="P:AddinExpress.XL.ADXExcelTaskPanesCollectionItem.Enabled">
            <summary>
            If false, no ADXExcelTaskPane instances will be created and shown.
            </summary>
        </member>
        <member name="P:AddinExpress.XL.ADXExcelTaskPanesCollectionItem.Splitter">
            <summary>
            Specifies the splitter. If this property is set to None, the corresponding ADXExcelTaskPane can be resized programmatically.
            </summary>
        </member>
        <member name="P:AddinExpress.XL.ADXExcelTaskPanesCollectionItem.DefaultRegionState">
            <summary>Returns or sets a value of the ADXRegionState type that specify the
            default state of the region to which the forms created by the current
            ADXExcelTaskPanesCollectionItem will be embedded. The value specified by this
            property is applied only once - if no Add-in Express forms were ever embedded in
            the regions specified by the current ADXExcelTaskPanesCollectionItem when your
            add-in is run on a given PC for the very first time. In all other circumstances,
            the state of the region is controlled by the user.</summary>
            <remarks>A region can be in the following states: normal, hidden (collapsed to a
            5px wide strip), minimized (reduced to the size of the form caption).</remarks>
        </member>
        <member name="P:AddinExpress.XL.ADXExcelTaskPanesCollectionItem.Tag">
            <summary>Returns or sets a string value that can be used to store data
            associated with the ADXExcelTaskPanesCollectionItem.</summary>
        </member>
        <member name="P:AddinExpress.XL.ADXExcelTaskPanesCollectionItem.TaskPaneInstance">
            <summary>
            Returns the ADXExcelTaskPane instance which is currently shown (or hidden).
            </summary>
        </member>
        <member name="P:AddinExpress.XL.ADXExcelTaskPanesCollectionItem.IsDragDropAllowed">
            <summary>Returns or sets a Boolean value specifying if the user can
            drag-and-drop forms created by the current ADXExcelTaskPanesCollectionItem to
            the regions specified by the AllowedDropRegions property of the same
            ADXExcelTaskPanesCollectionItem.</summary>
        </member>
        <member name="P:AddinExpress.XL.ADXExcelTaskPanesCollectionItem.UseOfficeThemeForBackground">
            <summary>
            If set to true, the color of the current Office theme is used to paint the background of ADXExcelTaskPane. Otherwise, the color set at design-time is used.
            </summary>
        </member>
        <member name="P:AddinExpress.XL.ADXExcelTaskPanesCollectionItem.RestoreFromMinimizedState">
            <summary>Returns or sets a Boolean value specifying the display of the pane
            created by the current ADXExcelTaskPanesCollectionItem when the region is
            reduced to the size of the form caption (i.e. when it is in the minimized state)
            and the user clicks on the form caption. If the value is true, the region will
            be restored to the normal state. If the value is false, the form will pop-up
            overlaying the adjoining part of the Excel window, in which the form is
            embedded.</summary>
        </member>
        <member name="P:AddinExpress.XL.ADXExcelTaskPanesCollectionItem.AllowedDropPositions">
            <summary>Returns or sets a value (or a combination of values) of the
            ADXExcelAllowedDropPositions type, specifying the regions to which and from
            which the user can drag-and-drop the forms created by the current
            ADXExcelTaskPanesCollectionItem.</summary>
        </member>
        <member name="P:AddinExpress.XL.ADXExcelTaskPanesCollectionItem.RegionBorder">
            <summary>
            Determines whether to show a frame arround the region or not to show.
            </summary>
        </member>
        <member name="T:AddinExpress.XL.ADXExcelTaskPanesManager">
            <summary>Excel Forms Manager. The main class of the Add-in Express 
            Extensions for Excel.</summary>
            <remarks>The folowing classes constitute the architecture of the Add-in Express
            Extensions for Excel: 
            <list type="bullet">
            <item>
            <description>ADXExcelTaskPanesManager</description></item>
            <item>
            <description>ADXExcelTaskPanesCollection</description></item>
            <item>
            <description>ADXExcelTaskPanesCollectionItem</description></item>
            <item>
            <description>ADXExcelTaskPane</description></item></list>
            <para>You start with adding an item to the Items collection and binding it to an
            ADXExcelTaskPane which is the base class for every form embeddable into Excel
            windows. Then you process events provided in ADXExcelTaskPanesManager and ADXExcelTaskPane.
            </para>
            <para>The most notable event in this class is ADXBeforeTaskPaneInstanceCreate.</para></remarks>
        </member>
        <member name="F:AddinExpress.XL.ADXExcelTaskPanesManager.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:AddinExpress.XL.ADXExcelTaskPanesManager.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:AddinExpress.XL.ADXExcelTaskPanesManager.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="container">An IContainer that represents the container for the component.</param>
        </member>
        <member name="M:AddinExpress.XL.ADXExcelTaskPanesManager.SetOwner(System.Object)">
            <summary> This member supports the Add-in Express infrastructure and is not
            intended to be used directly from your code.</summary>
            <param name="AddinModule">An instance of the Add-in Express AddinModule class.</param>
        </member>
        <member name="P:AddinExpress.XL.ADXExcelTaskPanesManager.AddinModule">
            <summary>
            Returns the add-in module the component is located on.
            </summary>
        </member>
        <member name="P:AddinExpress.XL.ADXExcelTaskPanesManager.ExcelAppObj">
            <summary>
            Returns a reference to Excel.Application (a COM object).
            </summary>
            <remarks>The COM objects provided in this member are essential for Add-in
            Express Extensions functioning. That's why you must never release them. On the
            contrary, you must release every COM object obtained from them. 
            <para>To release a COM object, you use the ReleaseComObject method of the
            Marshal class located in the System.Runtime.InteropServices
            namespace.</para></remarks>
        </member>
        <member name="P:AddinExpress.XL.ADXExcelTaskPanesManager.Items">
            <summary>
            A collection of items that manage form embedding. Every item (of the ADXExcelTaskPanesCollectionItem type) specifies the form to be embedded as well as the position and other aspects of form embedding.
            </summary>
        </member>
        <member name="E:AddinExpress.XL.ADXExcelTaskPanesManager.ADXInitialize">
            <summary>
            Occurs before the Excel Forms Manager is initialized.
            </summary>
        </member>
        <member name="E:AddinExpress.XL.ADXExcelTaskPanesManager.ADXBeforeTaskPaneInstanceCreate">
            <summary>
            Occurs before a form instance (of the ADXExcelTaskPane Type) is created. Allows preventing the creation of the instance. 
            </summary>
        </member>
        <member name="E:AddinExpress.XL.ADXExcelTaskPanesManager.ADXError">
            <summary>
            Occurs when the ADXExcelTaskPanesManager generates an exception.
            </summary>
        </member>
        <member name="T:AddinExpress.XL.ADXErrorEventHandler">
            <summary> Represents the method that handles the ADXExcelTaskPanesManager.ADXError
            event.</summary>
            <param name="sender">The ADXExcelTaskPanesManager that is the source of the event.</param>
            <param name="e">An ADXErrorEventArgs that contains the event data.</param>
        </member>
        <member name="T:AddinExpress.XL.ADXInitializeEventHandler">
            <summary> Represents the method that handles the ADXExcelTaskPanesManager.ADXInitialize
            event.</summary>
            <param name="sender">The ADXExcelTaskPanesManager that is the source of the event.</param>
            <param name="e">An ADXInitializeEventArgs that contains the event data.</param>
        </member>
        <member name="T:AddinExpress.XL.ADXBeforeTaskPaneInstanceCreateEventHandler">
            <summary> Represents the method that handles the
            ADXExcelTaskPanesManager.ADXBeforeTaskPaneInstanceCreate event.</summary>
            <param name="sender">The ADXExcelTaskPanesManager that is the source of the event.</param>
            <param name="e">An ADXBeforeTaskPaneInstanceCreateEventArgs that contains the event data.</param>
        </member>
        <member name="T:AddinExpress.XL.ADXErrorEventArgs">
            <summary>
            Provides data for the ADXExcelTaskPanesManager.ADXError event.
            </summary>
        </member>
        <member name="P:AddinExpress.XL.ADXErrorEventArgs.Exception">
            <summary>
            Returns the exception that is the cause of the event.
            </summary>
        </member>
        <member name="P:AddinExpress.XL.ADXErrorEventArgs.Handled">
            <summary>
            Returns or sets a boolean value that specifies if the OnError event is handled by the developer. If it is false (default), the Extensions shows an error dialog.
            </summary>
        </member>
        <member name="T:AddinExpress.XL.ADXBeforeTaskPaneInstanceCreateEventArgs">
            <summary>
            Provides data for the ADXBeforeTaskPaneInstanceCreate event of ADXExcelTaskPanesManager.
            </summary>
        </member>
        <member name="P:AddinExpress.XL.ADXBeforeTaskPaneInstanceCreateEventArgs.Cancel">
            <summary>
            If true, prevents creating an instance of the ADXExcelTaskPane defined in the TaskPaneClassName property of the ADXExcelTaskPanesCollectionItem which is specified in the Item member of this class.
            </summary>
        </member>
        <member name="P:AddinExpress.XL.ADXBeforeTaskPaneInstanceCreateEventArgs.Item">
            <summary>
            Returns the ADXExcelTaskPanesCollectionItem that is about to create an ADXExcelTaskPane instance.
            </summary>
        </member>
        <member name="T:AddinExpress.XL.ADXInitializeEventArgs">
            <summary>
            Provides data for the ADXExcelTaskPanesManager.ADXInitialize event.
            </summary>
        </member>
        <member name="T:AddinExpress.XL.ExcelApplicationEvents">
            <summary> This member supports the Add-in Express infrastructure and is not
            intended to be used directly from your code.</summary>
        </member>
        <member name="M:AddinExpress.XL.ExcelApplicationEvents.#ctor(AddinExpress.XL.ADXExcelTaskPanesManager)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="eventsHandler">An instance of ADXExcelTaskPanesManager.</param>
        </member>
        <member name="M:AddinExpress.XL.ExcelApplicationEvents.Dispose">
            <summary> This member supports the Add-in Express infrastructure and is not
            intended to be used directly from your code.</summary>
        </member>
        <member name="T:AddinExpress.XL.ADXSyncEventType">
            <summary>
            The status of document/workbook synchronization.
            </summary>
        </member>
        <member name="T:AddinExpress.XL.ADXxlXmlImportResult">
            <summary>
            XML import results.
            </summary>
        </member>
        <member name="T:AddinExpress.XL.ADXxlXmlExportResult">
            <summary>
            XML export results.
            </summary>
        </member>
        <member name="T:AddinExpress.XL.ADXExcelTaskPanePosition">
            <summary>
            Positions avalable for a task pane.
            </summary>
        </member>
        <member name="T:AddinExpress.XL.ADXExcelAllowedDropPositions">
            <summary>The regions to which and from which the user can drag-and-drop the
            forms created by a given ADXExcelTaskPanesCollectionItem.</summary>
        </member>
        <member name="T:AddinExpress.XL.ADXExcelSplitter">
            <summary>
            The splitter.
            </summary>
        </member>
        <member name="F:AddinExpress.XL.ADXExcelSplitter.None">
            <summary>The user is unable to resize the form. The developer is able to resize the
            form programmatically.</summary>
        </member>
        <member name="F:AddinExpress.XL.ADXExcelSplitter.Standard">
            <summary>The user is able to resize, show, or hide the form. The developer is
            unable to resize the form programmatically.</summary>
        </member>
        <member name="T:AddinExpress.XL.Log">
            <summary> This member supports the Add-in Express infrastructure and is not
            intended to be used directly from your code.</summary>
        </member>
        <member name="M:AddinExpress.XL.Log.AddException(System.String,System.String)">
            <summary> This member supports the Add-in Express infrastructure and is not
            intended to be used directly from your code.
            </summary>
            <param name="mes">An exception message that will be added to the log.</param>
            <param name="detailedInfo">Detailed info about the exception that will be added to the log.</param>
        </member>
        <member name="M:AddinExpress.XL.Log.AddSystemInfo(System.String)">
            <summary> This member supports the Add-in Express infrastructure and is not
            intended to be used directly from your code.</summary>
            <param name="info">Info that will be added to the log.</param>
        </member>
        <member name="M:AddinExpress.XL.Log.AddMessage(System.String)">
            <summary> This member supports the Add-in Express infrastructure and is not
            intended to be used directly from your code.
            </summary>
            <param name="mes">A message that will be added to the log.</param>
        </member>
        <member name="M:AddinExpress.XL.Log.AddWarning(System.String)">
            <summary> This member supports the Add-in Express infrastructure and is not
            intended to be used directly from your code.
            </summary>
            <param name="mes">A warning message that will be added to the log.</param>
        </member>
        <member name="M:AddinExpress.XL.Log.AddIndent">
            <summary> This member supports the Add-in Express infrastructure and is not
            intended to be used directly from your code.</summary>
        </member>
        <member name="M:AddinExpress.XL.Log.RemoveIndent">
            <summary> This member supports the Add-in Express infrastructure and is not
            intended to be used directly from your code.</summary>
        </member>
        <member name="M:AddinExpress.XL.Log.SetCountLastMessages(System.Int32)">
            <summary> This member supports the Add-in Express infrastructure and is not
            intended to be used directly from your code.
            </summary>
            <param name="count">A count of messages that will be contained in the log.</param>
        </member>
        <member name="M:AddinExpress.XL.Log.GetMessages">
            <summary> This member supports the Add-in Express infrastructure and is not
            intended to be used directly from your code.</summary>
        </member>
        <member name="M:AddinExpress.XL.Log.ShowMessages(System.String)">
            <summary> This member supports the Add-in Express infrastructure and is not
            intended to be used directly from your code.</summary>
            <param name="caption">A caption of a window log.</param>
        </member>
        <member name="M:AddinExpress.XL.Log.ClearMessages">
            <summary> This member supports the Add-in Express infrastructure and is not
            intended to be used directly from your code.</summary>
        </member>
        <member name="M:AddinExpress.XL.Log.Save(System.String)">
            <summary> This member supports the Add-in Express infrastructure and is not
            intended to be used directly from your code.
            </summary>
            <param name="fileName">A file name that will be used for saving the log.</param>
        </member>
        <member name="P:AddinExpress.XL.Log.SaveLogToFilebyDefaultAfterAddingEachMessage">
            <summary> This member supports the Add-in Express infrastructure and is not
            intended to be used directly from your code.</summary>
        </member>
        <member name="P:AddinExpress.XL.Log.SaveLogToFilebyDefaultWhenManagerIsDisposed">
            <summary> This member supports the Add-in Express infrastructure and is not
            intended to be used directly from your code.</summary>
        </member>
        <member name="P:AddinExpress.XL.Log.LogFileByDefault">
            <summary> This member supports the Add-in Express infrastructure and is not
            intended to be used directly from your code.</summary>
        </member>
    </members>
</doc>

<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>AddinExpress.MSO.2005</name>
  </assembly>
  <members>
    <member name="T:AddinExpress.MSO.ADXAcObjectState">
      <summary>Microsoft Access object states.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXAcObjectType">
      <summary>Microsoft Access object types.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXAction">
      <summary>Drag_n_drop actions.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXAssignmentField">
      <summary>MS Project fields.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXAutoMacros">
      <summary>Macros that can be run with RunAutoMacro.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageAllowedTaskSizes">
      <summary></summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageChildrenAlignmentStyle">
      <summary>Defines the direction that child controls are laid out within a container.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageContentAlignmentStyle">
      <summary>Defines where child controls are aligned within a container control.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageControlExpandStyle">
      <summary>Defines how a control expands within its container.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageGroupButtonStyle">
      <summary>Defines the visual styles of a button control.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageGroupStyle">
      <summary>Defines the visual styles of a Backstage group control.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBaselines">
      <summary>MS Project baselines.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXClickOnceAction">
      <summary>Actions avalable in a ClickOnce Module when when delpoying the Add-in Express project with the ClickOnce Solution.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXConnectMode">
      <summary>Informs the add-in about how it was loaded.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXConsolidationFunction">
      <summary>Consolidation functions.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXCTPDockPosition">
      <summary>Custom task pane positions.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXCTPDockPositionRestrict">
      <summary>Position resctrictions for custom task panes.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXCTPOutlookWindow">
      <summary>Outlook windows that can host the task pane.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXDisconnectMode">
      <summary>Specifies how the add-in is disconnected.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXDocumentKind">
      <summary>The format types that Microsoft Word uses when automatically formatting a document.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXDocumentType">
      <summary>Word document types.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXDragState">
      <summary>Drag_n_drop states.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXEditionOption">
      <summary>Macintosh</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXEditionType">
      <summary>Macintosh</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXEnableSelection">
      <summary>Specifyies what can be selected on an Excel worksheet.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXEncoding">
      <summary>Office encodings.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelError">
      <summary>Excel error codes.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelWorkseetCommand">
      <summary>Excel worksheet commands.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelWorkseetFunction">
      <summary>Excel worksheet functions.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelWorksheetCommand">
      <summary>Excel worksheet commands.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelWorksheetFunction">
      <summary>Excel worksheet functions.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXFarEastLineBreakLanguageID">
      <summary>East Asian languages to use when breaking lines of text in a Word document or template.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXFarEastLineBreakLevel">
      <summary>Line break control levels.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXField">
      <summary>MS Project fields.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXHostBitness">
      <summary>The bitness of the host application</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXJustificationMode">
      <summary>Character spacing adjustment for a Word document or template.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXLetterheadLocation">
      <summary>Letter head locations.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXLetterStyle">
      <summary>Letter styles.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXLoadBehavior">
      <summary>The load behaviour of the add-in.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXMsoBarPosition">
      <summary>Initial positions of the command bar.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXMsoBarProtection">
      <summary>Command Bar protection types.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXMsoBarType">
      <summary>Command bar types.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXMsoButtonState">
      <summary>Command bar button states.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXMsoButtonStyle">
      <summary>Command bar button styles.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXMsoComboStyle">
      <summary>Command bar combo box styles.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXMsoCommandBarButtonHyperlinkType">
      <summary>Command bar button hyperlink types.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXNativeMSFControl">
      <summary>MS Forms controls.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOfficeHostApp">
      <summary>Host applications supported by the add-in.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlBarShortcutViewType">
      <summary>Icon sizes for the Outlook Bar shortcut.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlContextMenu">
      <summary>Outlook context menu types.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlDefaultFolders">
      <summary>Microsoft Outlook default folders.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlExplorerItemTypes">
      <summary>Default item types of thean Outlook folder.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlFormRegionIcon">
      <summary>Form region icon types.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlFormRegionMode">
      <summary>Form region loading modes.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlFormRegionSize">
      <summary>Form region types.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlInspectorItemTypes">
      <summary>Item types displayed in the Inspector window.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOLItemTypeAction">
      <summary>The action that Add-in Express executes if the type of the current item (for Outlook Inspector command bars) or the default item of the current
folder (for Outlook Explorer command bars) is specified in OlInspectorItemTypes or OlExplorerItemTypes, respectively.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOLSolutionFolderType">
      <summary>Outlook folder types supported in Outlook 2010 solution module.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlSyncState">
      <summary>Outlook synchronization process states.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXParseMsoXmlTypeAs">
      <summary>Specifies the type of the built-in Ribbon control when it is added to a custom tab, group, etc.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXProtectionType">
      <summary>Word protection types.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonCommandTarget">
      <summary>Ribbon control types overridable with the ADXRibbonCommand class.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonControlPropertyType">
      <summary>Ribbon control properties.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbons">
      <summary>Outlook item types supporting Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonXBoxStyle">
      <summary>Ribbon box styles.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonXControlSize">
      <summary>Ribbon control sizes.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonXItemSize">
      <summary>Ribbon item sizes.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXSalutationType">
      <summary>Salutation types.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXSaveBaselineFrom">
      <summary>The interim plan being copied from.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXSaveBaselineTo">
      <summary>The interim plan to which you are saving.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXSheetType">
      <summary>Excel sheet types.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXSheetVisibility">
      <summary>Excel sheet visibility constants.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXStartMode">
      <summary>Start modes of the add-in.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXStatistic">
      <summary>Word statistic options.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXSummaryMode">
      <summary>Ways for a summary to be displayed.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXSyncEventType">
      <summary>The status of document/workbook synchronization.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXxlCVError">
      <summary>Excel errors.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXxlXmlExportResult">
      <summary>XML export results.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXxlXmlImportResult">
      <summary>XML import results.</summary>
    </member>
    <member name="T:AddinExpress.MSO.OfficeColorScheme">
      <summary>Office 2007 color schemes.</summary>
    </member>
    <member name="T:AddinExpress.MSO.OutlookShutdownBehavior">
      <summary></summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXAbstractControlAdapter">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXAccessAppEvents">
      <summary>A component that represents Microsoft Access Application events.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXAddinAdditionalModule">
      <summary>The additional module class for the add-in. It is a container for other Add-in Express components.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXAddinAdditionalModuleCollection">
      <summary>Represents a collection of additional add-in modules.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXAddinAdditionalModuleItem">
      <summary>The class that represents an item of the ADXAddinAdditionalModuleCollection class.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXAddinModule">
      <summary>Represents the COM add-in for several Office applications. Implements required COM add-in interfaces. The class' designer is a container for
other Add-in Express components.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageButtonBase">
      <summary>Represents a Backstage Button control in the Office 2010 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageCheckBox">
      <summary>Represents a Backstage Check Box control in the Office 2010 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageCheckBoxBase">
      <summary>Represents a Backstage Check Box control in the Office 2010 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageComboBox">
      <summary>Represents a Backstage Combo Box control in the Office 2010 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageDropDown">
      <summary>Represents a Backstage Drop Down control in the Office 2010 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageEditBox">
      <summary>Represents a Backstage Edit Box control in the Office 2010 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageFastCommandButton">
      <summary>Represents a Backstage Fast Command Button control in the Office 2010 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageGroup">
      <summary>Represents a Backstage Group control in the Office 2010 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageGroupBox">
      <summary>Represents a Backstage Group Box control in the Office 2010 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageGroupButton">
      <summary>Represents a Backstage Group Button control in the Office 2010 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageHyperlink">
      <summary>Represents a Backstage Hyperlink control in the Office 2010 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageImageControl">
      <summary>Represents a Backstage Image Control control in the Office 2010 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageItem">
      <summary>Represents a Backstage Item control in the Office 2010 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageLabelControl">
      <summary>Represents a Backstage Label Control control in the Office 2010 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageLayoutContainer">
      <summary>Represents a Backstage Layout Container control in the Office 2010 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageMenuBase">
      <summary>Represents a Backstage Menu control in the Office 2010 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageMenuButton">
      <summary>Represents a Backstage Menu Button control in the Office 2010 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageMenuCheckBox">
      <summary>Represents a Backstage Menu Check Box control in the Office 2010 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageMenuGroup">
      <summary>Represents a Backstage Menu Group control in the Office 2010 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageMenuToggleButton">
      <summary>Represents a Backstage Menu Toggle Button control in the Office 2010 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstagePrimaryMenu">
      <summary>Represents a Backstage Primary Menu control in the Office 2010 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageRadioGroup">
      <summary>Represents a Backstage Radio Group control in the Office 2010 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageRegularButton">
      <summary>Represents a Backstage Regular Button control in the Office 2010 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageSubMenu">
      <summary>Represents a Backstage Sub Menu control in the Office 2010 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageTab">
      <summary>Represents a Backstage Tab control in the Office 2010 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageTaskFormGroup">
      <summary>Represents a Backstage Task Form Group control in the Office 2010 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageTaskFormGroupCategory">
      <summary>Represents a Backstage Task Form Group Category control in the Office 2010 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageTaskFormGroupTask">
      <summary>Represents a Backstage Task Form Group Task control in the Office 2010 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageTaskGroup">
      <summary>Represents a Backstage Task Group control in the Office 2010 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageTaskGroupCategory">
      <summary>Represents a Backstage Task Group Category control in the Office 2010 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageTaskGroupTask">
      <summary>Represents a Backstage Task Group Task control in the Office 2010 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstageView">
      <summary>Represents a Backstage View control in the Office 2010 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBaseAppEvents">
      <summary>The base class for the events of the host applications.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBaseControlCollection">
      <summary>Represents the common ancestor of all Add-in Express collections.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXBuiltInControl">
      <summary>Represents a built-in command bar control in the host application.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXCancelEventArgs">
      <summary>Provides data for cancellable events of Office applications.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXClickOnceModule">
      <summary>Represents a ClickOnce Module.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXClickOnceUIEventArgs">
      <summary>Supplies data for the ADXClickOnceModule.OnShowClickOnceCustomUI event.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXCommandBar">
      <summary>Represents a command bar in the host application. Provides the base class for the ADXOlExplorerCommandBar and ADXOlInspectorCommandBar
Outlook-specific command bars.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXCommandBarAdvancedControl">
      <summary>Represents a placeholder for a .NET control to be embedded into a command bar.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXCommandBarButton">
      <summary>Represents a button control on a command bar.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXCommandBarComboBox">
      <summary>Represents a combo box control on a command bar.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXCommandBarControl">
      <summary>Provides the base class for all command bar controls.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXCommandBarControlCollection">
      <summary>Represents a collection of command bar controls.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXCommandBarDropDownList">
      <summary>Represents a drop down list control on a command bar.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXCommandBarEdit">
      <summary>Represents an edit box control on a command bar.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXCommandBarPopup">
      <summary>Represents a pop-up control on a command bar. The class is a descendant of ADXCommandBarControl. Instances of the class can be accessed in the
ADXCommandBar.Controls remarks&gt;</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXCommandBarPopupControlCollection">
      <summary>Represents a collection of controls in a pop-up.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXContextMenu">
      <summary>Represents a command bar in the host application. Provides the base class for the ADXOlExplorerCommandBar and ADXOlInspectorCommandBar
Outlook-specific command bars.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXCustomCommandBarComboBox">
      <summary>Provides the base class for the ADXCommandBarComboBox, ADXCommandBarDropDownList, and ADXCommandBarEdit command bar controls.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXCustomTaskPane">
      <summary>Represents a custom task pane in Office 2007.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXCustomTaskPaneCollection">
      <summary>Represents a collection of custom task panes.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXDirtyEventArgs">
      <summary>Provides data for the Dirty event of the Outlook property page.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXDocumentInspector">
      <summary>An Outlook property page.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXDocumentModule">
      <summary>The base class for document-specific modules.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXErrorEventArgs">
      <summary>Provides data for the Error event of ADXAddinModule, ADXExcelAddinModule, or ADXXLLModule.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelAddinModule">
      <summary>This is the class that implements Excel Automation add-in interface.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelAppEvents">
      <summary>Provides Microsoft Excel Application events.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelFunctionAddEventArgs">
      <summary>Supplies data for the ADXXLLModule.OnBeforeFunctionAdd event.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelFunctionCategory">
      <summary>An item of the ADXExcelFunctionCategory</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelFunctionDescriptor">
      <summary>An item of the ADXExcelFunctionCollection.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelFunctionDescriptors">
      <summary>Represents a collection of function descriptors.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelInPlaceDoubleArray">
      <summary>Represents a modify-in-place array to be used as a parameter of an XLL function.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelInPlaceValue">
      <summary>Represents a modify-in-place argument of an XLL function.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelParameterDescriptor">
      <summary>An item of the ADXExcelParameterCollection.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelParameterDescriptors">
      <summary>Represents a collection of parameter descriptors.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelProtectedViewWindowBeforeCloseEventArgs">
      <summary>Supplies data for the SheetPivotTableBeforeAllocateChanges Excel event.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelProtectedViewWindowBeforeEditEventArgs">
      <summary>Supplies data for the SheetPivotTableBeforeAllocateChanges Excel event.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelRef">
      <summary>Represents an Excel range.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelSheetBeforeEventArgs">
      <summary>Supplies data for the following Excel events:

<list type="bullet"><item>SheetBeforeDoubleClick</item><item>SheetBeforeRightClick</item></list></summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelSheetModule">
      <summary>Add-in Express worksheet-specific module, represents one worksheet in an Excel workbook. The module provides a full set of methods, properties
and events available for an Excel workbook.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelSheetPivotTableBeforeChangesEventArgs">
      <summary>Supplies data for the SheetPivotTableBeforeAllocateChanges Excel event.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelWorkbookBeforeXmlExportEventArgs">
      <summary>Supplies data for the WorkbookBeforeXmlExport Excel event.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelWorkbookBeforeXmlImportEventArgs">
      <summary>Supplies data for the WorkbookBeforeXmlImport event in Excel.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelWorksheetEvents">
      <summary>Represents a set of business rules to be applied to the events of the Worksheet and Chart classes in Excel.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXExternalException">
      <summary>A wrapper class for an exception that occurs in the add-in code.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXFolderNamesCollection">
      <summary>Represents a collection of folder names.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXFrontPageAppEvents">
      <summary>Represents Microsoft FrontPage events.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXFrontPageBeforeWebPublishEventArgs">
      <summary>Provides data for the OnBeforeWebPublish event in FrontPage.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXHostActionEventArgs">
      <summary>Supplies data for the following Outlook events:

<list type="bullet"><item>ExplorerBeforeMaximize</item><item>ExplorerBeforeMinimize</item><item>ExplorerBeforeMove</item><item>ExplorerBeforeSize</item><item>ExplorerBeforeItemCopy</item><item>ExplorerBeforeItemCut</item><item>InspectorBeforeMaximize</item><item>InspectorBeforeMinimize</item><item>InspectorBeforeMove</item><item>InspectorBeforeSize</item></list></summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXHostAfterActionEventArgs">
      <summary>Supplies data for the following events:

<list type="bullet"><item>FrontPage - OnAfterWebPublish</item><item>FrontPage - OnAfterPageSave</item><item>Word - MailMergeDataSourceValidate</item><item>Word - MailMergeDataSourceValidate2</item></list></summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXHostBeforeActionEventArgs">
      <summary>Supplies data for the following events:

<list type="bullet"><item>Excel - WorkbookBeforeClose</item><item>Excel - WorkbookBeforePrint</item><item>FrontPage - OnWebClose</item><item>FrontPage - OnPageClose</item><item>MapPoint - BeforeClose</item><item>PowerPoint - WindowBeforeRightClick</item><item>PowerPoint - WindowBeforeDoubleClick</item><item>PowerPoint - PresentationBeforeSave</item><item>Project - ProjectBeforeResourceDelete</item><item>Project - ProjectBeforeAssignmentDelete</item><item>Project - ProjectBeforeTaskNew</item><item>Project - ProjectBeforeResourceNew</item><item>Project - ProjectBeforeAssignmentNew</item><item>Project - ProjectBeforeClose</item><item>Project - ProjectBeforePrint</item><item>Publisher - DocumentBeforeClose</item><item>Publisher - MailMergeBeforeRecordMerge</item><item>Publisher - MailMergeDataSourceValidate</item><item>Publisher - MailMergeInsertBarcode</item><item>Publisher - BeforePrint</item><item>Visio - QueryCancelQuit</item><item>Visio - QueryCancelWindowClose</item><item>Visio - QueryCancelDocumentClose</item><item>Visio - QueryCancelStyleDelete</item><item>Visio - QueryCancelMasterDelete</item><item>Visio - QueryCancelPageDelete</item><item>Visio - QueryCancelSelectionDelete</item><item>Visio - QueryCancelUngroup</item><item>Visio - QueryCancelConvertToGroup</item><item>Visio - QueryCancelSuspend</item><item>Visio - OnKeystrokeMessageForAddon</item><item>Word - DocumentBeforeClose</item><item>Word - DocumentBeforePrint</item><item>Word - WindowBeforeDoubleClick</item><item>Word - WindowBeforeRightClick</item><item>Word - MailMergeBeforeRecordMerge</item></list></summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXHostBeforeSaveEventArgs">
      <summary>Supplies data for the following BeforeSave events:

<list type="bullet"><item>Excel - WorkbookBeforeSave</item><item>FrontPage - OnBeforePageSave</item><item>MapPoint - BeforeSave</item><item>Project - ProjectBeforeSave</item><item>Word - DocumentBeforeSave</item></list></summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXInfoPathAppEvents">
      <summary>Represents Microsoft InfoPath Application events.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXKeyboardShortcut">
      <summary>Represents a keyboard shortcut in the host application.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXKeyDownEventArgs">
      <summary>Supplies datd for the ADXAddinModule.OnKeyDown event.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXLoaderSupport">
      <summary>This class supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXMainMenu">
      <summary>Represents a command bar in the host application. Provides the base class for the ADXOlExplorerCommandBar and ADXOlInspectorCommandBar
Outlook-specific command bars.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXMapPointAppEvents">
      <summary>Provides MapPoint events.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXMSFormsCheckBox">
      <summary>Summary description for ADXMSFormsCheckBox.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXMSFormsComboBox">
      <summary>Summary description for ADXMSFormsComboBox.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXMSFormsCommandButton">
      <summary>Summary description for ADXMSFormsCommandButton.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXMSFormsControl">
      <summary>An ancestor of all MSForms controls components.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXMSFormsImage">
      <summary>Summary description for ADXMSFormsImage.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXMSFormsLabelControl">
      <summary>Summary description for ADXMSFormsLabelControl.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXMSFormsListBox">
      <summary>Summary description for ADXMSFormsListBox.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXMSFormsOptionButton">
      <summary>Summary description for ADXMSFormsOptionButton.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXMSFormsScrollBar">
      <summary>Summary description for ADXMSFormsScrollBar.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXMSFormsSpinButton">
      <summary>Summary description for ADXMSFormsSpinButton.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXMSFormsTextBox">
      <summary>Summary description for ADXMSFormsTextBox.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXMSFormsToggleButton">
      <summary>Summary description for ADXMSFormsToggleButton.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlBarGroup">
      <summary>Represents a group of shortcuts in the Shortcuts pane (Outlook Bar) of an explorer window, an item in the ADXOlBarGroupCollection collection.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlBarGroupCollection">
      <summary>Represents a collection of Outlook bar groups.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlBarShortcut">
      <summary>Represents a shortcut in the Shortcuts pane (Outlook Bar) of an explorer window, an item of the ADXOlBarShortcutCollection collection.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlBarShortcutCollection">
      <summary>Represents a collection of shortcuts in a group of shortcuts in the Shortcuts pane of an explorer window.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlBarShortcutManager">
      <summary>The manager of shortcuts and shortcut groups in the Shortcuts pane (Outlook Bar) of the explorer window.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlBeforeFolderSharingDialogEventArgs">
      <summary>Provides data for the BeforeFolderSharingDialog event in Outlook 2007.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlExplorerBeforeFolderSwitchEventArgs">
      <summary>Provides data for the ExplorerBeforeFolderSwitch event in Outlook.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlExplorerBeforeItemPasteEventArgs">
      <summary>Supplies data for the ExplorerBeforeItemPaste event in Outlook.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlExplorerBeforeViewSwitchEventArgs">
      <summary>Supplies data for the ExplorerBeforeViewSwitch event in Outlook.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlExplorerCommandBar">
      <summary>Represents a command bar in the Outlook Explorer window.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlExplorerMainMenu">
      <summary>Represents the menu bar in the Outlook Explorer window.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlFolderPage">
      <summary>Represents a property page for the Folder Properties dialog. An item of the ADXOlFolderPageCollection.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlFolderPageCollection">
      <summary>Represents a collection of property pages for the Folder Property dialog in Outlook.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlGetFormRegionIconEventArgs">
      <summary>Supplies data for the ADXOutlookAppEvents.OnGetFormRegionIcon event.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlGetFormRegionManifestEventArgs">
      <summary>Supplies data for the ADXOutlookAppEvents.OnGetFormRegionManifest event.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlGetFormRegionStorageEventArgs">
      <summary>Supplies data for the ADXOutlookAppEvents.OnGetFormRegionStorage event.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlInspectorCommandBar">
      <summary>Represents a command bar in the Outlook Inspector window.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlInspectorMainMenu">
      <summary>Represents a command bar in the Outlook Inspector window.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlItemSendEventArgs">
      <summary>Supplies data for the ItemSend event in Outlook.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlPageChangeEventArgs">
      <summary>Provides data for the PageChange event in Outlook 2007.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlPropertyPage">
      <summary>Represents a custom property page for the Options dialog (menu Tools / Options in Outlook).</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOLSolutionFolder">
      <summary>Represents a solution folder in Outlook.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOLSolutionFolders">
      <summary>Represents a collection of the solution module folders.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOLSolutionModule">
      <summary>Represents the Solutions module in Outlook. It is a container for the Solution folder items.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOptionPageAddEventArgs">
      <summary>Provides data for the following Outlook events:

<list type="bullet"><item>BeforeOptionPageAdd</item><item>NamespaceBeforeOptionPageAdd</item></list></summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOutlookAppEvents">
      <summary>Provides Microsoft Outlook Application events.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOutlookFoldersEvents">
      <summary>Represents a set of business rules to be applied to the events of the Folders collection of a given Outlook folder and its sub-folders
(optional).</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOutlookItemEvents">
      <summary>Represents a set of business rules to be applied to the events of an Outlook item.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXOutlookItemsEvents">
      <summary>Represents a set of business rules to be applied to the events of the Items collection of a given Outlook folder and its sub-folders (optional).</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXPowerPointAppEvents">
      <summary>Provides PowerPoint events.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXPowerPointPresentationBeforeCloseEventArgs">
      <summary>Supplies data for the PresentationBeforeClose event in PowerPoint.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXPowerPointProtectedViewWindowBeforeCloseEventArgs">
      <summary>Supplies data for the ProtectedViewWindowBeforeClose event in PowerPoint.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXPowerPointProtectedViewWindowBeforeEditEventArgs">
      <summary>Supplies data for the ProtectedViewWindowBeforeEdit event in PowerPoint.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectAfterCubeBuiltEventArgs">
      <summary>Supplies data for the AfterCubeBuilt event in Project.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectAppEvents">
      <summary>Provides Microsoft Project events.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectBeforeAssignmentChangeEventArgs">
      <summary>Supplies data for the ProjectBeforeAssignmentChange event in Project.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectBeforeChangeEventArgs">
      <summary>Supplies data for the following Project events:

<list type="bullet"><item>ProjectBeforeTaskChange</item><item>ProjectBeforeResourceChange</item></list></summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectBeforePublishEventArgs">
      <summary>Supplies data for the ProjectBeforePublish event in Project.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectLoadWebPageEventArgs">
      <summary>Supplies data for the LoadWebPage event in Project.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectLoadWebPaneEventArgs">
      <summary>Supplies data for the LoadWebPane event in Project.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXPublisherAppEvents">
      <summary>Represents events of Microsoft Publisher Application.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXPublisherBeforeMergeEventArgs">
      <summary>Provides data for the MailMergeBeforeMerge in Publisher.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXPublisherGenerateBarcodeEventArgs">
      <summary>Provides data for the MailMergeGenerateBarcode event in Publisher 2007.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRemoteObject">
      <summary>This class is obsolete. To access public members of your add-in class, use the Object property of the Office.COMAddin class and late binding. For
instance, OfficeApp.COMAddins.Item("MyAddin.ProgId").Object.MyMethod().</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonBeforeLoadEventArgs">
      <summary>Provides data for the OnRibbonBeforeLoad event of ADXAddinModule.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonBox">
      <summary>Represents a Box control in the Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonButton">
      <summary>Represents a Button control in the Office 2007 Ribbon user interface.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonButtonGroup">
      <summary>Represents a ButtonGroup control in the Office 2007 Ribbon user interface.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonCheckBox">
      <summary>Represents a CheckBox control in the Office 2007 Ribbon user interface.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonComboBox">
      <summary>Represents a ComboBox control in the Office 2007 Ribbon user interface.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonCommand">
      <summary>Represents an overridden control in the Office 2007 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonContextMenu">
      <summary>Represents Office Context Menu in the Office 2010 Ribbon user interface.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonControlCollection">
      <summary>Represents a collection of the ribbon controls.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonCreateMenuEventArgs">
      <summary>Supplies data for the OnCreate event of ADXRibbonMenu.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonCustomComboBox">
      <summary>The common ancestor for the ADXRibbonEditBox and ADXRibbonComboBox classes.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonCustomControl">
      <summary>The common ancestor of all Ribbon components.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonCustomDropDown">
      <summary>The common ancestor for ADXRibbonGallery and ADXRibbonDropDown.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonDialogBoxLauncher">
      <summary>Represents a DialogBoxLauncher control in the Office 2007 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonDropDown">
      <summary>Represents a DropDown control in the Office 2007 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonEditBox">
      <summary>Represents an EditBox control in the Office 2007 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonGallery">
      <summary>Represents a Gallery control in the Office 2007 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonGroup">
      <summary>Represents a Group control in the Office 2007 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonItem">
      <summary>Represents a static item in a gallery, dropdown, or combobox.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonItemPropertyChangingEventArgs">
      <summary>Provides data for the PropertyChanging event of a Ribbon component.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonLabel">
      <summary>Represents a Label control in the Office 2007 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonMenu">
      <summary>Represents the Menu or DynamicMenu control in the Office 2007 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonMenuSeparator">
      <summary>Represents a separator line (which can optionally include a text label) between menu items.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonOfficeMenu">
      <summary>Represents Office Menu in the Office 2007 Ribbon user interface.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonOnActionEventArgs">
      <summary>Supplies data for the events of the Add-in Express Ribbon components.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonOnCreateMenuEventArgs">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonPropertyChangingEventArgs">
      <summary>Provides data for the PropertyChanging event of a Ribbon component.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonQuickAccessToolbar">
      <summary>Represents the Quick Access Toolbar in the Office 2007 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonSeparator">
      <summary>Represents a Separator control in the Office 2007 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonSplitButton">
      <summary>Represents the SplitButton control in the Office 2007 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonTab">
      <summary>Represents a Tab control in the Office 2007 Ribbon UI.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXSendMessageEventArgs">
      <summary>Provides data for the ADXAddinModule.OnSendMessage event.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXStringCollection">
      <summary>A string collection.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXTaskPane">
      <summary>Represents an item of the ADXTaskPaneCollection.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXTaskPane.ADXCustomTaskPaneInstance">
      <summary>Represents an instance of the task pane.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXTaskPaneCreateEventArgs">
      <summary>Provides data for the OnTaskPaneBeforeCreate event of ADXAddinModule.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXTaskPaneShowEventArgs">
      <summary>Provides data for the OnTaskPaneBeforeShow event of ADXAddinModule.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXVisioAppEvents">
      <summary>Provides Visio events.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXVisioKeyPressEventArgs">
      <summary>Supplies data for the KeyPress event in Visio.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXVisioKeyUpDownEventArgs">
      <summary>Supplies data for the KeyDown and KeyUp events in Visio.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXVisioMouseEventArgs">
      <summary>Supplies data for MouseUp, MouseDown and MouseMove events in Visio.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXVisioQueryCancelGroupEventArgs">
      <summary>Supplies data for the QueryCancelGroup event in Visio.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXVisioQueryCancelSuspendEventsEventArgs">
      <summary>Supplies data for the QueryCancelSuspendEvents event in Visio.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXWordAppEvents">
      <summary>Represents Microsoft Word Application events.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXWordDocumentModule">
      <summary>Add-in Express document-specific module, represents one Word document. The module provides a full set of methods, properties and events available
for a Word document.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXWordEPostageInsertExEventArgs">
      <summary>Provides data for the EPostageInsertEx event in Word.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXWordMailBeforeMergeEventArgs">
      <summary>Provides data for the MailMergeBeforeMerge event in Word.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXWordMailMergeStateChangeEventArgs">
      <summary>Provides data for the MailMergeWizardStateChange event in Word.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXWordProtectedViewWindowBeforeCloseEventArgs">
      <summary>Provides data for the ProtectedViewWindowBeforeClose event in Word.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXWordProtectedViewWindowBeforeEditEventArgs">
      <summary>Provides data for the ProtectedViewWindowBeforeEdit event in Word.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXWordXMLSelectionChangeEventArgs">
      <summary>Provides data for the XMLSelectionChange event in Word.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXXLLAdditionalModule">
      <summary>The additional module class for the add-in. It is a container for other Add-in Express components.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXXLLAdditionalModuleCollection">
      <summary>Represents a collection of additional add-in modules.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXXLLAdditionalModuleItem">
      <summary>The class that represents an item of the ADXXLLAdditionalModuleCollection class.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ADXXLLModule">
      <summary>Represents an XLL add-in in Excel.</summary>
    </member>
    <member name="T:AddinExpress.MSO.PictureConverter">
      <summary>This class supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:AddinExpress.MSO.RefreshPropertiesListAttribute">
      <summary>This class supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:AddinExpress.MSO.SupportedInVisualDesignerAttribute">
      <summary>This class supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:AddinExpress.MSO.XPThemes">
      <summary>Allows applying XP themes to a form opened within the code of an Add-in Express project. Doesn't require an application's manifest to exist.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXAccessAppEvents.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the ADXAccessAppEvents class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAccessAppEvents.#ctor">
      <summary>Initializes a new instance of the ADXAccessAppEvents class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAccessAppEvents.ClassName">
      <summary>Gets the value that represents the class identifier of the component.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXAccessAppEvents.AccessIdle">
      <summary>Occurs when the internal timer interval has elapsed.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXAccessAppEvents.CloseDatabase">
      <summary>Occurs when a database is closed.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXAccessAppEvents.CurrentObjectChanged">
      <summary>Occurs when the user manipulates UI.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXAccessAppEvents.OpenDatabase">
      <summary>Occurs when a database is opened.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinAdditionalModule.#ctor">
      <summary>Initializes a new instance of the ADXAddinAdditionalModule class.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinAdditionalModule.CommandBarByName(System.String)">
      <summary>Returns an ADXCommandBar object with the specified command bar name.</summary>
      <param name="commandBarName">The name of the ADXCommandBar to be returned.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinAdditionalModule.CommandBarIndexByName(System.String)">
      <summary>Returns the index (zero-based) of an ADXCommandBar object with the specified command bar name.</summary>
      <param name="commandBarName">The name of the ADXCommandBar to be returned.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinAdditionalModule.CommandBarIndexOf(AddinExpress.MSO.ADXCommandBar)">
      <summary>Returns the index (zero-based) of the specified ADXCommandBar.</summary>
      <param name="commandBar">The ADXCommandBar whose index you want to retrieve.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinAdditionalModule.CommandBars(System.Int32)">
      <summary>Returns an ADXCommandBar instance at the specified index (zero-based) in the add-in's collection of command bars.</summary>
      <param name="index">The index of the collection to access.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinAdditionalModule.GetContainer">
      <summary>Returns the add-in module container.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinAdditionalModule.RegisterModuleInternal(System.Type)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="key"></param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinAdditionalModule.UnregisterModuleInternal(System.Type)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="key"></param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinAdditionalModule.FindRibbonControl(System.String)">
      <summary>Searches for a Ribbon control using the specified string identifer.</summary>
      <param name="id">The identifier of the Ribbon control to search for. A string that specifies the Ribbon control.</param>
      <returns>Either an AddinExpress.MSO.IADXRibbonComponent or a null reference (Nothing in Visual Basic)</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinAdditionalModule.FindRibbonControl(System.Int32)">
      <summary>Searches for a Ribbon control using the specified tag.</summary>
      <param name="tag">The tag of the Ribbon control to search for.</param>
      <returns>Either an AddinExpress.MSO.IADXRibbonComponent or a null reference (Nothing in Visual Basic)</returns>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinAdditionalModule.CommandBarsCount">
      <summary>Returns the number of command bars.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinAdditionalModule.Description">
      <summary>Returns the additional module description.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinAdditionalModule.MainModule">
      <summary>Returns the add-in module instance.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinAdditionalModule.ModuleName">
      <summary>Returns the additional module name.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinAdditionalModuleCollection.#ctor(AddinExpress.MSO.ADXAddinModule)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="owner">The AddinModule which is the owner of the collection.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinAdditionalModuleCollection.Add(AddinExpress.MSO.ADXAddinAdditionalModuleItem)">
      <summary>Adds the specified ADXAddinAdditionalModuleItem to the collection.</summary>
      <param name="module">The ADXAddinAdditionalModuleItem to add.</param>
      <returns>The same ADXAddinAdditionalModuleItem if it was either previously stored or just added to the collection; otherwise a null reference (Nothing in
Visual Basic).</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinAdditionalModuleCollection.Clear">
      <summary>Removes all modules from the collection.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinAdditionalModuleCollection.Contains(System.Object)">
      <summary>Indicates whether a specified module exists in the collection.</summary>
      <param name="module">The module to locate in the collection.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinAdditionalModuleCollection.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinAdditionalModuleCollection.IndexOf(AddinExpress.MSO.ADXAddinAdditionalModuleItem)">
      <summary>Returns the index of the specified module in the collection.</summary>
      <param name="module">The module to search for in the collection.</param>
      <returns>Integer.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinAdditionalModuleCollection.Remove(AddinExpress.MSO.ADXAddinAdditionalModuleItem)">
      <summary>Removes the specified module from the module collection.</summary>
      <param name="module">The module to remove.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinAdditionalModuleCollection.RemoveAt(System.Int32)">
      <summary>Removes the module from the module collection at the specified indexed location.</summary>
      <param name="index">The index of the module to remove.</param>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinAdditionalModuleCollection.Item(System.Int32)">
      <summary>Returns the ADXAddinAdditionalModuleItem at the specified index.</summary>
      <param name="index">The index of the ADXAddinAdditionalModuleItem to get.</param>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinAdditionalModuleCollection.Owner">
      <summary>Returns the owner of the collection.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinAdditionalModuleCollection.Item(System.Int32)">
      <summary>Returns the ADXAddinAdditionalModuleItem at the specified index.</summary>
      <param name="index">The index of the ADXAddinAdditionalModuleItem to get.</param>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinAdditionalModuleCollection.Item(System.String)">
      <summary>Returns the ADXAddinAdditionalModuleItem with the specified name.</summary>
      <param name="moduleName">The name of the ADXAddinAdditionalModuleItem additional module to get.</param>
      <returns>The ADXAddinAdditionalModuleItem or a null reference (Nothing in Visual Basic).</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinAdditionalModuleItem.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the ADXAddinAdditionalModuleItem class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinAdditionalModuleItem.#ctor">
      <summary>Initializes a new instance of the ADXAddinAdditionalModuleItem class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinAdditionalModuleItem.Collection">
      <summary>Returns a collection that contains the item.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinAdditionalModuleItem.Enabled">
      <summary>Returns or sets whether the module is used.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinAdditionalModuleItem.Module">
      <summary>Returns an instance of the additional module.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinAdditionalModuleItem.ModuleProgID">
      <summary>Returns the ProgID of the additional module.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.#ctor">
      <summary>Initializes a new instance of the ADXAddinModule class.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.ActivateRibbonTab(System.String)">
      <summary>Activates the specified custom tab on the Microsoft Office Fluent Ribbon UI. Uses the fully qualified name of the tab.</summary>
      <param name="ControlID">Specifies the identifier of the custom Ribbon tab to be activated.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.ActivateRibbonTabMso(System.String)">
      <summary>Activates the specified built-in tab.</summary>
      <param name="ControlID">Specifies the identifier of the custom Ribbon tab to be activated.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.ActivateRibbonTabQ(System.String,System.String)">
      <summary>Activates the specified custom tab on the Microsoft Office Fluent Ribbon UI. Uses the fully qualified name of the tab which includes the
identifier and the namespace of the tab.</summary>
      <param name="ControlID">Specifies the identifier of the custom Ribbon tab to be activated.</param>
      <param name="Namespace">Specifies the namespace of the tab element.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.ADXRegister(System.Type)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="t">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.ADXUnregister(System.Type)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="t">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.backstageOnHide_Callback(System.Object)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="context">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.backstageOnShow_Callback(System.Object)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="context">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.CheckForMSIUpdates">
      <summary>If a new version of the application is available, the method returns a formatted string: a URL or UNC path.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.CheckForUpdates">
      <summary>Runs the add-in's ClickOnce application to check if there is a new version of the add-in in the add-in deployment location. Can be used only if
the add-in was deployed with Add-in Express ClickOnce Solution.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.CommandBarByName(System.String)">
      <summary>Returns an ADXCommandBar object with the specified command bar name.</summary>
      <param name="commandBarName">The name of the ADXCommandBar to be returned.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.CommandBarByTag(System.String)">
      <summary>Returns an ADXCommandBar object with the specified tag.</summary>
      <param name="commandBarTag">The tag of the ADXCommandBar to be returned.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.CommandBarIndexByName(System.String)">
      <summary>Returns the index (zero-based) of an ADXCommandBar object with the specified command bar name.</summary>
      <param name="commandBarName">The name of the ADXCommandBar to be returned.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.CommandBarIndexOf(AddinExpress.MSO.ADXCommandBar)">
      <summary>Returns the index (zero-based) of the specified ADXCommandBar.</summary>
      <param name="commandBar">The ADXCommandBar whose index you want to retrieve.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.CommandBars(System.Int32)">
      <summary>Returns an ADXCommandBar instance at the specified index (zero-based) in the add-in's collection of command bars.</summary>
      <param name="index">The index of the collection to access.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.CreateProcess(System.String)">
      <summary>Creates a new process of the same integrity level as its parent process. The new process executes the specified executable file.</summary>
      <param name="fullPath">The path to the executable file to launch.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.FindCommandBarObj(System.String)">
      <summary>Searches for a command bar with the specified name.</summary>
      <param name="cmdBarName">The name of the command bar to search for.</param>
      <returns>Either a Microsoft.Office.Core.CommandBar COM object or null (Nothing in VB)</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.getAltText_Callback(AddinExpress.MSO.IRibbonControl)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.GetContainer">
      <summary>Returns the add-in module container.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.getContent_Callback(AddinExpress.MSO.IRibbonControl)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.getDescription_Callback(AddinExpress.MSO.IRibbonControl)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.getEnabled_Callback(AddinExpress.MSO.IRibbonControl)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.getHelperText_Callback(AddinExpress.MSO.IRibbonControl)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.getImage_Callback(AddinExpress.MSO.IRibbonControl)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.getImages_Callback(System.String)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="imageName">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.getItemCount_Callback(AddinExpress.MSO.IRibbonControl)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.getItemHeight_Callback(AddinExpress.MSO.IRibbonControl)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.getItemID_Callback(AddinExpress.MSO.IRibbonControl,System.Int32)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
      <param name="index">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.getItemImage_Callback(AddinExpress.MSO.IRibbonControl,System.Int32)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
      <param name="index">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.getItemImageMso_Callback(AddinExpress.MSO.IRibbonControl,System.Int32)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
      <param name="index">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.getItemLabel_Callback(AddinExpress.MSO.IRibbonControl,System.Int32)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
      <param name="index">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.getItemScreenTip_Callback(AddinExpress.MSO.IRibbonControl,System.Int32)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
      <param name="index">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.getItemSuperTip_Callback(AddinExpress.MSO.IRibbonControl,System.Int32)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
      <param name="index">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.getItemWidth_Callback(AddinExpress.MSO.IRibbonControl)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.getKeytip_Callback(AddinExpress.MSO.IRibbonControl)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.getLabel_Callback(AddinExpress.MSO.IRibbonControl)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.GetOutlookWindowHandle(System.Object)">
      <summary>Returns an IntPtr representing a Windows handle for the specified Outlook window.</summary>
      <param name="outlookWindow">The Outlook window whose handle is to be returned.</param>
      <returns>The handle of the specified Outlook window.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.getPressed_Callback(AddinExpress.MSO.IRibbonControl)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.GetProgID">
      <summary>Returns the ProgID of the add-in.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.GetRibbonControlCaption(System.String)">
      <summary>Returns the caption of the built-in Ribbon control specified by idMso. If the control cannot be found, returns an empty string.</summary>
      <param name="idMso">The id of the built-in Ribbon control.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.GetRibbonControlEnabled(System.String)">
      <summary>Returns the enabled state of the built-in Ribbon control specified by idMso.</summary>
      <param name="idMso">The id of the built-in Ribbon control.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.GetRibbonControlImage(System.String,System.Int32,System.Int32)">
      <summary>Returns an IPictureDisp object of the control image identified by the idMso parameter scaled to the dimensions specified by width and height.</summary>
      <param name="idMso">The id of the built-in Ribbon control.</param>
      <param name="width">The width of the image.</param>
      <param name="height">The height of the image.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.GetRibbonControlPressed(System.String)">
      <summary>Returns the pressed state of the built-in Ribbon control specified by idMso.</summary>
      <param name="idMso">The id of the built-in Ribbon control.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.GetRibbonControlScreentip(System.String)">
      <summary>Returns the ScreenTip of the built-in Ribbon control specified by idMso.</summary>
      <param name="idMso">The id of the built-in Ribbon control.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.GetRibbonControlSupertip(System.String)">
      <summary>Returns the SuperTip of the built-in Ribbon control specified by idMso.</summary>
      <param name="idMso">The id of the built-in Ribbon control.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.GetRibbonControlVisible(System.String)">
      <summary>Returns the visible state of the built-in Ribbon control specified by idMso.</summary>
      <param name="idMso">The id of the built-in Ribbon control.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.getScreenTip_Callback(AddinExpress.MSO.IRibbonControl)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.getSelectedItemId_Callback(AddinExpress.MSO.IRibbonControl)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.getSelectedItemIndex_Callback(AddinExpress.MSO.IRibbonControl)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.getShowImage_Callback(AddinExpress.MSO.IRibbonControl)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.getShowLabel_Callback(AddinExpress.MSO.IRibbonControl)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.getSize_Callback(AddinExpress.MSO.IRibbonControl)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.getStyle_Callback(AddinExpress.MSO.IRibbonControl)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.getSuperTip_Callback(AddinExpress.MSO.IRibbonControl)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.getTarget_Callback(AddinExpress.MSO.IRibbonControl)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.getText_Callback(AddinExpress.MSO.IRibbonControl)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.getTitle_Callback(AddinExpress.MSO.IRibbonControl)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.getVisible_Callback(AddinExpress.MSO.IRibbonControl)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.InitializeLifetimeService">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.IsMSINetworkDeployed">
      <summary>Returns True if the add-in was registered/installed via MSI-based Web installer.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.IsMSIUpdatable">
      <summary>Returns True if the user is permited to update the application. In Vista or Windows 7, it is always True.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.IsNetworkDeployed">
      <summary>Returns True if the add-in was installed via ClickOnce.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.onActionCommon_Callback(AddinExpress.MSO.IRibbonControl)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.onActionCommonRepurposed_Callback(AddinExpress.MSO.IRibbonControl,System.Boolean@)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
      <param name="cancelDefault">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.onActionSelected_Callback(AddinExpress.MSO.IRibbonControl,System.String,System.Int32)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
      <param name="selectedId">...</param>
      <param name="selectedIndex">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.onActionState_Callback(AddinExpress.MSO.IRibbonControl,System.Boolean)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
      <param name="pressed">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.onActionStateRepurposed_Callback(AddinExpress.MSO.IRibbonControl,System.Boolean,System.Boolean@)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
      <param name="pressed">...</param>
      <param name="cancelDefault">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.OnChange_Callback(AddinExpress.MSO.IRibbonControl,System.String)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
      <param name="text">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.RibbonControlExecute(System.String)">
      <summary>Executes the action associated with the built-in Ribbon control specified by idMso.</summary>
      <param name="idMso">The id of the built-in Ribbon control to execute.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.ribbonLoaded_Callback(AddinExpress.MSO.IRibbonUI)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="ribbon">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.ShowErrorDialog(System.Object,System.Exception)">
      <summary>Shows the error dialog displaying information on the exception.</summary>
      <param name="sender">An object that has initiated the dialog.</param>
      <param name="e">An exception.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.UninstallControls">
      <summary>Uninstalls add-in command bars and controls.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.UnmanagedCallToRegisterClass(System.Boolean)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="mode">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.UpdateLoaderManifest">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.AddToContainer(AddinExpress.MSO.ADXCommandBar)">
      <summary>Adds the specified ADXCommandBar to the add-in module container.</summary>
      <param name="cmdBar">The ADXCommandBar to add.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.AddToContainer(AddinExpress.MSO.ADXCommandBarControl)">
      <summary>Adds the specified ADXCommandBarControl to the add-in module container.</summary>
      <param name="control">The ADXCommandBarControl to add.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.CommandBarAdd(System.Type,System.String)">
      <summary>Adds an ADXCommandBar to the add-in module at run-time.</summary>
      <param name="commandBarType">The type of the command bar to be added.</param>
      <param name="commandBarName">The name of the command bar to be added.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.CommandBarAdd(System.Type,System.String,AddinExpress.MSO.ADXMsoBarPosition,System.Boolean)">
      <summary>Adds an ADXCommandBar to the add-in module at run-time.</summary>
      <param name="commandBarType">The type of the command bar to be added.</param>
      <param name="commandBarName">The name of the command bar to be added.</param>
      <param name="position">The position of the command bar to be added.</param>
      <param name="temporary">If True, the command bar is temporary.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.DeleteFromContainer(AddinExpress.MSO.ADXCommandBar)">
      <summary>Deletes the specified ADXCommandBar from the add-in module container.</summary>
      <param name="cmdBar">The command bar to delete.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.DeleteFromContainer(AddinExpress.MSO.ADXCommandBarControl)">
      <summary>Deletes the specified ADXCommandBarControl from the add-in module container.</summary>
      <param name="control">The control to delete.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.FindControlObj(System.Object,System.Object,System.Int32)">
      <summary>Searches for a command bar control using the specified parameters.</summary>
      <param name="cmdBar">A Microsoft.Office.Core.CommandBar COM object representing the command bar in which the control is searched for.</param>
      <param name="type">The type of the control to search for. A value of the MsoControlType type. Can also be null (Nothing in VB) or Type.Missing.</param>
      <param name="id">The identifier of the control to search for. An integer that specifies a built-in control.</param>
      <returns>Either a Microsoft.Office.Core.CommandBarControl COM object or null (Nothing in VB)</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.FindControlObj(System.Object,System.Object,System.String)">
      <summary>Searches for a command bar control using the specified parameters.</summary>
      <param name="cmdBar">A Microsoft.Office.Core.CommandBar COM object representing the command bar in which the control is searched for.</param>
      <param name="type">The type of the control to search for. A value of the MsoControlType type. Can also be null (Nothing in VB) or Type.Missing.</param>
      <param name="tag">The tag of the control to search for.</param>
      <returns>Either a Microsoft.Office.Core.CommandBarControl COM object or null (Nothing in VB)</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.FindControlObj(System.Object,System.Int32)">
      <summary>Searches for a command bar control using the specified parameters.</summary>
      <param name="type">The type of the control to search for. A value of the MsoControlType type. Can also be null (Nothing in VB) or Type.Missing.</param>
      <param name="id">The identifier of the control to search for. An integer that specifies a built-in control.</param>
      <returns>Either a Microsoft.Office.Core.CommandBarControl COM object or null (Nothing in VB)</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.FindControlObj(System.Object,System.String)">
      <summary>Searches for a command bar control using the specified parameters.</summary>
      <param name="type">The type of the control to search for. A value of the MsoControlType type. Can also be null (Nothing in VB) or Type.Missing.</param>
      <param name="tag">The tag of the control to search for.</param>
      <returns>Either a Microsoft.Office.Core.CommandBarControl COM object or null (Nothing in VB)</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.FindRibbonControl(System.String)">
      <summary>Searches for a Ribbon control using the specified string identifier.</summary>
      <param name="id">The identifier of the Ribbon control to search for. A string that specifies the Ribbon control.</param>
      <returns>Either an AddinExpress.MSO.IADXRibbonComponent or a null reference (Nothing in Visual Basic)</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.FindRibbonControl(System.Int32)">
      <summary>Searches for a Ribbon control using the specified tag.</summary>
      <param name="tag">The tag of the Ribbon control to search for.</param>
      <returns>Either an AddinExpress.MSO.IADXRibbonComponent or a null reference (Nothing in Visual Basic)</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.SendMessage(System.Int32,System.IntPtr,System.IntPtr)">
      <summary>Sends a custom message to the internal window of the add-in. When the message is received, the Add-in Module raises the OnSendMessage event.</summary>
      <param name="message">Message identifier.</param>
      <param name="wParam">Additional message-specific information</param>
      <param name="lParam">Additional message-specific information</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXAddinModule.SendMessage(System.Int32)">
      <summary>Sends a custom message to the internal window of the add-in. When the message is received, the Add-in Module raises the OnSendMessage event.</summary>
      <param name="message">Message identifier.</param>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinModule.AddinName">
      <summary>Returns or sets the name of the add-in.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinModule.ADXAppDomain">
      <summary>Returns an instance of the add-in application domain.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinModule.COMAddinObj">
      <summary>Returns an object representing the instance of the add-in from the COMAddIns collection of the host application.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinModule.CommandBarsCount">
      <summary>Returns the number of ADXCommandBar objects in the Add-in Module.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinModule.CommandBarsObj">
      <summary>Returns the command bars collection (a COM object) of the host application.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinModule.ConnectMode">
      <summary>Returns the connection mode of the add-in.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinModule.Description">
      <summary>Returns or sets the add-in description.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinModule.DisplayAlerts">
      <summary>Specifies to show alerts when the add-in is being installed and the host is not closed.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinModule.FolderPages">
      <summary>Returns an ADXOlFolderPageCollection collection of Outlook property pages for the Folder Properties dialog.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinModule.GenerateInstallInfo">
      <summary>If true, stores the information about all command bars in the adxloader.dll.manifest file. Designt-time only.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinModule.HandleShortcuts">
      <summary>Returns or sets a value specifying if keyboard shortcuts are processed by the add-in.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinModule.HostApplication">
      <summary>Returns an instance of the Application object of the host application.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinModule.HostBitness">
      <summary>Returns the bitness the host application.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinModule.HostMajorVersion">
      <summary>Returns the major version number of the host application.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinModule.HostName">
      <summary>Returns a value specifying the host application the add-in is loaded to.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinModule.HostType">
      <summary>Returns a value specifying the host application the add-in is loaded to.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinModule.HostVersion">
      <summary>Returns a value specifying the host application version.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinModule.Images">
      <summary>Returns or sets an ImageList that will be used for adding icons to command bar buttons.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinModule.InsureCommandBarsSaved">
      <summary>When True (default), Word commandbars are moved from the template in which they were created to normal.dot. Otherwise, they remain in that
template.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinModule.LoadBehavior">
      <summary>Returns or sets a value specifying how the add-in will be loaded by the host application.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinModule.Modules">
      <summary>Returns an ADXAddinAdditionalModuleCollection collection of additional add-in modules.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinModule.Namespace">
      <summary>Specifies the shared namespace for the add-in.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinModule.NativeWindowCaption">
      <summary>Returns the caption of the native window.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinModule.NativeWindowHandle">
      <summary>Returns the handle of the native window.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinModule.OfficeColorScheme">
      <summary>Returns the current Office 2007 color scheme.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinModule.OutlookProfileName">
      <summary>Returns the current Outlook profile name.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinModule.OutlookShutdownBehavior">
      <summary>Returns Fast if the AddinBeginShutdown and AddinFinalize events are not raised in Outlook 2010.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinModule.PageControl">
      <summary>Returns a control representing an Outlook Property Page.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinModule.PageTitle">
      <summary>Returns or sets the title of the property page that will be added to the Tools | Options dialog box in Outlook.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinModule.PageType">
      <summary>Returns or sets the type name of the property page that will be added to the Tools | Options dialog box in Outlook.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinModule.RegisterForAllUsers">
      <summary>Returns or sets a value specifying whether the add-in is registered for all users on the current PC.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinModule.RegistryKey">
      <summary>Returns the registry key of the add-in.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinModule.StartFromScratch">
      <summary>Setting this property to a value of the ADXRibbons type will do the following:

<list type="bullet"><item>Hide all of the main top-level built-in tabs (but not contextual tabsets)</item><item>Hide the content of the Quick Access Toolbar</item><item>Enable the add-in to add its own buttons to the Quick Access Toolbar (this is normally disallowed)</item><item>Hide all the commands on the Office Menu except for New, Open, and Save</item></list></summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinModule.StartMode">
      <summary>Returns the start mode of the add-in.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinModule.SupportedApps">
      <summary>Returns or sets host applications supported by the add-in.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXAddinModule.TaskPanes">
      <summary>Returns an ADXCustomTaskPaneCollection collection of custom task panes.</summary>
    </member>
    <member name="F:AddinExpress.MSO.ADXAddinModule.CurrentInstance">
      <summary>This static property (Shared in VB) returns the current Add-in Module instance.</summary>
      <returns>ADXAddinModule</returns>
    </member>
    <member name="E:AddinExpress.MSO.ADXAddinModule.AddinBeginShutdown">
      <summary>Occurs before the host application begins its unloading procedures.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXAddinModule.AddinFinalize">
      <summary>Occurs when the add-in is disconnected from the host application, either programmatically or through the Add-in Manager.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXAddinModule.AddinInitialize">
      <summary>Occurs when the add-in is connected to the host application.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXAddinModule.AddinStartupComplete">
      <summary>Occurs when the startup of the host application is complete (after the AddInInitialize event).</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXAddinModule.AfterUninstallControls">
      <summary>Occurs after Add-in Express has uninstalled controls from the host applications.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXAddinModule.BeforeUninstallControls">
      <summary>Occurs before Add-in Express uninstalls controls from the host applications.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXAddinModule.OfficeColorSchemeChanged">
      <summary>Occurs when Office 2007 color scheme is changed.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXAddinModule.OnError">
      <summary>Occurs when the add-in code generates an exception.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXAddinModule.OnKeyDown">
      <summary>Occurs when a nonsystem key is pressed (the HandleShortcuts property should be set to True).</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXAddinModule.OnRibbonBeforeCreate">
      <summary>Occurs once, before the Ribbon markup file is about to be created.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXAddinModule.OnRibbonBeforeLoad">
      <summary>Occurs once, when the Ribbon markup file is about to be loaded.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXAddinModule.OnRibbonLoaded">
      <summary>Occurs once, when the Ribbon markup file is successfully loaded.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXAddinModule.OnSendMessage">
      <summary>Occurs after the SendMessage method is called.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXAddinModule.OnTaskPaneAfterCreate">
      <summary>Occurs after a task pane is added to the host application.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXAddinModule.OnTaskPaneAfterShow">
      <summary>Occurs after a task pane is shown in the host application.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXAddinModule.OnTaskPaneBeforeCreate">
      <summary>Occurs before a task pane is added to the host application.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXAddinModule.OnTaskPaneBeforeDestroy">
      <summary>Occurs before a task pane is destroyed.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXAddinModule.OnTaskPaneBeforeShow">
      <summary>Occurs before a task pane is shown in the host application.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageButtonBase.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageButtonBase.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageButtonBase.Caption">
      <summary>The caption string of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageButtonBase.Enabled">
      <summary>True if the control is enabled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageButtonBase.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageButtonBase.Image">
      <summary>Specifies the index of an image in an Imagelist that supplies images for the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageButtonBase.ImageList">
      <summary>The ImageList component providing images for the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageButtonBase.ImageMso">
      <summary>The Id of a built-in image.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageButtonBase.ImageTransparentColor">
      <summary>Returns or sets the button image color to be transparent when the bitmap is drawn.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageButtonBase.IsDefinitive">
      <summary>If true, closes the Backstage view and return to the worksheet.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageButtonBase.KeyTip">
      <summary>Returns or sets a string value indicating the key or key combination to be pressed on the keyboard in order to access the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageButtonBase.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageButtonBase.Visible">
      <summary>True if the control is visible.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXBackstageButtonBase.OnClick">
      <summary>Occurs when the user clicks the button.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageCheckBox.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageCheckBox.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageCheckBox.Description">
      <summary>The description of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageCheckBox.Expand">
      <summary>Specifies how this control expands within its container.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageCheckBox.ScreenTip">
      <summary>The text string shown when the user moves the mouse pointer over the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageCheckBox.SuperTip">
      <summary>The text string shown when the user moves the mouse pointer over the control.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageCheckBoxBase.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageCheckBoxBase.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageCheckBoxBase.Caption">
      <summary>The caption string of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageCheckBoxBase.Enabled">
      <summary>True if the control is enabled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageCheckBoxBase.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageCheckBoxBase.KeyTip">
      <summary>Returns or sets a string value indicating the key or key combination to be pressed on the keyboard in order to access the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageCheckBoxBase.Pressed">
      <summary>True if the control is pressed.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageCheckBoxBase.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageCheckBoxBase.Visible">
      <summary>True if the control is visible.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXBackstageCheckBoxBase.OnClick">
      <summary>Occurs when the user clicks the button.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageComboBox.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageComboBox.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageComboBox.Caption">
      <summary>The caption string of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageComboBox.Enabled">
      <summary>True if the control is enabled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageComboBox.Expand">
      <summary>Specifies how this control expands within its container.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageComboBox.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageComboBox.Items">
      <summary>Controls of the Backstage Combo Box.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageComboBox.KeyTip">
      <summary>Returns or sets a string value indicating the key or key combination to be pressed on the keyboard in order to access the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageComboBox.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageComboBox.SizeString">
      <summary>A string, such as "wwwwwwwwww", that determines the size of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageComboBox.Text">
      <summary>Returns or sets the text displayed in the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageComboBox.TextAlign">
      <summary>Specifies how the label of this control is aligned relative to the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageComboBox.Visible">
      <summary>True if the control is visible.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXBackstageComboBox.ItemPropertyChanging">
      <summary>Occurs when the Ribbon requests a property value of an item shown by the coresponding Ribbon control.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXBackstageComboBox.OnChange">
      <summary>Occurs when the value in the control is changed and committed by the user.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageDropDown.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageDropDown.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageDropDown.Caption">
      <summary>The caption string of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageDropDown.Enabled">
      <summary>True if the control is enabled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageDropDown.Expand">
      <summary>Specifies how this control expands within its container.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageDropDown.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageDropDown.Items">
      <summary>Controls of the Backstage Combo Box.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageDropDown.KeyTip">
      <summary>Returns or sets a string value indicating the key or key combination to be pressed on the keyboard in order to access the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageDropDown.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageDropDown.ScreenTip">
      <summary>The text string shown when the user moves the mouse pointer over the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageDropDown.SelectedItemIndex">
      <summary>Returns or sets the index of the item to be selected.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageDropDown.SizeString">
      <summary>A string, such as "wwwwwwwwww", that determines the size of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageDropDown.SuperTip">
      <summary>The text string shown when the user moves the mouse pointer over the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageDropDown.TextAlign">
      <summary>Specifies how the label of this control is aligned relative to the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageDropDown.Visible">
      <summary>True if the control is visible.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXBackstageDropDown.ItemPropertyChanging">
      <summary>Occurs when the Ribbon requests a property value of an item shown by the coresponding Ribbon control.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXBackstageDropDown.OnChange">
      <summary>Occurs when the value in the control is changed and committed by the user.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageEditBox.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageEditBox.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageEditBox.Caption">
      <summary>The caption string of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageEditBox.Enabled">
      <summary>True if the control is enabled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageEditBox.Expand">
      <summary>Specifies how this control expands within its container.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageEditBox.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageEditBox.KeyTip">
      <summary>Returns or sets a string value indicating the key or key combination to be pressed on the keyboard in order to access the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageEditBox.MaxLength">
      <summary>Returns or sets the maximum size of the string, in characters, that the user may type in an edit box or combo box.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageEditBox.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageEditBox.SizeString">
      <summary>A string, such as "wwwwwwwwww", that determines the size of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageEditBox.Text">
      <summary>Returns or sets the text displayed in the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageEditBox.TextAlign">
      <summary>Specifies how the label of this control is aligned relative to the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageEditBox.Visible">
      <summary>True if the control is visible.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXBackstageEditBox.OnChange">
      <summary>Occurs when the value in the control is changed and committed by the user.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageFastCommandButton.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageFastCommandButton.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageFastCommandButton.IdMso">
      <summary>A string value representing the Id of a built-in Ribbon control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageFastCommandButton.InsertAfterId">
      <summary>The control will be inserted after a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageFastCommandButton.InsertAfterIdMso">
      <summary>The control will be inserted after a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageFastCommandButton.InsertBeforeId">
      <summary>The control will be inserted before a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageFastCommandButton.InsertBeforeIdMso">
      <summary>The control will be inserted before a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageGroup.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageGroup.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageGroup.BottomItems">
      <summary>Controls of the Backstage Group.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageGroup.Caption">
      <summary>The caption string of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageGroup.HelperText">
      <summary>Specifies additional text that explains the functionality of this Backstage control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageGroup.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageGroup.IdMso">
      <summary>A string value representing the Id of a built-in Ribbon control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageGroup.InsertAfterId">
      <summary>The control will be inserted after a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageGroup.InsertAfterIdMso">
      <summary>The control will be inserted after a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageGroup.InsertBeforeId">
      <summary>The control will be inserted before a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageGroup.InsertBeforeIdMso">
      <summary>The control will be inserted before a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageGroup.PrimaryItem">
      <summary>Controls of the Backstage Group.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageGroup.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageGroup.ShowCaption">
      <summary>True if the caption is visible.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageGroup.Style">
      <summary>Specifies the visual style of this Backstage group control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageGroup.TopItems">
      <summary>Controls of the Backstage Group.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageGroup.Visible">
      <summary>True if the control is visible.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageGroupBox.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageGroupBox.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageGroupBox.Caption">
      <summary>The caption string of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageGroupBox.Controls">
      <summary>Controls of the Backstage Group Box.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageGroupBox.Expand">
      <summary>Specifies how this control expands within its container.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageGroupBox.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageGroupBox.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageGroupButton.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageGroupButton.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageGroupButton.Expand">
      <summary>Specifies how this control expands within its container.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageGroupButton.Style">
      <summary>Specifies the visual style of this button control.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageHyperlink.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageHyperlink.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageHyperlink.Caption">
      <summary>The caption string of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageHyperlink.Enabled">
      <summary>True if the control is enabled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageHyperlink.Expand">
      <summary>Specifies how this control expands within its container.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageHyperlink.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageHyperlink.Image">
      <summary>Specifies the index of an image in an Imagelist that supplies images for the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageHyperlink.ImageList">
      <summary>The ImageList component providing images for the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageHyperlink.ImageMso">
      <summary>The Id of a built-in image.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageHyperlink.ImageTransparentColor">
      <summary>Returns or sets the button image color to be transparent when the bitmap is drawn.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageHyperlink.KeyTip">
      <summary>Returns or sets a string value indicating the key or key combination to be pressed on the keyboard in order to access the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageHyperlink.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageHyperlink.ScreenTip">
      <summary>The text string shown when the user moves the mouse pointer over the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageHyperlink.SuperTip">
      <summary>The text string shown when the user moves the mouse pointer over the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageHyperlink.TextAlign">
      <summary>Specifies how the label of this control is aligned relative to the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageHyperlink.Visible">
      <summary>True if the control is visible.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXBackstageHyperlink.OnClick">
      <summary>Occurs when the user clicks the button.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageImageControl.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageImageControl.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageImageControl.AltText">
      <summary></summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageImageControl.Enabled">
      <summary>True if the control is enabled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageImageControl.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageImageControl.Image">
      <summary>Specifies the index of an image in an Imagelist that supplies images for the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageImageControl.ImageList">
      <summary>The ImageList component providing images for the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageImageControl.ImageMso">
      <summary>The Id of a built-in image.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageImageControl.ImageTransparentColor">
      <summary>Returns or sets the button image color to be transparent when the bitmap is drawn.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageImageControl.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageImageControl.Visible">
      <summary>True if the control is visible.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageItem.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageItem.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageItem.Caption">
      <summary>The caption string of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageItem.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageLabelControl.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageLabelControl.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageLabelControl.Caption">
      <summary>The caption string of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageLabelControl.Enabled">
      <summary>True if the control is enabled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageLabelControl.Expand">
      <summary>Specifies how this control expands within its container.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageLabelControl.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageLabelControl.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageLabelControl.TextAlign">
      <summary>Specifies how the label of this control is aligned relative to the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageLabelControl.Visible">
      <summary>True if the control is visible.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageLabelControl.WordWrap">
      <summary>Gets or sets a value indicating whether the text in a label automatically continues on the next line when it reaches the end of the container.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageLayoutContainer.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageLayoutContainer.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageLayoutContainer.ChildrenAlign">
      <summary>Specifies where child controls are aligned within this container control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageLayoutContainer.ChildrenLayout">
      <summary>Specifies the direction that child controls are laid out within this container.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageLayoutContainer.Controls">
      <summary>Controls of the Backstage Layout Container.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageLayoutContainer.Expand">
      <summary>Specifies how this control expands within its container.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageLayoutContainer.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageLayoutContainer.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageMenuBase.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageMenuBase.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageMenuBase.Caption">
      <summary>The caption string of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageMenuBase.Controls">
      <summary>Controls of the Backstage Menu.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageMenuBase.Enabled">
      <summary>True if the control is enabled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageMenuBase.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageMenuBase.Image">
      <summary>Specifies the index of an image in an Imagelist that supplies images for the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageMenuBase.ImageList">
      <summary>The ImageList component providing images for the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageMenuBase.ImageMso">
      <summary>The Id of a built-in image.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageMenuBase.ImageTransparentColor">
      <summary>Returns or sets the button image color to be transparent when the bitmap is drawn.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageMenuBase.KeyTip">
      <summary>Returns or sets a string value indicating the key or key combination to be pressed on the keyboard in order to access the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageMenuBase.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageMenuBase.Visible">
      <summary>True if the control is visible.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageMenuButton.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageMenuButton.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageMenuButton.Description">
      <summary>The description of the control.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageMenuCheckBox.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageMenuCheckBox.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageMenuCheckBox.Description">
      <summary>The description of the control.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageMenuGroup.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageMenuGroup.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageMenuGroup.Caption">
      <summary>The caption string of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageMenuGroup.Controls">
      <summary>Controls of the Backstage Menu Group.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageMenuGroup.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageMenuGroup.ItemSize">
      <summary>The size of an item of a Ribbon control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageMenuGroup.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageMenuToggleButton.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageMenuToggleButton.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageMenuToggleButton.Image">
      <summary>Specifies the index of an image in an Imagelist that supplies images for the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageMenuToggleButton.ImageList">
      <summary>The ImageList component providing images for the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageMenuToggleButton.ImageMso">
      <summary>The Id of a built-in image.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageMenuToggleButton.ImageTransparentColor">
      <summary>Returns or sets the button image color to be transparent when the bitmap is drawn.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstagePrimaryMenu.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstagePrimaryMenu.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstagePrimaryMenu.ScreenTip">
      <summary>The text string shown when the user moves the mouse pointer over the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstagePrimaryMenu.SuperTip">
      <summary>The text string shown when the user moves the mouse pointer over the control.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageRadioGroup.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageRadioGroup.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageRadioGroup.Caption">
      <summary>The caption string of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageRadioGroup.Enabled">
      <summary>True if the control is enabled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageRadioGroup.Expand">
      <summary>Specifies how this control expands within its container.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageRadioGroup.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageRadioGroup.Items">
      <summary>Items of the Backstage Drop Down.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageRadioGroup.KeyTip">
      <summary>Returns or sets a string value indicating the key or key combination to be pressed on the keyboard in order to access the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageRadioGroup.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageRadioGroup.SelectedItemIndex">
      <summary>Returns or sets the index of the item to be selected.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageRadioGroup.TextAlign">
      <summary>Specifies how the label of this control is aligned relative to the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageRadioGroup.Visible">
      <summary>True if the control is visible.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXBackstageRadioGroup.ItemPropertyChanging">
      <summary>Occurs when the Ribbon requests a property value of an item shown by the coresponding Ribbon control.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXBackstageRadioGroup.OnChange">
      <summary>Occurs when the value in the control is changed and committed by the user.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageRegularButton.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageRegularButton.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageRegularButton.ScreenTip">
      <summary>The text string shown when the user moves the mouse pointer over the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageRegularButton.SuperTip">
      <summary>The text string shown when the user moves the mouse pointer over the control.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageSubMenu.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageSubMenu.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageSubMenu.Description">
      <summary>The description of the control.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageTab.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageTab.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTab.Caption">
      <summary>The caption string of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTab.ColumnWidthPercent">
      <summary>1..99</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTab.Enabled">
      <summary>True if the control is enabled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTab.FirstColumn">
      <summary>Controls of the Backstage Tab.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTab.FirstColumnMaxWidth">
      <summary>1..10000</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTab.FirstColumnMinWidth">
      <summary>1..10000</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTab.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTab.IdMso">
      <summary>A string value representing the Id of a built-in Ribbon control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTab.InsertAfterId">
      <summary>The control will be inserted after a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTab.InsertAfterIdMso">
      <summary>The control will be inserted after a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTab.InsertBeforeId">
      <summary>The control will be inserted before a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTab.InsertBeforeIdMso">
      <summary>The control will be inserted before a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTab.KeyTip">
      <summary>Returns or sets a string value indicating the key or key combination to be pressed on the keyboard in order to access the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTab.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTab.SecondColumn">
      <summary>Controls of the Backstage Tab.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTab.SecondColumnMaxWidth">
      <summary>1..10000</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTab.SecondColumnMinWidth">
      <summary>1..10000</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTab.Title">
      <summary>The title of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTab.Visible">
      <summary>True if the control is visible.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageTaskFormGroup.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageTaskFormGroup.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskFormGroup.AllowedTaskSizes">
      <summary></summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskFormGroup.Caption">
      <summary>The caption string of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskFormGroup.Controls">
      <summary>Controls of the Backstage Task Form Group.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskFormGroup.HelperText">
      <summary>Specifies additional text that explains the functionality of this Backstage control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskFormGroup.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskFormGroup.IdMso">
      <summary>A string value representing the Id of a built-in Ribbon control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskFormGroup.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskFormGroup.ShowCaption">
      <summary>True if the caption is visible.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskFormGroup.Visible">
      <summary>True if the control is visible.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageTaskFormGroupCategory.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageTaskFormGroupCategory.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskFormGroupCategory.Caption">
      <summary>The caption string of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskFormGroupCategory.Controls">
      <summary>Controls of the Backstage Task Form Group Category.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskFormGroupCategory.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskFormGroupCategory.IdMso">
      <summary>A string value representing the Id of a built-in Ribbon control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskFormGroupCategory.InsertAfterId">
      <summary>The control will be inserted after a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskFormGroupCategory.InsertAfterIdMso">
      <summary>The control will be inserted after a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskFormGroupCategory.InsertBeforeId">
      <summary>The control will be inserted before a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskFormGroupCategory.InsertBeforeIdMso">
      <summary>The control will be inserted before a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskFormGroupCategory.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskFormGroupCategory.Visible">
      <summary>True if the control is visible.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageTaskFormGroupTask.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageTaskFormGroupTask.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskFormGroupTask.Caption">
      <summary>The caption string of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskFormGroupTask.Controls">
      <summary>Controls of the Backstage Task Form Group Task.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskFormGroupTask.Description">
      <summary>The description of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskFormGroupTask.Enabled">
      <summary>True if the control is enabled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskFormGroupTask.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskFormGroupTask.IdMso">
      <summary>A string value representing the Id of a built-in Ribbon control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskFormGroupTask.Image">
      <summary>Specifies the index of an image in an Imagelist that supplies images for the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskFormGroupTask.ImageList">
      <summary>The ImageList component providing images for the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskFormGroupTask.ImageMso">
      <summary>The Id of a built-in image.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskFormGroupTask.ImageTransparentColor">
      <summary>Returns or sets the button image color to be transparent when the bitmap is drawn.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskFormGroupTask.InsertAfterId">
      <summary>The control will be inserted after a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskFormGroupTask.InsertAfterIdMso">
      <summary>The control will be inserted after a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskFormGroupTask.InsertBeforeId">
      <summary>The control will be inserted before a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskFormGroupTask.InsertBeforeIdMso">
      <summary>The control will be inserted before a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskFormGroupTask.KeyTip">
      <summary>Returns or sets a string value indicating the key or key combination to be pressed on the keyboard in order to access the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskFormGroupTask.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskFormGroupTask.Visible">
      <summary>True if the control is visible.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageTaskGroup.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageTaskGroup.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroup.AllowedTaskSizes">
      <summary></summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroup.Caption">
      <summary>The caption string of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroup.Controls">
      <summary>Controls of the Backstage Task Group.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroup.HelperText">
      <summary>Specifies additional text that explains the functionality of this Backstage control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroup.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroup.IdMso">
      <summary>A string value representing the Id of a built-in Ribbon control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroup.InsertAfterId">
      <summary>The control will be inserted after a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroup.InsertAfterIdMso">
      <summary>The control will be inserted after a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroup.InsertBeforeId">
      <summary>The control will be inserted before a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroup.InsertBeforeIdMso">
      <summary>The control will be inserted before a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroup.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroup.ShowCaption">
      <summary>True if the caption is visible.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroup.Visible">
      <summary>True if the control is visible.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageTaskGroupCategory.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageTaskGroupCategory.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroupCategory.Caption">
      <summary>The caption string of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroupCategory.Controls">
      <summary>Controls of the Backstage Task Group Category.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroupCategory.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroupCategory.IdMso">
      <summary>A string value representing the Id of a built-in Ribbon control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroupCategory.InsertAfterId">
      <summary>The control will be inserted after a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroupCategory.InsertAfterIdMso">
      <summary>The control will be inserted after a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroupCategory.InsertBeforeId">
      <summary>The control will be inserted before a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroupCategory.InsertBeforeIdMso">
      <summary>The control will be inserted before a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroupCategory.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroupCategory.Visible">
      <summary>True if the control is visible.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageTaskGroupTask.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageTaskGroupTask.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroupTask.Caption">
      <summary>The caption string of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroupTask.Description">
      <summary>The description of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroupTask.Enabled">
      <summary>True if the control is enabled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroupTask.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroupTask.IdMso">
      <summary>A string value representing the Id of a built-in Ribbon control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroupTask.Image">
      <summary>Specifies the index of an image in an Imagelist that supplies images for the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroupTask.ImageList">
      <summary>The ImageList component providing images for the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroupTask.ImageMso">
      <summary>The Id of a built-in image.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroupTask.ImageTransparentColor">
      <summary>Returns or sets the button image color to be transparent when the bitmap is drawn.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroupTask.InsertAfterId">
      <summary>The control will be inserted after a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroupTask.InsertAfterIdMso">
      <summary>The control will be inserted after a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroupTask.InsertBeforeId">
      <summary>The control will be inserted before a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroupTask.InsertBeforeIdMso">
      <summary>The control will be inserted before a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroupTask.IsDefinitive">
      <summary>If true, closes the Backstage view and return to the worksheet.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroupTask.KeyTip">
      <summary>Returns or sets a string value indicating the key or key combination to be pressed on the keyboard in order to access the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroupTask.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageTaskGroupTask.Visible">
      <summary>True if the control is visible.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXBackstageTaskGroupTask.OnClick">
      <summary>Occurs when the user clicks the button.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageView.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXBackstageView.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageView.Controls">
      <summary>Controls of the Backstage View.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageView.Enabled">
      <summary>True if the control is enabled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageView.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageView.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBackstageView.Visible">
      <summary>True if the control is visible.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXBackstageView.OnHide">
      <summary>Fires when the Backstage is hidden.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXBackstageView.OnShow">
      <summary>Fires when the Backstage is shown.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBaseAppEvents.ClassName">
      <summary>Returns a string representing the class identifier of the derived component.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXBaseControlCollection.Clear">
      <summary>Removes all controls from the collection.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXBaseControlCollection.Contains(System.Object)">
      <summary>Indicates whether the specified control exists in the collection.</summary>
      <param name="control">The control to locate in the collection.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXBaseControlCollection.GetControlByControlTag(System.String,System.Boolean)">
      <summary>When overridden in a derived class, searches for the ADXCommandBarControl by the specified ControlTag.</summary>
      <param name="controlTag">The ControlTag of the ADXCommandBarControl to search for.</param>
      <param name="recursive">True to search in sub-controls.</param>
      <returns>ADXCommandBarControl or null.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXBaseControlCollection.GetControlByTag(System.String,System.Boolean)">
      <summary>When overridden in a derived class, searches for the ADXCommandBarControl by the specified tag.</summary>
      <param name="tag">The tag of the command bar control to search for.</param>
      <param name="recursive">True to search in sub-controls.</param>
      <returns>ADXCommandBarControl or null.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXBaseControlCollection.IndexOf(AddinExpress.MSO.ADXCommandBarControl)">
      <summary>Returns the index of the specified control in the collection.</summary>
      <param name="control">The control to search for in the collection.</param>
      <returns>Integer.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXBaseControlCollection.Remove(AddinExpress.MSO.ADXCommandBarControl)">
      <summary>Removes the specified control from the control collection.</summary>
      <param name="control">The ADXCommandBarControl to remove.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXBaseControlCollection.RemoveAt(System.Int32)">
      <summary>Removes the ADXCommandBarControl from the collection at the specified indexed location.</summary>
      <param name="index">The index of the ADXCommandBarControl to remove.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXBaseControlCollection.Add(AddinExpress.MSO.ADXCommandBarControl)">
      <summary>Adds the specified ADXCommandBarControl to the collection.</summary>
      <param name="control">The ADXCommandBarControl to add.</param>
      <returns>The same ADXCommandBarControl if it was either previously stored or just added to the collection; otherwise a null reference (Nothing in Visual
Basic).</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXBaseControlCollection.Add(System.Type)">
      <summary>Creates an ADXCommandBarControl of the specified type, and adds it to the collection.</summary>
      <param name="controlType">The type of an ADXCommandBarControl to be created.</param>
      <returns>A new ADXCommandBarControl.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXBaseControlCollection.Add(System.Type,System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>When overridden in a derived class, creates an ADXCommandBarControl according to the specified parameters and adds it to the collection.</summary>
      <param name="controlType">The type of the command bar control to be created.</param>
      <param name="controlTag">The controlTag of the ADXCommandBarControl to be created.</param>
      <param name="id">The id of the command bar control to be created.</param>
      <param name="before">A number that indicates the position of the new command bar control on the command bar. The new control command bar will be inserted before the
control at this position.</param>
      <param name="temporary">True to make the new control temporary. Temporary controls are automatically deleted when the container application is closed.</param>
      <returns>A new ADXCommandBarControl.</returns>
    </member>
    <member name="P:AddinExpress.MSO.ADXBaseControlCollection.Item(System.Int32)">
      <summary>Returns the ADXCommandBarControl at the specified index.</summary>
      <param name="index">The index of the ADXCommandBarControl to get.</param>
    </member>
    <member name="P:AddinExpress.MSO.ADXBaseControlCollection.Owner">
      <summary>When overridden in a derived class, returns the owner of the collection class.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXBuiltInControl.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXBuiltInControl.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXBuiltInControl.UpdateControlObj(AddinExpress.MSO.ADXAddinModule)">
      <summary>Propagates the properties of the class to the underlying command bar control.</summary>
      <param name="addinModule">The Add-in module the control belongs to.</param>
    </member>
    <member name="P:AddinExpress.MSO.ADXBuiltInControl.CommandBar">
      <summary>Returns or sets the ADXCommandBar object on which the command bar control is located.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBuiltInControl.ControlObj">
      <summary>Returns or sets the COM object connected to the current instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBuiltInControl.ControlTag">
      <summary>Returns or sets a string value that uniquely identifies the command bar control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBuiltInControl.DisableStandardAction">
      <summary>True if the standard action of the built-in command bar control is disabled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBuiltInControl.Id">
      <summary>Returns or sets an integer that specifies the built-in control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXBuiltInControl.IsConnected">
      <summary>True if the built-in control is connected.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXBuiltInControl.Action">
      <summary>Occurs before the host application begins the standard action of the built-in control.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXBuiltInControl.ActionEx">
      <summary>Occurs before the host application begins the standard action of the built-in control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCancelEventArgs.Cancel">
      <summary>Returns or sets a boolean value indicating whether the event should be canceled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCancelEventArgs.Control">
      <summary>Returns an instance of the Office control.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXClickOnceModule.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXClickOnceModule.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXClickOnceModule.ModuleName">
      <summary>A custom string value that identifies the component.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXClickOnceModule.OnClickOnceAction">
      <summary>Occurs when handling of a ClickOnce action is required.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXClickOnceModule.OnError">
      <summary>Occurs when the code of the ClickOnce module generates an exception.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXClickOnceModule.OnShowClickOnceCustomUI">
      <summary>Occurs when the ClickOnce Application is invoked by the user.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXClickOnceUIEventArgs.Properties">
      <summary>Returns properties available in the event.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXCommandBar.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXCommandBar.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXCommandBar.UpdateCommandBarObj(AddinExpress.MSO.ADXAddinModule)">
      <summary>Propagates the properties of the current ADXCommandBar to the underlying command bar object.</summary>
      <param name="addinModule">The ADXAddinModule the control is bound to.</param>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBar.AdaptiveMenu">
      <summary>True if the individual menu (it's a command bar, remember) is enabled to use adaptive menus.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBar.BuiltIn">
      <summary>Returns True if the command bar is a built-in command bar of the host application.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBar.CommandBarName">
      <summary>The command bar name.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBar.CommandBarNameLocal">
      <summary>If the command bar is a built-in one, returns its name as it's displayed in the language version of the host application, otherwise returns or
sets the name of the custom command bar.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBar.CommandBarObj">
      <summary>A CommandBar object (a COM object) bound to the current ADXCommandBar instance.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBar.CommandBarTag">
      <summary>Gets the tag of the command bar.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBar.Context">
      <summary>Returns or sets a string that determines where the command bar will be saved. The string is defined and interpreted by the application.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBar.Controls">
      <summary>Controls on the command bar.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBar.Description">
      <summary>The description of the command bar.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBar.Enabled">
      <summary>Enables the command bar.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBar.Height">
      <summary>The height (in pixels) of the command bar.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBar.Index">
      <summary>Returns the index of the command bar in the CommandBars collection of the host application.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBar.IsConnected">
      <summary>Determines whether a built-in command bar is connected.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBar.Left">
      <summary>The horizontal position (in pixels) of the command bar.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBar.ParentObj">
      <summary>A reference to the Parent object (a COM object) for the CommandBar object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBar.Position">
      <summary>The position of the command bar.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBar.Protection">
      <summary>Returns or sets the way the command bar is protected from user customization.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBar.RowIndex">
      <summary>The row index of the command bar.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBar.SupportedApps">
      <summary>Returns or sets the host applications that the command bar will be displayed for.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBar.Temporary">
      <summary>Makes the new command bar temporary.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBar.Top">
      <summary>The vertical position (in pixels) of the command bar.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBar.Type_">
      <summary>Returns the command bar type.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBar.UpdateCounter">
      <summary>Determines whether the component properties have been changed.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBar.UseForRibbon">
      <summary>True if the command bar will be shown in the Ribbon UI.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBar.Visible">
      <summary>Shows / hides the command bar.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBar.Width">
      <summary>The width (in pixels) of the command bar.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXCommandBarAdvancedControl.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXCommandBarAdvancedControl.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXCommandBarAdvancedControl.UpdateControlObj(AddinExpress.MSO.ADXAddinModule)">
      <summary>Propagates the properties of the class to the underlying command bar control.</summary>
      <param name="addinModule">The Add-in module the control belongs to.</param>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarAdvancedControl.ActiveInstance">
      <summary>Returns the currently active instance of the control embedded on a command bar.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarAdvancedControl.BuiltIn">
      <summary>True if the command bar control is a built-in one.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarAdvancedControl.Caption">
      <summary>Returns a string value specifying the caption of the current instance.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarAdvancedControl.Control">
      <summary>Returns or sets an instance of the control embedded onto the command bar.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarAdvancedControl.ControlAdapter">
      <summary>Returns an application-specific control adapter providing the control-embedding functionality.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarAdvancedControl.HelpContextID">
      <summary>Returns or sets the Help context Id number for the Help topic attached to the command bar control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarAdvancedControl.HelpFile">
      <summary>Returns or sets the file name for the Help topic attached to the command bar control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarAdvancedControl.OLEUsage">
      <summary>Returns or sets the OLE client and the OLE server roles in which the command bar control will be used when two host applications are merged.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarAdvancedControl.OnAction">
      <summary>Returns or sets the name of a Visual Basic procedure that will run when the user clicks or changes the value of a command bar control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarAdvancedControl.TooltipText">
      <summary>Returns or sets the text displayed in the command bar control's ToolTip.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXCommandBarButton.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXCommandBarButton.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXCommandBarButton.UpdateControlObj(AddinExpress.MSO.ADXAddinModule)">
      <summary>Propagates the properties of the class to the underlying command bar control.</summary>
      <param name="addinModule">The Add-in module the control belongs to.</param>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarButton.BuiltInFace">
      <summary>True if the face (built-in image) of a command bar button control is its original built-in face.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarButton.ControlObj">
      <summary>Returns or sets the COM object connected to the current instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarButton.DisableStandardAction">
      <summary>For built-in buttons, disables the action specified by the Id property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarButton.Enabled">
      <summary>Enables or disables the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarButton.FaceID">
      <summary>Returns or sets the ID number for the face (built-in image) of a command bar button control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarButton.HyperlinkType">
      <summary>Returns or sets the type of hyperlink associated with the command bar button.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarButton.Image">
      <summary>Returns or sets the bitmap displayed on the button.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarButton.ImageList">
      <summary>An ImageList component providing images for command bar buttons.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarButton.ImageTransparentColor">
      <summary>Returns or sets the button image color to be transparent when the bitmap is drawn.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarButton.ShortcutText">
      <summary>Returns or sets the shortcut key text displayed next to a button control when the button appears on a menu, submenu, or shortcut menu.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarButton.State">
      <summary>Returns or sets the state of the command bar button control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarButton.Style">
      <summary>Returns or sets the way the command bar button control is displayed.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXCommandBarButton.Click">
      <summary>Occurs when the user clicks the button.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXCommandBarComboBox.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXCommandBarComboBox.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarComboBox.DropDownLines">
      <summary>Returns or sets the number of lines in the command bar combo box control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarComboBox.DropDownWidth">
      <summary>Returns or sets the width (in pixels) of the list portion of the combo box.</summary>
      <returns>This property can not be changed for built-in controls.</returns>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarComboBox.Item(System.Int32)">
      <summary>Returns or sets an individual item (string) in the list portion of the combo box.</summary>
      <param name="index">The index of the item.</param>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarComboBox.Items">
      <summary>Provides access to the list of items (strings) in the list portion of the combo box.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarComboBox.ListCount">
      <summary>Returns the number of list items.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarComboBox.ListHeaderCount">
      <summary>Returns or sets the number of list items in the command bar combo box control that appears above the separator line.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarComboBox.ListIndex">
      <summary>Returns or sets the index number of the selected item in the list portion of the command bar combo box controls.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarComboBox.Text">
      <summary>The text associated with the combo box.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXCommandBarControl.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXCommandBarControl.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXCommandBarControl.GetCommandBar">
      <summary>Returns the ADXCommandBar component the control is owned by.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXCommandBarControl.GetCommandBarName">
      <summary>Returns the name of the command bar the control belongs to.</summary>
      <returns>Either command bar name or an empty string.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXCommandBarControl.UpdateControlObj(AddinExpress.MSO.ADXAddinModule)">
      <summary>Propagates the properties of the current ADXCommandBarControl to the underlying command bar control.</summary>
      <param name="addinModule">The ADXAddinModule the control is bound to.</param>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.AfterID">
      <summary>Indicates the position of the new control on the command bar. The new control will be inserted after the control with the specified ID. If this
argument is omitted, the control is added at the end of the command bar.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.AsAdvancedControl">
      <summary>Performs conversion of the component to the ADXCommandBarAdvancedControl class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.AsButton">
      <summary>Performs conversion of the component to the ADXCommandBarButton class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.AsComboBox">
      <summary>Performs conversion of the component to the ADXCommandBarComboBox class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.AsDropDownList">
      <summary>Performs conversion of the component to the ADXCommandBarDropDownList class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.AsEdit">
      <summary>Performs conversion of the component to the ADXCommandBarEdit class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.AsPopup">
      <summary>Performs conversion of the component to the ADXCommandBarPopup class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.Before">
      <summary>Indicates the position of the new control on the command bar. The new control will be inserted before the control with the specified ID. If this
argument is omitted, the control is added at the end of the command bar.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.BeforeID">
      <summary>Indicates the position of the new control on the command bar. The new control will be inserted before the control with the specified ID. If this
argument is omitted, the control is added at the end of the command bar.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.BeginGroup">
      <summary>True if the command bar control appears at the beginning of a group of controls on the command bar.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.BuiltIn">
      <summary>True if the command bar control is a built-in control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.Caption">
      <summary>Returns or sets the caption text of the command bar control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.Collection">
      <summary>Returns the collection that is the owner of the command bar control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.ControlObj">
      <summary>Returns or sets the COM object connected to the current instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.ControlTag">
      <summary>The unique value that identifies the control in the command bar system of the host application.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.ControlType">
      <summary>Returns the type of command bar control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.DescriptionText">
      <summary>Returns or sets the description of the command bar control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.Enabled">
      <summary>Enables or disables the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.Height">
      <summary>Returns or sets the height (in pixels) of the command bar control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.HelpContextID">
      <summary>Returns or sets the Help context Id number for the Help topic attached to the command bar control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.HelpFile">
      <summary>Returns or sets the file name for the Help topic attached to the command bar control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.Id">
      <summary>Returns or sets an integer that specifies the built-in control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.Index">
      <summary>Returns the index number for the command bar control in the collection of the command bar controls.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.IsConnected">
      <summary>True if the current ADXCommandBarControl object is connected to the underlying command bar control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.IsPriorityDropped">
      <summary>True if the control is currently dropped from the menu or toolbar based on usage statistics and layout space.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.Left">
      <summary>Returns the horizontal position of the specified command bar control (in pixels) relative to the left edge of the screen.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.OLEUsage">
      <summary>Returns or sets the OLE client and the OLE server roles in which the command bar control will be used when two host applications are merged.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.OlExplorerItemTypes">
      <summary>Returns or sets the Outlook item types that the control is shown for. Makes sense only if the control is placed on an Outlook Explorer command
bar.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.OlInspectorItemTypes">
      <summary>Returns or sets the Outlook item types that the control is shown for. Makes sense only if the control is placed on an Outlook Inspector command
bar.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.OlItemTypeAction">
      <summary>Returns or sets the action that Add-in Express executes if the type of the current Outlook item (for Outlook Inspector command bars) or the
default item type of the current Outlook folder (for Outlook Explorer command bars) is specified in OlInspectorItemTypes or OlExplorerItemTypes, respectively.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.OnAction">
      <summary>Returns or sets the name of a Visual Basic procedure that will run when the user clicks or changes the value of a command bar control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.Parameter">
      <summary>An additional property that the developer can use for custom purposes.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.ParentObj">
      <summary>Returns a reference to the parent CommandBar object (a COM object) for the command bar control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.Priority">
      <summary>Returns or sets the priority of a command bar control. A control's priority determines whether the control can be dropped from a docked command
bar if the command bar controls can't fit in a single row. Controls that can't fit in a single row drop off command bars from right to left.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.Tag">
      <summary>Returns or sets the user-defined string associated with the component.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.Temporary">
      <summary>True if the control is temporary.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.TooltipText">
      <summary>Returns or sets the text displayed in the command bar control's ToolTip.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.Top">
      <summary>Returns the distance (in pixels) from the top edge of the specified command bar control to the top edge of the screen.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.UpdateCounter">
      <summary>Determines whether the component properties have been changed.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.Visible">
      <summary>True if the command bar control is visible.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControl.Width">
      <summary>Returns or sets the width (in pixels) of the command bar control.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXCommandBarControlCollection.#ctor(AddinExpress.MSO.ADXCommandBar)">
      <summary>Initializes a new instance of the ADXCommandBarControlCollection class.</summary>
      <param name="commandBar">The ADXCommandBar command bar that owns the collection.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXCommandBarControlCollection.Copy">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXCommandBarControlCollection.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXCommandBarControlCollection.GetControlByControlTag(System.String,System.Boolean)">
      <summary>Searches for the control by the specified ControlTag.</summary>
      <param name="controlTag">The ControlTag of the control to search for.</param>
      <param name="recursive">True to search in sub-controls.</param>
      <returns>ADXCommandBarControl or null.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXCommandBarControlCollection.GetControlByTag(System.String,System.Boolean)">
      <summary>Searches for the control by the specified tag.</summary>
      <param name="tag">The tag of the control to search for.</param>
      <param name="recursive">True to search in sub-controls.</param>
      <returns>ADXCommandBarControl or null.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXCommandBarControlCollection.Add(System.Type,System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>Creates an ADXCommandBarControl control according to the specified parameters and adds it to the collection.</summary>
      <param name="controlType">The type of the command bar control to be created.</param>
      <param name="controlTag">The ControlTag of the ADXCommandBarControl to be created.</param>
      <param name="id">The id of the command bar control to be created.</param>
      <param name="before">A number that indicates the position of the new command bar control on the command bar. The new control will be inserted before the control at
this position.</param>
      <param name="temporary">True to make the new control temporary. Temporary controls are automatically deleted when the container application is closed.</param>
      <returns>A new ADXCommandBarControl control.</returns>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarControlCollection.Owner">
      <summary>Returns the owner of the collection.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXCommandBarDropDownList.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXCommandBarDropDownList.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarDropDownList.DropDownLines">
      <summary>Returns or sets the number of lines in the command bar dropdown list control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarDropDownList.DropDownWidth">
      <summary>Returns or sets the width (in pixels) of the list.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarDropDownList.Item(System.Int32)">
      <summary>Returns or sets an item (string) in the dropdown list.</summary>
      <param name="index">The index of the item.</param>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarDropDownList.Items">
      <summary>Provides access to the list of items (strings) in the list portion of the dropdown list.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarDropDownList.ListCount">
      <summary>Returns the number of items (strings) in the list.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarDropDownList.ListHeaderCount">
      <summary>Returns or sets the number of items (strings) in the command bar dropdown list control that appears above the separator line.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarDropDownList.ListIndex">
      <summary>Returns or sets the index number of the selected item (string) in the command bar dropdown list control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarDropDownList.Text">
      <summary>The text associated with the dropdown list.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXCommandBarEdit.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXCommandBarEdit.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarEdit.Text">
      <summary>The text associated with the edit box.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXCommandBarPopup.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXCommandBarPopup.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarPopup.CommandBarObj">
      <summary>Returns a CommandBar object (a COM object) that represents the menu displayed by the pop-up control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarPopup.ControlObj">
      <summary>Returns or sets the COM object connected to the current instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarPopup.Controls">
      <summary>Returns the ADXCommandBarPopupControlCollection collection that contains all controls on the pop-up control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarPopup.Enabled">
      <summary>Enables or disables the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarPopup.Id">
      <summary>Returns or sets an integer that specifies the built-in control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarPopup.Temporary">
      <summary>True if the control is temporary.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXCommandBarPopupControlCollection.#ctor(AddinExpress.MSO.ADXCommandBarPopup)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="commandBarPopup">The ADXCommandBarPopup pop-up control that owns the collection.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXCommandBarPopupControlCollection.Copy">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXCommandBarPopupControlCollection.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXCommandBarPopupControlCollection.GetControlByControlTag(System.String,System.Boolean)">
      <summary>Searches for the control by the specified ControlTag.</summary>
      <param name="controlTag">The ControlTag of the control to search for.</param>
      <param name="recursive">True to search in sub-controls.</param>
      <returns>ADXCommandBarControl or null.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXCommandBarPopupControlCollection.GetControlByTag(System.String,System.Boolean)">
      <summary>Searches for the control by the specified tag.</summary>
      <param name="tag">The tag of the control to search for.</param>
      <param name="recursive">True to search in sub-controls.</param>
      <returns>ADXCommandBarControl or null.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXCommandBarPopupControlCollection.Add(System.Type,System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>Creates an ADXCommandBarControl control according to the specified parameters and adds it to the collection.</summary>
      <param name="controlType">The type of the command bar control to be created.</param>
      <param name="controlTag">The ControlTag of the ADXCommandBarControl to be created.</param>
      <param name="id">The id of the command bar control to be created.</param>
      <param name="before">A number that indicates the position of the new command bar control on the command bar. The new control will be inserted before the control at
this position.</param>
      <param name="temporary">True to make the new control temporary. Temporary controls are automatically deleted when the container application is closed.</param>
      <returns>A new ADXCommandBarControl control.</returns>
    </member>
    <member name="P:AddinExpress.MSO.ADXCommandBarPopupControlCollection.Owner">
      <summary>Returns the owner of the collection.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXContextMenu.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXContextMenu.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXContextMenu.BuiltIn">
      <summary>Returns True if the command bar is a built-in command bar of the host application.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXContextMenu.CommandBarName">
      <summary>The command bar name.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXContextMenu.Controls">
      <summary>Controls on the command bar.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXContextMenu.SupportedApp">
      <summary>Returns host applications supported by the command bar.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXContextMenu.SupportedApps">
      <summary>Returns host applications supported by the command bar.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXContextMenu.BeforeAddControls">
      <summary>.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXCustomCommandBarComboBox.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXCustomCommandBarComboBox.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXCustomCommandBarComboBox.Clear">
      <summary>Removes all items from the control.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXCustomCommandBarComboBox.UpdateControlObj(AddinExpress.MSO.ADXAddinModule)">
      <summary>Propagates the properties of the class to the underlying command bar control.</summary>
      <param name="addinModule">The Add-in module the control belongs to.</param>
    </member>
    <member name="P:AddinExpress.MSO.ADXCustomCommandBarComboBox.ControlObj">
      <summary>Returns or sets the COM object connected to the current instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXCustomCommandBarComboBox.Style">
      <summary>Returns or sets the way a command bar combo box is displayed.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXCustomCommandBarComboBox.Change">
      <summary>Occurs when the user changes the selection in the command bar combo box.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXCustomTaskPane.#ctor">
      <summary>Initializes the class.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXCustomTaskPaneCollection.#ctor(AddinExpress.MSO.ADXAddinModule)">
      <summary>Initializes a new instance of the ADXTaskPaneCollection class.</summary>
      <param name="owner">The AddinModule the collection belongs to.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXCustomTaskPaneCollection.Add(AddinExpress.MSO.ADXTaskPane)">
      <summary>Adds the specified ADXTaskPane to the collection.</summary>
      <param name="pane">The ADXTaskPane to add.</param>
      <returns>The same ADXTaskPane if it was either previously stored or just added to the collection; otherwise a null reference (Nothing in Visual Basic).</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXCustomTaskPaneCollection.Clear">
      <summary>Removes all task panes from the collection.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXCustomTaskPaneCollection.Contains(System.Object)">
      <summary>Indicates whether the specified task pane is a member of the collection.</summary>
      <param name="pane">The pane to locate in the collection.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXCustomTaskPaneCollection.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXCustomTaskPaneCollection.IndexOf(AddinExpress.MSO.ADXTaskPane)">
      <summary>Returns the index of the specified task pane in the collection.</summary>
      <param name="pane">The task pane to search for in the collection.</param>
      <returns>Integer.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXCustomTaskPaneCollection.Remove(AddinExpress.MSO.ADXTaskPane)">
      <summary>Removes the specified ADXTaskPane from the collection.</summary>
      <param name="pane">The ADXTaskPane to remove.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXCustomTaskPaneCollection.RemoveAt(System.Int32)">
      <summary>Removes a task pane at the specified indexed location from the collection.</summary>
      <param name="index">The index of the task pane to remove.</param>
    </member>
    <member name="P:AddinExpress.MSO.ADXCustomTaskPaneCollection.Item(System.Int32)">
      <summary>Returns the ADXTaskPane at the specified index.</summary>
      <param name="index">The index of the ADXTaskPane to get.</param>
    </member>
    <member name="P:AddinExpress.MSO.ADXCustomTaskPaneCollection.Owner">
      <summary>Returns the owner of the collection.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXDirtyEventArgs.Dirty">
      <summary>Determines that the content of a custom property page has been altered.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXDocumentInspector.Description">
      <summary></summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXDocumentInspector.InspectorName">
      <summary></summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXDocumentInspector.Selected">
      <summary></summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXDocumentInspector.SupportedApps">
      <summary>Specifies what host applications will be supported by the document inspector.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXDocumentModule.GetDocumentName">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXDocumentModule.MSFControlByName(System.String)">
      <summary>Gets the MSForms control instance by the control name.</summary>
      <param name="controlName">The name of the control.</param>
      <returns>The MSForms control instance.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXDocumentModule.MSFControlIndexByName(System.String)">
      <summary>Gets the control index by the control name.</summary>
      <param name="controlName">The name of the control.</param>
      <returns>The zero-based index of the specified control name.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXDocumentModule.MSFControlIndexOf(AddinExpress.MSO.ADXMSFormsControl)">
      <summary>Returns the zero-based index of the specified MSForms control.</summary>
      <param name="control">The MSForms control instance to get index.</param>
      <returns>The zero-based index of the specified MSForms control.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXDocumentModule.MSFControls(System.Int32)">
      <summary>Gets the MSForms control instance by the index.</summary>
      <param name="index">The zero-based index of the element to get.</param>
      <returns>The MSForms control instance.</returns>
    </member>
    <member name="P:AddinExpress.MSO.ADXDocumentModule.IsConnected">
      <summary>True if the current class instance is connected to the corresponding COM object provided by the host application.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXDocumentModule.MSFControlsCount">
      <summary>Gets the number of MSForms controls.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXDocumentModule.PropertyId">
      <summary>The name of the custom property added by Add-in Express to a customized Excel worksheet or Word document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXDocumentModule.PropertyValue">
      <summary>The value of the custom property added by Add-in Express to a customized Excel worksheet or Word document.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXErrorEventArgs.#ctor(System.Exception)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="e">A System.Exception containing the original exception data.</param>
    </member>
    <member name="P:AddinExpress.MSO.ADXErrorEventArgs.ADXError">
      <summary>An exception instance.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXErrorEventArgs.Handled">
      <summary>Specifies that an exception is handled by the developer.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelAddinModule.#ctor">
      <summary>Initializes a new instance of the ADXExcelAddinModule class.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelAddinModule.ADXExcelAddinRegister(System.Type)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="t">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelAddinModule.ADXExcelAddinUnregister(System.Type)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="t">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelAddinModule.CreateObjRef(System.Type)">
      <summary>Creates an object that contains all the relevant information required to generate a proxy used to communicate with a remote object.</summary>
      <param name="requestedType">The Type of the object that the new ObjRef will reference.</param>
      <returns>Information required to generate a proxy.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelAddinModule.CVErr(AddinExpress.MSO.ADXxlCVError)">
      <summary>Retruns the specified cell error value in the Excel-recognizable form.</summary>
      <param name="xlError">The cell error value to return.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelAddinModule.Equals(System.Object)">
      <summary>Determines whether the specified Object is equal to the current Object.</summary>
      <param name="obj">The Object to compare with the current Object.</param>
      <returns>true if the specified Object is equal to the current Object; otherwise, false</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelAddinModule.GetHashCode">
      <summary>Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelAddinModule.InitializeLifetimeService">
      <summary>Obtains a lifetime service object to control the lifetime policy for this instance.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelAddinModule.ToString">
      <summary>Returns a String that represents the current Object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelAddinModule.HostApplication">
      <summary>Gets an instance of the Application object of the host app.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAddinModule.AddinBeginShutdown">
      <summary>This event fires before the host application begins its unloading process.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAddinModule.AddinFinalize">
      <summary>This event fires when the add-in is disconnected from the host application, either programmatically or through the Add-in Manager.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAddinModule.AddinInitialize">
      <summary>Occurs when the add-in is connected to the host application.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAddinModule.AddinStartupComplete">
      <summary>Fires when the startup of the host application is complete (after the AddInInitialize event).</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAddinModule.OnError">
      <summary>Fires when the add-in code generates an exception.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelAppEvents.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelAppEvents.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelAppEvents.ClassName">
      <summary>Returns a string value that represents the class identifier of the component.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.AfterCalculate">
      <summary>The AfterCalculate event occurs when all pending refresh activity (both synchronous and asynchronous) and all of the resultant calculation
activities have been completed.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.NewWorkbook">
      <summary>Occurs when a new workbook is created.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.ProtectedViewWindowActivate">
      <summary>Occurs when a Protected View window is activated.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.ProtectedViewWindowBeforeClose">
      <summary>Occurs immediately before a Protected View window or a workbook in a Protected View window closes.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.ProtectedViewWindowBeforeEdit">
      <summary>Occurs immediately before editing is enabled on the workbook in the specified Protected View window.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.ProtectedViewWindowDeactivate">
      <summary>Occurs when a Protected View window is deactivated.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.ProtectedViewWindowOpen">
      <summary>Occurs when a workbook is opened in a Protected View window.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.ProtectedViewWindowResize">
      <summary>Occurs when any Protected View window is resized.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.SheetActivate">
      <summary>Occurs when any sheet is activated.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.SheetBeforeDoubleClick">
      <summary>Occurs when any worksheet is double-clicked, before the default double-click action.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.SheetBeforeRightClick">
      <summary>Occurs when any worksheet is right-clicked, before the default right-click action.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.SheetCalculate">
      <summary>Occurs after any worksheet is recalculated or after any changed data is plotted on a chart.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.SheetChange">
      <summary>Occurs when cells in any worksheet are changed by the user or by an external link.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.SheetDeactivate">
      <summary>Occurs when any sheet is deactivated.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.SheetFollowHyperlink">
      <summary>Occurs when you click any hyperlink in Microsoft Excel.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.SheetPivotTableAfterValueChange">
      <summary>Occurs after a cell or range of cells inside a PivotTable are edited or recalculated (for cells that contain formulas).</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.SheetPivotTableBeforeAllocateChanges">
      <summary>Occurs before changes are applied to a PivotTable.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.SheetPivotTableBeforeCommitChanges">
      <summary>Occurs before changes are committed against the OLAP data source for a PivotTable.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.SheetPivotTableBeforeDiscardChanges">
      <summary>Occurs before changes to a PivotTable are discarded.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.SheetPivotTableUpdate">
      <summary>Occurs after the sheet of the PivotTable report has been updated.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.SheetSelectionChange">
      <summary>Occurs when the selection changes on any worksheet (doesn't occur if the selection is on a chart sheet).</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.WindowActivate">
      <summary>Occurs when any workbook window is activated.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.WindowDeactivate">
      <summary>Occurs when any workbook window is deactivated.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.WindowResize">
      <summary>Occurs when any workbook window is resized.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.WorkbookActivate">
      <summary>Occurs when any workbook is activated.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.WorkbookAddinInstall">
      <summary>Occurs when a workbook is installed as an add-in.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.WorkbookAddinUninstall">
      <summary>Occurs when any add-in workbook is uninstalled.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.WorkbookAfterSave">
      <summary>Occurs after the workbook is saved.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.WorkbookAfterXmlExport">
      <summary>Occurs after Microsoft Excel saves or exports data from any open workbook to an XML data file.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.WorkbookAfterXmlImport">
      <summary>Occurs after an existing XML data connection is refreshed, or new XML data is imported into any open Microsoft Excel workbook.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.WorkbookBeforeClose">
      <summary>Occurs immediately before any open workbook closes.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.WorkbookBeforePrint">
      <summary>Occurs before any open workbook is printed.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.WorkbookBeforeSave">
      <summary>Occurs before any open workbook is saved.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.WorkbookBeforeXmlExport">
      <summary>Occurs before Microsoft Excel saves or exports data from any open workbook to an XML data file.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.WorkbookBeforeXmlImport">
      <summary>Occurs before an existing XML data connection is refreshed, or new XML data is imported into any open Microsoft Excel workbook.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.WorkbookDeactivate">
      <summary>Occurs when any open workbook is deactivated.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.WorkbookNewChart">
      <summary>Occurs when a new chart is created in any open workbook.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.WorkbookNewSheet">
      <summary>Occurs when a new sheet is created in any open workbook.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.WorkbookOpen">
      <summary>Occurs when a workbook is opened.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.WorkbookPivotTableCloseConnection">
      <summary>Occurs after a PivotTable report connection has been closed.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.WorkbookPivotTableOpenConnection">
      <summary>Occurs after a PivotTable report connection has been opened.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.WorkbookRowsetComplete">
      <summary>The event is raised when the user either drills through the recordset or invokes the rowset action on an OLAP PivotTable.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelAppEvents.WorkbookSync">
      <summary>Occurs when the local copy of a workbook that is part of a Document Workspace is synchronized with the copy on the server.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelFunctionAddEventArgs.Cancel">
      <summary>Returns or sets a boolean value indicating whether the event should be canceled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelFunctionAddEventArgs.Method">
      <summary>Returns a MethodInfo which represents an XLL function to be added.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelFunctionCategory.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the ADXExcelCategory class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelFunctionCategory.#ctor">
      <summary>Initializes a new instance of the ADXExcelCategory class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelFunctionCategory.CategoryName">
      <summary></summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelFunctionCategory.FunctionDescriptors">
      <summary></summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelFunctionDescriptor.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the ADXExcelFunction class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelFunctionDescriptor.#ctor">
      <summary>Initializes a new instance of the ADXExcelFunction class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelFunctionDescriptor.Collection">
      <summary>An owner of the item.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelFunctionDescriptor.Description">
      <summary>The function description as it will be shown in Excel UI.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelFunctionDescriptor.FunctionName">
      <summary>The name of the corresponding custom function in the XllContainer class. Add a custom function to this class and choose it via the property
editor.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelFunctionDescriptor.HelpTopicId">
      <summary>The ID of the help topic associated with the function.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelFunctionDescriptor.IsHidden">
      <summary></summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelFunctionDescriptor.IsThreadSafe">
      <summary></summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelFunctionDescriptor.IsVolatile">
      <summary>If True, Excel will call the function specified in the FunctionName property whenever the worksheet is recalculated.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelFunctionDescriptor.ParameterDescriptors">
      <summary>A design-time collection of parameter descriptors.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelFunctionDescriptor.UnicodeName">
      <summary>The unicode name of the corresponding custom function in the XllContainer class.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelFunctionDescriptors.#ctor(AddinExpress.MSO.ADXExcelFunctionCategory)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="owner">The XLLModule the collection belongs to.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelFunctionDescriptors.Add(AddinExpress.MSO.ADXExcelFunctionDescriptor)">
      <summary>Adds the specified ADXExcelFunctionDescriptor to the collection.</summary>
      <param name="function">The ADXExcelFunctionDescriptor to add.</param>
      <returns>The same ADXExcelFunctionDescriptor if it was either previously stored or just added to the collection; otherwise a null reference (Nothing in
Visual Basic).</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelFunctionDescriptors.Clear">
      <summary>Removes all property functions from the collection.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelFunctionDescriptors.Contains(System.Object)">
      <summary>Indicates whether the specified function exists in the collection.</summary>
      <param name="function">The function to locate in the collection.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelFunctionDescriptors.Copy">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelFunctionDescriptors.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelFunctionDescriptors.Remove(AddinExpress.MSO.ADXExcelFunctionDescriptor)">
      <summary>Removes the specified function from the collection.</summary>
      <param name="function">The function to remove.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelFunctionDescriptors.RemoveAt(System.Int32)">
      <summary>Removes the function at the specified indexed location from the collection.</summary>
      <param name="index">The index of the function to remove.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelFunctionDescriptors.IndexOf(AddinExpress.MSO.ADXExcelFunctionDescriptor)">
      <summary>Returns the index of the specified function in the collection.</summary>
      <param name="function">The function to search for in the collection.</param>
      <returns>Integer.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelFunctionDescriptors.IndexOf(System.String)">
      <summary>Returns the index of the function specified by name in the collection.</summary>
      <param name="functionName">The name of the function to search for in the collection.</param>
      <returns>Integer.</returns>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelFunctionDescriptors.Item(System.Int32)">
      <summary>Returns the ADXExcelFunction at the specified index.</summary>
      <param name="index">The index of the ADXExcelFunctionDescriptor to get.</param>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelFunctionDescriptors.Owner">
      <summary>Returns the owner of the collection.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelInPlaceDoubleArray.GetValue">
      <summary>Returns the current value</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelInPlaceDoubleArray.SetValue(System.Array)">
      <summary>Sets the value</summary>
      <param name="value">The value to set.</param>
      <returns></returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelInPlaceValue.GetValue">
      <summary>Returns the current value</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelInPlaceValue.SetValue(System.Object)">
      <summary>Sets the value</summary>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelParameterDescriptor.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the ADXExcelParameter class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelParameterDescriptor.#ctor">
      <summary>Initializes a new instance of the ADXExcelParameter class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelParameterDescriptor.AcceptAsArray">
      <summary>If True, Excel will convert the range values to a 2-D array and pass it to the function. If False, the parameter can accept a reference to an
Excel Range object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelParameterDescriptor.Collection">
      <summary>An owner of the item.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelParameterDescriptor.Description">
      <summary>The parameter description as it will be shown in Excel UI.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelParameterDescriptor.ParameterName">
      <summary>The name of the corresponding parameter of the custom function in the XllContainer class. Add a custom function parameter and choose it via the
property editor.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelParameterDescriptor.UnicodeName">
      <summary>The unicode name of the corresponding parameter of the custom function in the XllContainer class.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelParameterDescriptors.#ctor(AddinExpress.MSO.ADXExcelFunctionDescriptor)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="owner">The XLLModule the collection belongs to.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelParameterDescriptors.Add(AddinExpress.MSO.ADXExcelParameterDescriptor)">
      <summary>Adds the specified ADXExcelParameterDescriptor to the collection.</summary>
      <param name="parameter">The ADXExcelParameterDescriptor to add.</param>
      <returns>The same ADXExcelParameterDescriptor if it was either previously stored or just added to the collection; otherwise a null reference (Nothing in
Visual Basic).</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelParameterDescriptors.Clear">
      <summary>Removes all property parameters from the collection.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelParameterDescriptors.Contains(System.Object)">
      <summary>Indicates whether the specified parameter exists in the collection.</summary>
      <param name="parameter">The parameter to locate in the collection.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelParameterDescriptors.Copy">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelParameterDescriptors.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelParameterDescriptors.Remove(AddinExpress.MSO.ADXExcelParameterDescriptor)">
      <summary>Removes the specified parameter from the collection.</summary>
      <param name="parameter">The parameter to remove.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelParameterDescriptors.RemoveAt(System.Int32)">
      <summary>Removes the parameter at the specified indexed location from the collection .</summary>
      <param name="index">The index of the parameter to remove.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelParameterDescriptors.IndexOf(AddinExpress.MSO.ADXExcelParameterDescriptor)">
      <summary>Returns the index of the specified parameter in the collection.</summary>
      <param name="parameter">The parameter to search for in the collection.</param>
      <returns>Integer.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelParameterDescriptors.IndexOf(System.String)">
      <summary>Returns the index of the parameter specified by name in the collection.</summary>
      <param name="parameterName">The name of the parameter to search for in the collection.</param>
      <returns>Integer.</returns>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelParameterDescriptors.Item(System.Int32)">
      <summary>Returns the ADXExcelParameterDescriptor at the specified index.</summary>
      <param name="index">The index of the ADXExcelParameterDescriptor to get.</param>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelParameterDescriptors.Owner">
      <summary>Returns the owner of the collection.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelProtectedViewWindowBeforeCloseEventArgs.Cancel">
      <summary>Returns or sets a boolean value indicating whether the event should be canceled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelProtectedViewWindowBeforeCloseEventArgs.ProtectedViewWindow">
      <summary>Returns the target protected view window (a COM object).</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelProtectedViewWindowBeforeCloseEventArgs.Reason">
      <summary></summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelProtectedViewWindowBeforeEditEventArgs.Cancel">
      <summary>Returns or sets a boolean value indicating whether the event should be canceled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelProtectedViewWindowBeforeEditEventArgs.ProtectedViewWindow">
      <summary>Returns the target protected view window (a COM object).</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelRef.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a rectangular Excel range that includes the range of cells specified by the parameters.</summary>
      <param name="row">The row index of the cell.</param>
      <param name="column">The column index of the cell.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelRef.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a rectangular Excel range that includes the range of cells specified by the parameters.</summary>
      <param name="rowFirst">The index of the first row in the range.</param>
      <param name="rowLast">The index of the last row in the range.</param>
      <param name="columnFirst">The index of the first column in the range.</param>
      <param name="columnLast">The index of the last column in the range.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelRef.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Initializes a rectangular Excel range that includes the range of cells specified by the parameters.</summary>
      <param name="rowFirst">The index of the first row in the range.</param>
      <param name="rowLast">The index of the last row in the range.</param>
      <param name="columnFirst">The index of the first column in the range.</param>
      <param name="columnLast">The index of the last column in the range.</param>
      <param name="safeMode">Uses Run method of Excel to get/set values.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelRef.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int64,System.Boolean)">
      <summary>Initializes a rectangular Excel range that includes the range of cells specified by the parameters.</summary>
      <param name="rowFirst">The index of the first row in the range.</param>
      <param name="rowLast">The index of the last row in the range.</param>
      <param name="columnFirst">The index of the first column in the range.</param>
      <param name="columnLast">The index of the last column in the range.</param>
      <param name="sheetId">The sheet Id of the current worksheet</param>
      <param name="safeMode">Uses Run method of Excel to get/set values.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelRef.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Boolean)">
      <summary>Initializes a rectangular Excel range that includes the range of cells specified by the parameters.</summary>
      <param name="rowFirst">The index of the first row in the range.</param>
      <param name="rowLast">The index of the last row in the range.</param>
      <param name="columnFirst">The index of the first column in the range.</param>
      <param name="columnLast">The index of the last column in the range.</param>
      <param name="sheetName">The sheet name in the form [Book1.xls]Sheet1 or simply Sheet1.</param>
      <param name="safeMode">Uses Run method of Excel to get/set values.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelRef.AddReference(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Adds a rectangular range of cells specified by the parameters to the current range.</summary>
      <param name="rowFirst">The index of the first row in the range.</param>
      <param name="rowLast">The index of the last row in the range.</param>
      <param name="columnFirst">The index of the first column in the range.</param>
      <param name="columnLast">The index of the last column in the range.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelRef.ConvertToA1Style">
      <summary>Returns the address of the current range in the A1 style.</summary>
      <returns></returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelRef.ConvertToR1C1Style">
      <summary>Returns the address of the current range in the R1C1 style.</summary>
      <returns></returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelRef.GetValue">
      <summary>Returns the value of the current range.</summary>
      <returns></returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelRef.SetValue(System.Object)">
      <summary>Sets the specified value to the current range.</summary>
      <param name="value">The value to set.</param>
      <returns></returns>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelRef.ColumnFirst">
      <summary>Returns the index of the first column of the current range.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelRef.ColumnLast">
      <summary>Returns the index of the last column of the current range.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelRef.References">
      <summary>Returns the list of rectangular ranges that the current range includes.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelRef.RowFirst">
      <summary>Returns the index of the first row of the current range.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelRef.RowLast">
      <summary>Returns the index of the last row of the current range.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelRef.SheetId">
      <summary>Returns the ID of the sheet.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetBeforeEventArgs.Cancel">
      <summary>Returns or sets a boolean value indicating whether the event should be canceled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetBeforeEventArgs.Range">
      <summary>Returns the Range COM object containing the cell nearest to the mouse pointer when the double-click occurred.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetBeforeEventArgs.Sheet">
      <summary>Returns the Worksheet COM object that has caused the event.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the ADXExcelSheetModule class.</summary>
      <param name="container">An object implementing System.ComponentModel.IContainer to associate with this instance of ADXExcelSheetModule.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.#ctor">
      <summary>Initializes a new instance of the ADXExcelSheetModule class.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.Arcs(System.Object)">
      <summary>The property is obsolete.</summary>
      <param name="index">The name or number of the object.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.Buttons(System.Object)">
      <summary>The property is obsolete.</summary>
      <param name="index">The name or number of the object.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.ChartObjects(System.Object)">
      <summary>Returns an object that represents either a single embedded chart (a ChartObject object) or a collection of all the embedded charts (a
ChartObjects object) on the sheet.</summary>
      <param name="index">The name or number of the chart. This argument can be an array, to specify more than one chart.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.CheckBoxes(System.Object)">
      <summary>The property is obsolete.</summary>
      <param name="index">The name or number of the object.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.CheckSpelling(System.Object,System.Object,System.Object,System.Object)">
      <summary>Checks the spelling of an object.</summary>
      <param name="customDictionary">A string that indicates the file name of the custom dictionary to be examined if the word isn't found in the main dictionary. If this argument is
omitted, the currently specified dictionary is used.</param>
      <param name="ignoreUppercase">True to have Microsoft Excel ignore words that are all uppercase. False to have Microsoft Excel check words that are all uppercase. If this
argument is omitted, the current setting will be used.</param>
      <param name="alwaysSuggest">True to have Microsoft Excel display a list of suggested alternate spellings when an incorrect spelling is found. False to have Microsoft Excel
wait for you to input the correct spelling. If this argument is omitted, the current setting will be used.</param>
      <param name="spellLang">The language of the dictionary being used. Can be one of the MsoLanguageID values used by the LanguageID property.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.CheckSpelling2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Checks the spelling of an object.</summary>
      <param name="customDictionary">A string that indicates the file name of the custom dictionary to be examined if the word isn't found in the main dictionary. If this argument is
omitted, the currently specified dictionary is used.</param>
      <param name="ignoreUppercase">True to have Microsoft Excel ignore words that are all uppercase. False to have Microsoft Excel check words that are all uppercase. If this
argument is omitted, the current setting will be used.</param>
      <param name="alwaysSuggest">True to have Microsoft Excel display a list of suggested alternate spellings when an incorrect spelling is found. False to have Microsoft Excel
wait for you to input the correct spelling. If this argument is omitted, the current setting will be used.</param>
      <param name="spellLang">The language of the dictionary being used. Can be one of the MsoLanguageID values used by the LanguageID property.</param>
      <param name="ignoreFinalYaa">The argument is obsolete.</param>
      <param name="spellScript">The argument is obsolete.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.CircleInvalid">
      <summary>Circles invalid entries on the worksheet.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.ClearArrows">
      <summary>Clears the tracer arrows from the worksheet.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.ClearCircles">
      <summary>Clears circles from invalid entries on the worksheet.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.Copy(System.Object,System.Object)">
      <summary>Copies the sheet to another location in the workbook.</summary>
      <param name="before">The sheet before which the copied sheet will be placed. You cannot specify Before if you specify After.</param>
      <param name="after">The sheet after which the copied sheet will be placed. You cannot specify After if you specify Before.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.Delete">
      <summary>Deletes the worksheet.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.DoActivate">
      <summary>Makes the current sheet the active sheet.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.DoCalculate">
      <summary>Calculates the worksheet.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.DoSelect(System.Object)">
      <summary>Selects the object.</summary>
      <param name="replace">True to replace the current selection with the specified object. False to extend the current selection to include any previously selected objects
and the specified object.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.DrawingObjects(System.Object)">
      <summary>The property is obsolete.</summary>
      <param name="index">The name or number of the object.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.Drawings(System.Object)">
      <summary>The property is obsolete.</summary>
      <param name="index">The name or number of the object.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.DropDowns(System.Object)">
      <summary>The property is obsolete.</summary>
      <param name="index">The name or number of the object.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.Evaluate(System.Object)">
      <summary>Converts a Microsoft Excel name to an object or a value.</summary>
      <param name="name">The name of the object, using the naming convention of Microsoft Excel.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.Evaluate2(System.Object)">
      <summary>Converts a Microsoft Excel name to an object or a value.</summary>
      <param name="name">The name of the object, using the naming convention of Microsoft Excel.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.GetDocumentName">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.GetRange(System.Object,System.Object)">
      <summary>Returns a Range object that represents a cell or a range of cells.</summary>
      <param name="cell1">The name of the range. This must be an A1-style reference in the language of the macro. It can include the range operator (a colon), the
intersection operator (a space), or the union operator (a comma). It can also include dollar signs, but they’re ignored. You can use a local defined name in
any part of the range. If you use a name, the name is assumed to be in the language of the macro.</param>
      <param name="cell2">The cell in the upper-left and lower-right corner of the range. Can be a Range object that contains a single cell, an entire column, or entire
row, or it can be a string that names a single cell in the language of the macro.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.GroupBoxes(System.Object)">
      <summary>The property is obsolete.</summary>
      <param name="index">The name or number of the object.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.GroupObjects(System.Object)">
      <summary>The property is obsolete.</summary>
      <param name="index">The name or number of the object.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.Labels(System.Object)">
      <summary>The property is obsolete.</summary>
      <param name="index">The name or number of the object.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.Lines(System.Object)">
      <summary>The property is obsolete.</summary>
      <param name="index">The name or number of the object.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.ListBoxes(System.Object)">
      <summary>The property is obsolete.</summary>
      <param name="index">The name or number of the object.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.Move(System.Object,System.Object)">
      <summary>Moves the sheet to another location in the workbook.</summary>
      <param name="before">The sheet before which the moved sheet will be placed. You cannot specify Before if you specify After.</param>
      <param name="after">The sheet after which the moved sheet will be placed. You cannot specify After if you specify Before.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.OLEObjects(System.Object)">
      <summary>Returns an object that represents either a single OLE object (an OLEObject) or a collection of all OLE objects (an OLEObjects collection) on the
sheet.</summary>
      <param name="index">The name or number of the OLE object.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.OptionButtons(System.Object)">
      <summary>The property is obsolete.</summary>
      <param name="index">The name or number of the object.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.Ovals(System.Object)">
      <summary>The property is obsolete.</summary>
      <param name="index">The name or number of the object.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.Paste(System.Object,System.Object)">
      <summary>Pastes the contents of the Clipboard onto the sheet.</summary>
      <param name="destination">A Range object that specifies where the Clipboard contents should be pasted. If this argument is omitted, the current selection is used. This
argument can be specified only if the contents of the Clipboard can be pasted into a range. If this argument is specified, the Link argument cannot be used.</param>
      <param name="link">True to establish a link to the source of the pasted data. If this argument is specified, the Destination argument cannot be used. The default
value is False.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.PasteSpecial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Pastes the contents of the Clipboard onto the sheet, using a specified format. Use this method to paste data from other applications or to paste
data in a specific format.</summary>
      <param name="format">A string that specifies the Clipboard format of the data.</param>
      <param name="link">True to establish a link to the source of the pasted data. If the source data isn’t suitable for linking or the source application doesn't
support linking, this parameter is ignored. The default value is False.</param>
      <param name="displayAsIcon">True to display the pasted as an icon. The default value is False.</param>
      <param name="iconFileName">The name of the file that contains the icon to use if DisplayAsIcon is True.</param>
      <param name="iconIndex">The index number of the icon within the icon file.</param>
      <param name="iconLabel">The text label of the icon.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.Pictures(System.Object)">
      <summary>The property is obsolete.</summary>
      <param name="index">The name or number of the object.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.PivotTables(System.Object)">
      <summary>Returns an object that represents either a single PivotTable report (a PivotTable object) or a collection of all the PivotTable reports (a
PivotTables object) on a worksheet.</summary>
      <param name="index">The name or number of the report.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.PivotTableWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Creates a new PivotTable report. This method doesn’t display the PivotTable Wizard. This method isn’t available for OLE DB data sources. Use the
Add method to add a PivotTable cache, and then create a PivotTable report based on the cache.</summary>
      <param name="sourceType">An XlPivotTableSourceType value that represents the source of the report data. If you specify this argument, you must also specify SourceData. If
SourceType and SourceData are omitted, Microsoft Excel assumes that the source type is xlDatabase, and the source data comes from the named range "Database."
If this named range doesn’t exist, Microsoft Excel uses the current region if the current selection is in a range of more than 10 cells that contain data. If
this isn’t true, this method will fail.</param>
      <param name="sourceData">The data for the new report. Can be a Range object, an array of ranges, or a text constant that represents the name of another report. For an
external database, SourceData is an array of strings containing the SQL query string, where each element is up to 255 characters in length. You should use the
Connection argument to specify the ODBC connection string. For compatibility with earlier versions of Excel, SourceData can be a two-element array. The first
element is the connection string specifying the ODBC source for the data. The second element is the SQL query string used to get the data. If you specify
SourceData, you must also specify SourceType. If the active cell is inside the SourceData range, you must specify TableDestination as well.</param>
      <param name="tableDestination">A Range object specifying where the report should be placed on the worksheet. If this argument is omitted, the report is placed at the active
cell.</param>
      <param name="tableName">A string that specifies the name of the new report.</param>
      <param name="rowGrand">True to show grand totals for rows in the report.</param>
      <param name="columnGrand">True to show grand totals for columns in the report.</param>
      <param name="saveData">True to save data with the report. False to save only the report definition.</param>
      <param name="hasAutoFormat">True to have Microsoft Excel automatically format the report when it’s refreshed or when fields are moved.</param>
      <param name="autoPage">Valid only if SourceType is xlConsolidation.True to have Microsoft Excel create a page field for the consolidation. If AutoPage is False, you
must create the page field or fields.</param>
      <param name="reserved">Not used by Microsoft Excel.</param>
      <param name="backgroundQuery">True to have Excel perform queries for the report asynchronously (in the background). The default value is False.</param>
      <param name="optimizeCache">True to optimize the PivotTable cache when it's constructed. The default value is False.</param>
      <param name="pageFieldOrder">The order in which page fields are added to the PivotTable report’s layout. Can be one of the following XlOrder constants: xlDownThenOver or
xlOverThenDown. The default value is xlDownThenOver.</param>
      <param name="pageFieldWrapCount">The number of page fields in each column or row in the PivotTable report. The default value is 0 (zero).</param>
      <param name="readData">True to create a PivotTable cache that contains all records from the external database; this cache can be very large. If ReadData is False, you
can set some of the fields asserver-based page fields before the data is actually read.</param>
      <param name="connection">A string that contains ODBC settings that allow Excel to connect to an ODBC data source.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Prints the object.</summary>
      <param name="from">The number of the page at which to start printing. If this argument is omitted, printing starts at the beginning.</param>
      <param name="to">The number of the last page to print. If this argument is omitted, printing ends with the last page.</param>
      <param name="copies">The number of copies to print. If this argument is omitted, one copy is printed.</param>
      <param name="preview">True to have Microsoft Excel invoke print preview before printing the object. False to print the object immediately.</param>
      <param name="activePrinter">Sets the name of the active printer.</param>
      <param name="printToFile">True to print to a file. If PrToFileName is not specified, Microsoft Excel prompts the user to enter the name of the output file.</param>
      <param name="collate">True to collate multiple copies.</param>
      <param name="prToFileName">If PrintToFile is set to True, this argument specifies the name of the file you want to print to.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.PrintOut2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Prints the object.</summary>
      <param name="from">The number of the page at which to start printing. If this argument is omitted, printing starts at the beginning.</param>
      <param name="to">The number of the last page to print. If this argument is omitted, printing ends with the last page.</param>
      <param name="copies">The number of copies to print. If this argument is omitted, one copy is printed.</param>
      <param name="preview">True to have Microsoft Excel invoke print preview before printing the object. False to print the object immediately.</param>
      <param name="activePrinter">Sets the name of the active printer.</param>
      <param name="printToFile">True to print to a file. If PrToFileName is not specified, Microsoft Excel prompts the user to enter the name of the output file.</param>
      <param name="collate">True to collate multiple copies.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.PrintPreview(System.Object)">
      <summary>Shows a preview of the object as it would look when printed.</summary>
      <param name="enableChanges">Pass a Boolean value to specify if the user can change the margins and other page setup options available in print preview.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.Protect(System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Protects a worksheet so that it cannot be modified.</summary>
      <param name="password">A string that specifies a case-sensitive password for the worksheet or workbook. If this argument is omitted, you can unprotect the worksheet or
workbook without using a password. Otherwise, you must specify the password to unprotect the worksheet or workbook. If you forget the password, you cannot
unprotect the worksheet or workbook.</param>
      <param name="drawingObjects">True to protect shapes. The default value is True.</param>
      <param name="contents">True to protect contents. For a chart, this protects the entire chart. For a worksheet, this protects the locked cells. The default value is
True.</param>
      <param name="scenarios">True to protect scenarios. This argument is valid only for worksheets. The default value is True.</param>
      <param name="userInterfaceOnly">True to protect the user interface, but not macros. If this argument is omitted, protection applies both to macros and to the user interface.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.Rectangles(System.Object)">
      <summary>The property is obsolete.</summary>
      <param name="index">The name or number of the object.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.ResetAllPageBreaks">
      <summary>Resets all page breaks on the specified worksheet.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Saves changes to the chart or worksheet in a different file.</summary>
      <param name="filename">A string that indicates the name of the file to be saved. You can include a full path; if you don't, Microsoft Excel saves the file in the
current folder.</param>
      <param name="fileFormat">The file format to use when you save the file. For a list of valid choices, see the XlFileFormat enumeration. For an existing file, the default
format is the last file format specified; for a new file, the default is the format of the version of Excel being used.</param>
      <param name="password">A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</param>
      <param name="writeResPassword">A string that indicates the write-reservation password for this file. If a file is saved with the password and the password isn't supplied when
the file is opened, the file is opened as read-only.</param>
      <param name="readOnlyRecommended">True to display a message when the file is opened, recommending that the file be opened as read-only.</param>
      <param name="createBackup">True to create a backup file.</param>
      <param name="addToMru">True to add this workbook to the list of recently used files. The default value is False.</param>
      <param name="textCodepage">Not used in U. S. Microsoft Excel.</param>
      <param name="textVisualLayout">Not used in U. S. Microsoft Excel.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.Scenarios(System.Object)">
      <summary>Returns an object that represents either a single scenario (a Scenario object) or a collection of scenarios (a Scenarios object) on the
worksheet.</summary>
      <param name="index">The name or number of the scenario. Use an array to specify more than one scenario.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.ScrollBars(System.Object)">
      <summary>The property is obsolete.</summary>
      <param name="index">The name or number of the object.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.SetBackgroundPicture(System.String)">
      <summary>Sets the background graphic for a worksheet.</summary>
      <param name="fileName">The name of the graphic file.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.ShowAllData">
      <summary>Makes all rows of the currently filtered list visible. If AutoFilter is in use, this method changes the arrows to 'All.'</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.ShowDataForm">
      <summary>Displays the data form associated with the worksheet.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.Spinners(System.Object)">
      <summary>The property is obsolete.</summary>
      <param name="index">The name or number of the object.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.TextBoxes(System.Object)">
      <summary>The property is obsolete.</summary>
      <param name="index">The name or number of the object.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.Unprotect(System.Object)">
      <summary>Removes protection from the worksheet. This method has no effect if the sheet isn't protected.</summary>
      <param name="password">A string that denotes the case-sensitive password to use to unprotect the sheet or workbook. If the sheet or workbook isn't protected with a
password, this argument is ignored. If you omit this argument for a sheet that's protected with a password, you'll be prompted for the password. If you omit
this argument for a workbook that's protected with a password, the method fails.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.XmlDataQuery(System.String,System.Object,System.Object)">
      <summary>Returns a Range object that represents the cells mapped to a particular XPath. Returns null (Nothing) if the specified XPath has not been mapped
to the worksheet, or if the mapped range is empty.</summary>
      <param name="xpath">The XPath to query for.</param>
      <param name="selectionNamespaces">A space-delimited String that contains the namespaces referenced in the XPath parameter. A run-time error will be generated if one of the
specified namespaces cannot be resolved.</param>
      <param name="map">Specify an XmlMap if you want to query for the XPath within a specific map.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelSheetModule.XmlMapQuery(System.String,System.Object,System.Object)">
      <summary>Returns a Range object that represents the cells mapped to a particular XPath. Returns null (Nothing) if the specified XPath has not been mapped
to the worksheet.</summary>
      <param name="xpath">The XPath to query for.</param>
      <param name="selectionNamespaces">A space-delimited String that contains the namespaces referenced in the XPath parameter. A run-time error will be generated if one of the
specified namespaces cannot be resolved.</param>
      <param name="map">Specify an XmlMap if you want to query for the XPath within a specific map.</param>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.AutoFilter">
      <summary>Returns an AutoFilter object if filtering is on.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.AutoFilterMode">
      <summary>True if the AutoFilter drop-down arrows are currently displayed on the sheet. This property is independent of the FilterMode property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.Cells">
      <summary>Returns a Range object that represents all the cells on the worksheet (not just the cells that are currently in use).</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.CircularReference">
      <summary>Returns a Range object that represents the range containing the first circular reference on the sheet, or returns null (Nothing) if there's no
circular reference on the sheet. The circular reference must be removed before calculation can proceed.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.CodeName">
      <summary>Returns the code name for the object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.Columns">
      <summary>Returns a Range object that represents all the columns on the worksheet.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.Comments">
      <summary>Returns a Comments collection that represents all the comments for the worksheet.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.ConsolidationFunction">
      <summary>Returns the function code used for the current consolidation. Can be one of the constants of XlConsolidationFunction.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.ConsolidationOptions">
      <summary>Returns a three-element array of consolidation options, as shown in the following table. If the element is True, that option is set.
|----------------------------------------| | Element | Meaning | |----------------------------------------| | 1 | Use labels in top row | | 2 | Use labels in
left column | | 3 | Create links to source data |</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.ConsolidationSources">
      <summary>Returns an array of string values that name the source sheets for the worksheet's current consolidation.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.DisplayAutomaticPageBreaks">
      <summary>The property is obsolete.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.DisplayPageBreaks">
      <summary>True if page breaks (both automatic and manual) on the specified worksheet are displayed.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.DisplayRightToLeft">
      <summary>True if the specified worksheet is displayed from right to left instead of from left to right. False if the object is displayed from left to
right.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.DisplayRightToLeft2">
      <summary>True if the specified worksheet is displayed from right to left instead of from left to right. False if the object is displayed from left to
right.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.Document">
      <summary>Returns or sets the Excel workbook name.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.EnableAutoFilter">
      <summary>True if AutoFilter arrows are enabled when user-interface-only protection is turned on.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.EnableCalculation">
      <summary>True if Microsoft Excel automatically recalculates the worksheet when necessary. False if Excel doesn't recalculate the sheet.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.EnableOutlining">
      <summary>True if outlining symbols are enabled when user-interface-only protection is turned on.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.EnablePivotTable">
      <summary>True if PivotTable controls and actions are enabled when user-interface-only protection is turned on.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.EnableSelection">
      <summary>Returns or sets what can be selected on the sheet.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.FilterMode">
      <summary>True if the worksheet is in the filter mode.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.HPageBreaks">
      <summary>Returns an HPageBreaks collection that represents the horizontal page breaks on the sheet.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.Hyperlinks">
      <summary>Returns a Hyperlinks collection that represents the hyperlinks for the worksheet.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.Index">
      <summary>Returns an int (Integer) value that represents the index number of the object within the collection of similar objects.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.IsConnected">
      <summary>True if the current class instance is connected to the corresponding Excel worksheet.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.ListObjects">
      <summary>Returns a collection of ListObject objects in the worksheet.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.MailEnvelope">
      <summary>Represents an e-mail header for a document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.Name">
      <summary>Returns or sets a String value representing the name of the object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.Names">
      <summary>Returns a Names collection that represents all the worksheet-specific names (names defined with the 'WorksheetName!' prefix).</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.Next">
      <summary>Returns a Worksheet object that represents the next sheet.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.OnCalculate">
      <summary>The property is obsolete.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.OnData">
      <summary>The property is obsolete.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.OnDoubleClick">
      <summary>The property is obsolete.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.OnEntry">
      <summary>The property is obsolete.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.OnSheetActivate">
      <summary>The property is obsolete.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.OnSheetDeactivate">
      <summary>The property is obsolete.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.Outline">
      <summary>Returns an Outline object that represents the outline for the specified worksheet.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.PageSetup">
      <summary>Returns a PageSetup object that contains all the page setup settings for the specified object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.Parent">
      <summary>Returns the parent object for the specified object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.Previous">
      <summary>Returns a Worksheet object that represents the previous sheet.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.ProtectContents">
      <summary>True if the contents of the sheet are protected.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.ProtectDrawingObjects">
      <summary>True if shapes are protected.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.Protection">
      <summary>Returns a Protection object that represents the protection options of the worksheet.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.ProtectionMode">
      <summary>True if user-interface-only protection is turned on.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.ProtectScenarios">
      <summary>True if the worksheet scenarios are protected.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.QueryTables">
      <summary>Returns the QueryTables collection that represents all the query tables on the specified worksheet.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.Rows">
      <summary>Returns a Range object that represents all the rows on the specified worksheet.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.Scripts">
      <summary>The property is obsolete.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.ScrollArea">
      <summary>Returns or sets the range where scrolling is allowed, as an A1-style range reference. Cells outside the scroll area cannot be selected.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.Shapes">
      <summary>Returns a Shapes collection that represents all the shapes on the worksheet.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.SmartTags">
      <summary>Returns an Excel.SmartTags object representing the collection of smart tags for the worksheet.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.StandardHeight">
      <summary>Returns the standard (default) height of all the rows in the worksheet.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.StandardWidth">
      <summary>Returns or sets the standard (default) width of all the columns in the worksheet.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.TransitionExpEval">
      <summary>True if Microsoft Excel uses Lotus 1-2-3 expression evaluation rules for the worksheet.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.TransitionFormEntry">
      <summary>True if Microsoft Excel uses Lotus 1-2-3 formula entry rules for the worksheet.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.Type">
      <summary>Returns an ADXSheetType value that represents the worksheet type.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.UsedRange">
      <summary>Returns a Range object that represents the used range on the specified worksheet.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.Visible">
      <summary>Returns or sets an ADXSheetVisibility value that determines whether the object is visible.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.VPageBreaks">
      <summary>Returns a VPageBreaks collection that represents the vertical page breaks on the sheet.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.Worksheet">
      <summary>Returns or sets the Excel worksheet name.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetModule.WorksheetObj">
      <summary>If the module is connected to an Excel worksheet object, returns a reference to the Excel.Worksheet object (a COM object). Otherwise, returns
null (Nothing).</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelSheetModule.Activate">
      <summary>Occurs when a worksheet is activated.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelSheetModule.BeforeDoubleClick">
      <summary>Occurs when a worksheet is double-clicked, before the default double-click action.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelSheetModule.BeforeRightClick">
      <summary>Occurs when a worksheet is right-clicked, before the default right-click action.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelSheetModule.Calculate">
      <summary>Occurs after the worksheet is recalculated.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelSheetModule.Change">
      <summary>Occurs when cells on the worksheet are changed by the user or by an external link.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelSheetModule.Connect">
      <summary>Occurs when the module is connected to a specified Excel worksheet.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelSheetModule.Deactivate">
      <summary>Occurs when a worksheet is deactivated.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelSheetModule.DragOver">
      <summary>Occurs when a range of cells is dragged over a Chart control.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelSheetModule.DragPlot">
      <summary>Occurs when a range of cells is dragged and dropped on the Chart control.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelSheetModule.FollowHyperlink">
      <summary>Occurs when you click any hyperlink on a worksheet.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelSheetModule.MouseDown">
      <summary>Occurs when a mouse button is pressed while the pointer is over a chart.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelSheetModule.MouseMove">
      <summary>Occurs when the position of the mouse pointer changes over a chart.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelSheetModule.MouseUp">
      <summary>Occurs when a mouse button is released while the pointer is over a chart.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelSheetModule.PivotTableAfterValueChange">
      <summary>Occurs after a cell or range of cells inside a PivotTable are edited or recalculated (for cells that contain formulas).</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelSheetModule.PivotTableBeforeAllocateChanges">
      <summary>Occurs before changes are applied to a PivotTable.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelSheetModule.PivotTableBeforeCommitChanges">
      <summary>Occurs before changes are committed against the OLAP data source for a PivotTable.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelSheetModule.PivotTableBeforeDiscardChanges">
      <summary>Occurs before changes to a PivotTable are discarded.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelSheetModule.PivotTableChangeSync">
      <summary>Occurs after changes to a PivotTable.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelSheetModule.PivotTableUpdate">
      <summary>Occurs after a PivotTable report is updated on a worksheet.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelSheetModule.Resize">
      <summary>Occurs when the chart is resized.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelSheetModule.Select">
      <summary>Occurs when a chart element is selected.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelSheetModule.SelectionChange">
      <summary>Occurs when the selection changes on a worksheet.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXExcelSheetModule.SeriesChange">
      <summary>Occurs when the user changes the value of a chart data point by clicking a bar in the chart and dragging the top edge up or down thus changing
the value of the data point.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetPivotTableBeforeChangesEventArgs.Cancel">
      <summary>Returns or sets a boolean value indicating whether the event should be canceled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetPivotTableBeforeChangesEventArgs.Sheet">
      <summary>Returns the target worsheet (a COM object).</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetPivotTableBeforeChangesEventArgs.TargetPivotTable">
      <summary>Returns the target pivot table (a COM object).</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetPivotTableBeforeChangesEventArgs.ValueChangeEnd">
      <summary></summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelSheetPivotTableBeforeChangesEventArgs.ValueChangeStart">
      <summary></summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelWorkbookBeforeXmlExportEventArgs.Cancel">
      <summary>Returns or sets a boolean value indicating whether the event should be canceled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelWorkbookBeforeXmlExportEventArgs.Map">
      <summary>Returns the XML map (a COM object) that will be used to import data.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelWorkbookBeforeXmlExportEventArgs.Url">
      <summary>Returns the location of the XML file to be imported.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelWorkbookBeforeXmlExportEventArgs.Workbook">
      <summary>Returns the target workbook (a COM object).</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelWorkbookBeforeXmlImportEventArgs.Cancel">
      <summary>Returns or sets a boolean value indicating whether the event should be canceled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelWorkbookBeforeXmlImportEventArgs.IsRefresh">
      <summary>True if the event was triggered by refreshing an existing connection to XML data, False if a new mapping will be created.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelWorkbookBeforeXmlImportEventArgs.Map">
      <summary>Returns the XML map (a COM object) that will be used to import data.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelWorkbookBeforeXmlImportEventArgs.Url">
      <summary>Returns the location of the XML file to be imported.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelWorkbookBeforeXmlImportEventArgs.Workbook">
      <summary>Returns the target workbook (a COM object).</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelWorksheetEvents.ConnectTo(System.Object,System.Boolean)">
      <summary>Connects to the events of the specified item. If the <i>eventClassReleasesComObject</i> parameter is <b>true</b>, the worksheet object will be
released when the <b>RemoveConnection</b> method of the class is called. Otherwise, the developer is responsible for releasing the worksheet object.</summary>
      <param name="xlWorksheet">An Excel worksheet the events of which will be processed by the class.</param>
      <param name="eventClassReleasesComObject">If true, the worksheet object will be released when the <b>RemoveConnection</b> method of the class is called. Otherwise, the developer is
responsible for releasing the folder object specified in the <i>xlWorksheet</i> parameter.</param>
      <returns>Returns true, if the events are connected successfully. Otherwise, returns false.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelWorksheetEvents.Dispose">
      <summary>Clean up any resources being used.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelWorksheetEvents.ProcessActivate">
      <summary>Is called when the Activate event of the Excel worksheet occurs.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelWorksheetEvents.ProcessBeforeDoubleClick(System.Object,System.Int32,System.Int32,System.Int32,AddinExpress.MSO.ADXCancelEventArgs)">
      <summary>Is called when the BeforeDoubleClick event of the Excel worksheet occurs.</summary>
      <param name="target">The cell (of the Excel.Range type - a COM object) nearest to the mouse pointer when the double-click occurs.</param>
      <param name="elementID">The double-clicked object of an embedded chart.</param>
      <param name="arg1">The meaning of Arg1 and Arg2 depends on the ElementID value. See Excel Help Reference</param>
      <param name="arg2">The meaning of Arg1 and Arg2 depends on the ElementID value.</param>
      <param name="e">If e.Cancel is set to true, the default double-click action isn't performed when the procedure is finished.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelWorksheetEvents.ProcessBeforeRightClick(System.Object,AddinExpress.MSO.ADXCancelEventArgs)">
      <summary>Is called when the BeforeRightClick event of the Excel worksheet occurs.</summary>
      <param name="target">The cell (of the Excel.Range type - a COM object) nearest to the mouse pointer when the right-click occurs.</param>
      <param name="e">If e.Cancel is set to true, the default right-click action isn't performed when the procedure is finished.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelWorksheetEvents.ProcessCalculate">
      <summary>Is called when the Calculate event of the Excel worksheet occurs.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelWorksheetEvents.ProcessChange(System.Object)">
      <summary>Is called when the Change event of the Excel worksheet occurs.</summary>
      <param name="target">The changed range (a COM object). Can be more than one cell.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelWorksheetEvents.ProcessDeactivate">
      <summary>Is called when the Deactivate event of the Excel worksheet occurs.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelWorksheetEvents.ProcessDragOver">
      <summary>Is called when the DragOver event of the Excel Chart occurs.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelWorksheetEvents.ProcessDragPlot">
      <summary>Is called when the DragPlot event of the Excel Chart occurs.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelWorksheetEvents.ProcessFollowHyperlink(System.Object)">
      <summary>Is called when the FollowHyperlink event of the Excel worksheet occurs.</summary>
      <param name="target">The Hyperlink object (a COM object) that represents the destination of the hyperlink.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelWorksheetEvents.ProcessMouseDown(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Is called when the MouseDown event of the Excel chart occurs.</summary>
      <param name="button">The mouse button that was pressed.</param>
      <param name="shift">The state of the SHIFT, CTRL, and ALT keys when the event occurred. Can be one of or a sum of the following values.

<para>Value Meaning</para><para>0 (zero) No keys</para><para>1 SHIFT key</para><para>2 CTRL key</para><para>4 ALT key</para></param>
      <param name="x">The X coordinate of the mouse pointer in chart object client coordinates.</param>
      <param name="y">The Y coordinate of the mouse pointer in chart object client coordinates.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelWorksheetEvents.ProcessMouseMove(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Is called when the MouseMove event of the Excel chart occurs.</summary>
      <param name="button">The mouse button that was pressed.</param>
      <param name="shift">The state of the SHIFT, CTRL, and ALT keys when the event occurred. Can be one of or a sum of the following values.

<para>Value Meaning</para><para>0 (zero) No keys</para><para>1 SHIFT key</para><para>2 CTRL key</para><para>4 ALT key</para></param>
      <param name="x">The X coordinate of the mouse pointer in chart object client coordinates.</param>
      <param name="y">The Y coordinate of the mouse pointer in chart object client coordinates.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelWorksheetEvents.ProcessMouseUp(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Is called when the MouseUp event of the Excel chart occurs.</summary>
      <param name="button">The mouse button that was pressed.</param>
      <param name="shift">The state of the SHIFT, CTRL, and ALT keys when the event occurred. Can be one of or a sum of the following values.

<para>Value Meaning</para><para>0 (zero) No keys</para><para>1 SHIFT key</para><para>2 CTRL key</para><para>4 ALT key</para></param>
      <param name="x">The X coordinate of the mouse pointer in chart object client coordinates.</param>
      <param name="y">The Y coordinate of the mouse pointer in chart object client coordinates.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelWorksheetEvents.ProcessPivotTableAfterValueChange(System.Object,System.Object)">
      <summary>Is called when the PivotTableAfterValueChange event of the Excel worksheet occurs.</summary>
      <param name="targetPivotTable">The PivotTable that contains the edited or recalculated cells.</param>
      <param name="targetRange">The range that contains all the edited or recalcuated cells.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelWorksheetEvents.ProcessPivotTableBeforeAllocateChanges(System.Object,System.Int32,System.Int32,AddinExpress.MSO.ADXCancelEventArgs)">
      <summary>Is called when the PivotTableBeforeAllocateChanges event of the Excel worksheet occurs.</summary>
      <param name="targetPivotTable">The PivotTable that contains the changes to apply.</param>
      <param name="valueChangeStart">The index to the first change in the associated PivotTableChangeList collection. The index is specified by the Order property of the ValueChange
object in the PivotTableChangeList collection.</param>
      <param name="valueChangeEnd">The index to the last change in the associated PivotTableChangeList collection. The index is specified by the Order property of the ValueChange
object in the PivotTableChangeList collection.</param>
      <param name="e">Set e.Cancel to True to prevent changes from being applied to the PivotTable.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelWorksheetEvents.ProcessPivotTableBeforeCommitChanges(System.Object,System.Int32,System.Int32,AddinExpress.MSO.ADXCancelEventArgs)">
      <summary>Is called when the PivotTableBeforeCommitChanges event of the Excel worksheet occurs.</summary>
      <param name="targetPivotTable">The PivotTable that contains the changes to commit.</param>
      <param name="valueChangeStart">The index to the first change in the associated PivotTableChangeList object. The index is specified by the Order property of the ValueChange
object in the PivotTableChangeList collection.</param>
      <param name="valueChangeEnd">The index to the last change in the associated PivotTableChangeList object. The index is specified by the Order property of the ValueChange
object in the PivotTableChangeList collection.</param>
      <param name="e">Set e.Cancel to True to prevent changes from being applied to the OLAP data source of the PivotTable.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelWorksheetEvents.ProcessPivotTableBeforeDiscardChanges(System.Object,System.Int32,System.Int32)">
      <summary>Is called when the PivotTableBeforeDiscardChanges event of the Excel worksheet occurs.</summary>
      <param name="targetPivotTable">The PivotTable that contains the changes to discard.</param>
      <param name="valueChangeStart">The index to the first change in the associated PivotTableChangeList object. The index is specified by the Order property of the ValueChange
object in the PivotTableChangeList collection.</param>
      <param name="valueChangeEnd">The index to the last change in the associated PivotTableChangeList object. The index is specified by the Order property of the ValueChange
object in the PivotTableChangeList collection.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelWorksheetEvents.ProcessPivotTableChangeSync(System.Object)">
      <summary>Is called when the PivotTableChangeSync event of the Excel worksheet occurs.</summary>
      <param name="target">The PivotTable that was changed.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelWorksheetEvents.ProcessPivotTableUpdate(System.Object)">
      <summary>Is called when the PivotTableUpdate event of the Excel worksheet occurs.</summary>
      <param name="target">The selected PivotTable report (a COM object).</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelWorksheetEvents.ProcessResize">
      <summary>Is called when the Resize event of the Excel chart occurs.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelWorksheetEvents.ProcessSelect(System.Int32,System.Int32,System.Int32)">
      <summary>Is called when the Select event of the Excel Chart occurs.</summary>
      <param name="elementID">The double-clicked object of an embedded chart.</param>
      <param name="arg1">The meaning of Arg1 and Arg2 depends on the ElementID value. See Excel Help Reference</param>
      <param name="arg2">The meaning of Arg1 and Arg2 depends on the ElementID value.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelWorksheetEvents.ProcessSelectionChange(System.Object)">
      <summary>Is called when the SelectionChange event of the Excel worksheet occurs.</summary>
      <param name="target">The new selected Excel.Range object (a COM object).</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelWorksheetEvents.ProcessSeriesChange(System.Int32,System.Int32)">
      <summary>Is called when the SeriesChange event of the Excel Chart occurs.</summary>
      <param name="seriesIndex">The offset within the Series collection for the changed series.</param>
      <param name="pointIndex">The offset within the Points collection for the changed point.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExcelWorksheetEvents.RemoveConnection">
      <summary>Disconnects the class from the events of the object specified in the ConnectTo method. If specified in the ConnectTo method, releases the object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelWorksheetEvents.IsConnected">
      <summary>Returns a boolean value which specifies whether the class is connected to a worksheet.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelWorksheetEvents.Module">
      <summary>Returns an ADXAddinModule which supplies events for the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXExcelWorksheetEvents.WorksheetObj">
      <summary>An Excel worksheet the events of which are processed by the class.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXExternalException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="message">A string value associated with the exception.</param>
      <param name="innerException">The exception.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXExternalException.Wrap(System.Exception)">
      <summary>A generic exception.</summary>
      <param name="err">The exception that occurs in the add-in code.</param>
      <returns>ADXExternalException</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXFolderNamesCollection.#ctor(System.Object)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="owner">An Object that owns the collection.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXFolderNamesCollection.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXFolderNamesCollection.IndexOfString(System.String)">
      <summary>Returns the index of the specified string in the collection.</summary>
      <param name="str">The string to locate in the collection.</param>
      <returns>A non-negative integer if the string is found in the collection; otherwise <b>-1</b>.</returns>
    </member>
    <member name="P:AddinExpress.MSO.ADXFolderNamesCollection.Owner">
      <summary>Returns the owner of the collection.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXFrontPageAppEvents.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXFrontPageAppEvents.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXFrontPageAppEvents.ClassName">
      <summary>Gets the value that represents the class identifier of the component.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXFrontPageAppEvents.OnAfterPageSave">
      <summary>Occurs after a page is saved.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXFrontPageAppEvents.OnAfterWebPublish">
      <summary>Occurs after a Web site is published.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXFrontPageAppEvents.OnBeforePageSave">
      <summary>Occurs before a page is saved.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXFrontPageAppEvents.OnBeforeWebPublish">
      <summary>Occurs before a Web site is published.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXFrontPageAppEvents.OnPageClose">
      <summary>Occurs when a page is closed.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXFrontPageAppEvents.OnPageNew">
      <summary>Occurs when a new page is created.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXFrontPageAppEvents.OnPageOpen">
      <summary>Occurs when a page is opened.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXFrontPageAppEvents.OnWebClose">
      <summary>Occurs when a Web site is closed.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXFrontPageAppEvents.OnWebNew">
      <summary>Occurs when a new Web site is created.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXFrontPageAppEvents.OnWebOpen">
      <summary>Occurs when a Web site is opened.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXFrontPageAppEvents.WindowActivate">
      <summary>Occurs when a window is activated.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXFrontPageAppEvents.WindowDeactivate">
      <summary>Occurs when a Web window is deactivated.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXFrontPageBeforeWebPublishEventArgs.Cancel">
      <summary>Returns or sets a boolean value indicating whether the event should be canceled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXFrontPageBeforeWebPublishEventArgs.Destination">
      <summary>Returns the URL of the target location.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXFrontPageBeforeWebPublishEventArgs.Web">
      <summary>Returns the WebEx COM object that caused the event.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXHostActionEventArgs.Cancel">
      <summary>Returns or sets a boolean value indicating whether the event should be canceled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXHostAfterActionEventArgs.HostObject">
      <summary>Returns the WebEx, or PageWindowEx, or Document COM object that caused the event.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXHostAfterActionEventArgs.Success">
      <summary>True if the action is successfully completed.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXHostBeforeActionEventArgs.Cancel">
      <summary>Returns or sets a boolean value indicating whether the event should be canceled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXHostBeforeActionEventArgs.HostObject">
      <summary>Returns the host application's COM object that has fired the event.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXHostBeforeSaveEventArgs.Cancel">
      <summary>Returns or sets a boolean value indicating whether the event should be canceled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXHostBeforeSaveEventArgs.HostObject">
      <summary>Returns the host application's COM object that has fired the event.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXHostBeforeSaveEventArgs.SaveAsUI">
      <summary>True to display the Save As dialog box.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXInfoPathAppEvents.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXInfoPathAppEvents.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXInfoPathAppEvents.ClassName">
      <summary>Gets the value that represents the class identifier of the component.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXInfoPathAppEvents.NewXDocument">
      <summary>Occurs when a new form is created.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXInfoPathAppEvents.Quit">
      <summary>Occurs when the user quits InfoPath.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXInfoPathAppEvents.WindowActivate">
      <summary>Occurs when any document window is activated.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXInfoPathAppEvents.WindowDeactivate">
      <summary>Occurs when any document window is deactivated.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXInfoPathAppEvents.WindowSize">
      <summary>Occurs when any document window is resized or moved.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXInfoPathAppEvents.XDocumentBeforeClose">
      <summary>Occurs immediately before any open document closes.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXInfoPathAppEvents.XDocumentBeforePrint">
      <summary>Occurs immediately before any open document is printed.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXInfoPathAppEvents.XDocumentBeforeSave">
      <summary>Occurs immediately before any open document is saved.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXInfoPathAppEvents.XDocumentChange">
      <summary>Occurs when a new form is created, when an existing form is opened, or when another form is made the active form.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXInfoPathAppEvents.XDocumentOpen">
      <summary>Occurs when a document is opened.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXKeyboardShortcut.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXKeyboardShortcut.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXKeyboardShortcut.Enabled">
      <summary>True if the keyboard shortcut is enabled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXKeyboardShortcut.ShortcutText">
      <summary>Returns or sets the key combination for the current instance of the shortcut component.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXKeyboardShortcut.SupportedApps">
      <summary>Returns or sets host applications supported by the shortcut.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXKeyboardShortcut.Action">
      <summary>Occurs when the user presses the shortcut key combination in the host application.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXKeyDownEventArgs.Ctrl">
      <summary>Returns true, if Ctrl is pressed.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXKeyDownEventArgs.Handled">
      <summary>Specifies if the keystroke message was processed by the developer.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXKeyDownEventArgs.KeystrokeFlags">
      <summary>Specifies the repeat count, scan code, extended-key flag, context code, previous key-state flag, and transition-state flag.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXKeyDownEventArgs.Shift">
      <summary>Returns true, if Shift is pressed.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXKeyDownEventArgs.VirtualKey">
      <summary>Specifies the virtual-key code of the key that generated the keystroke message.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXLoaderSupport.#ctor">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXLoaderSupport.AssemblyResolveEventHandler(System.Object,System.ResolveEventArgs)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="sender">...</param>
      <param name="args">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXLoaderSupport.ClickOnceRegisterForComInterop(System.Boolean,System.String,System.String,System.Boolean,System.EventHandler)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="register">...</param>
      <param name="dllType">...</param>
      <param name="dllPath">...</param>
      <param name="showExceptions">...</param>
      <param name="closeProgress">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXLoaderSupport.ClickOnceRegistrationService(System.Boolean,System.String,System.Boolean,System.EventHandler)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="register">...</param>
      <param name="assemblyIdentity">...</param>
      <param name="showExceptions">...</param>
      <param name="closeProgress">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXLoaderSupport.ClickOnceRegistrationService_2(System.Boolean,System.String,System.Boolean,System.EventHandler,System.Int32)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="register">...</param>
      <param name="assemblyIdentity">...</param>
      <param name="showExceptions">...</param>
      <param name="closeProgress">...</param>
      <param name="flags">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXLoaderSupport.RegistrationService(System.Boolean,System.String,System.Boolean)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="register">...</param>
      <param name="assemblyIdentity">...</param>
      <param name="generateLogFile">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXLoaderSupport.RegistrationService_2(System.Boolean,System.String,System.Boolean,System.Boolean)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="register">...</param>
      <param name="assemblyIdentity">...</param>
      <param name="generateLogFile">...</param>
      <param name="adminRegistration">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXMainMenu.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXMainMenu.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMainMenu.BuiltIn">
      <summary>Returns True if the command bar is a built-in command bar of the host application.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMainMenu.CommandBarName">
      <summary>The command bar name.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMainMenu.Controls">
      <summary>Controls on the command bar.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMainMenu.SupportedApp">
      <summary>Returns host applications supported by the command bar.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMainMenu.SupportedApps">
      <summary>Returns host applications supported by the command bar.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXMapPointAppEvents.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXMapPointAppEvents.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMapPointAppEvents.ClassName">
      <summary>Returns a string value that represents the class identifier of the component.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMapPointAppEvents.BeforeClose">
      <summary>Occurs before the map closes. If the map has been changed, this event occurs before the user is asked to save changes.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMapPointAppEvents.BeforeSave">
      <summary>Occurs immediately before the map is saved.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMapPointAppEvents.New">
      <summary>Occurs when a new map is created.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMapPointAppEvents.Open">
      <summary>Occurs when a map is opened.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMapPointAppEvents.Quit">
      <summary>Occurs when MapPoint is closing. The Quit event cannot be cancelled.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsCheckBox.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the ADXMSFormsCheckBox class.</summary>
      <param name="container">An object implementing System.ComponentModel.IContainer to associate with this instance of ADXMSFormsCheckBox.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsCheckBox.#ctor">
      <summary>Initializes a new instance of the ADXMSFormsCheckBox class.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsCheckBox.GetVersionIndependentProgID">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCheckBox.Accelerator">
      <summary>Sets or retrieves the accelerator key for the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCheckBox.Alignment">
      <summary>Specifies the position of the control relative to its caption.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCheckBox.AutoSize">
      <summary>Specifies whether an object automatically resizes to display its entire contents.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCheckBox.BackStyle">
      <summary>Returns or sets the background style for an object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCheckBox.BordersSuppress">
      <summary>The property is obsolete.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCheckBox.Caption">
      <summary>Descriptive text that appears on an object to identify or describe it.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCheckBox.ControlType">
      <summary></summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCheckBox.DisplayStyle">
      <summary>Returns a style that specifies the type of the MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCheckBox.Font">
      <summary>Specifies the font to use in the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCheckBox.FontBold">
      <summary>Specifies the visual attributes of text on a displayed MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCheckBox.FontItalic">
      <summary>Specifies the visual attributes of text on a displayed MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCheckBox.FontName">
      <summary>Specifies the name of the font used to display text.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCheckBox.FontSize">
      <summary>Specifies the font size for text displayed with an object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCheckBox.FontStrikethru">
      <summary>Specifies the visual attributes of text on a displayed MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCheckBox.FontUnderline">
      <summary>Specifies the visual attributes of text on a displayed MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCheckBox.FontWeight">
      <summary>Specifies the font weight of the text displayed by the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCheckBox.GroupName">
      <summary>Creates a group of mutually exclusive controls.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCheckBox.Locked">
      <summary>Specifies whether a control can be edited.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCheckBox.MultiSelect">
      <summary>Indicates whether the object permits multiple selections.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCheckBox.Picture">
      <summary>Specifies the bitmap to display on the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCheckBox.PicturePosition">
      <summary>Specifies the location of the picture relative to its caption.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCheckBox.SpecialEffect">
      <summary>Specifies the visual appearance of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCheckBox.TextAlign">
      <summary>Specifies how text is aligned in the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCheckBox.TripleState">
      <summary>Determines whether a user can specify, from the user interface, the Null state for a CheckBox or ToggleButton.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCheckBox.Valid">
      <summary>Returns a value that indicates if the specified form field object is a valid check box form field.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCheckBox.Value">
      <summary>Specifies the state or content of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCheckBox.WordWrap">
      <summary>Indicates whether the contents of the control automatically wrap at the end of a line.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsCheckBox.BeforeDragOver">
      <summary>Occurs when a drag-and-drop operation is in progress.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsCheckBox.BeforeDropOrPaste">
      <summary>Occurs when the user is about to drop or paste data onto an object.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsCheckBox.Change">
      <summary>Occurs when the Value property changes.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsCheckBox.Click">
      <summary>Occurs when the user clicks the control with the mouse.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsCheckBox.DblClick">
      <summary>Occurs when the user points to an object and then clicks a mouse button twice.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsCheckBox.Error">
      <summary>Occurs when a control detects an error and cannot return the error information to a calling program.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsCheckBox.KeyDown">
      <summary>Occurs when the user presses a key.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsCheckBox.KeyPress">
      <summary>Occurs when the user presses an ANSI key.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsCheckBox.KeyUp">
      <summary>Occurs when the user releases a key.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsCheckBox.MouseDown">
      <summary>Occurs when the user presses the mouse button.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsCheckBox.MouseMove">
      <summary>Occurs when the user moves the mouse.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsCheckBox.MouseUp">
      <summary>Occurs when the user releases the mouse button.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsComboBox.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the ADXMSFormsComboBox class.</summary>
      <param name="container">An object implementing System.ComponentModel.IContainer to associate with this instance of ADXMSFormsComboBox.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsComboBox.#ctor">
      <summary>Initializes a new instance of the ADXMSFormsComboBox class.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsComboBox.Clear">
      <summary>Removes all objects from an object or collection.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsComboBox.Copy">
      <summary>Copies the contents of an object to the Clipboard.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsComboBox.Cut">
      <summary>Removes selected information from an object and transfers it to the Clipboard.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsComboBox.DropDown">
      <summary>Displays the list portion of a ComboBox.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsComboBox.GetColumn(System.Object,System.Object)">
      <summary>The method is obsolete.</summary>
      <param name="pvargColumn">...</param>
      <param name="pvargIndex">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsComboBox.GetList(System.Object,System.Object)">
      <summary>The method is obsolete.</summary>
      <param name="pvargIndex">...</param>
      <param name="pvargColumn">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsComboBox.GetVersionIndependentProgID">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsComboBox.Paste">
      <summary>Transfers the contents of the Clipboard to an object.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsComboBox.RemoveItem(System.Object)">
      <summary>Removes a row from the list in a list box or combo box.</summary>
      <param name="pvargIndex">Specifies the row to delete. The number of the first row is 0; the number of the second row is 1, and so on.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsComboBox.SetColumn(System.Object,System.Object,System.Object)">
      <summary>The method is obsolete.</summary>
      <param name="pvargColumn">...</param>
      <param name="pvargIndex">...</param>
      <param name="pvargValue">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsComboBox.SetList(System.Object,System.Object,System.Object)">
      <summary>The method is obsolete.</summary>
      <param name="pvargIndex">...</param>
      <param name="pvargColumn">...</param>
      <param name="pvargValue">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsComboBox.AddItem(System.String,System.Int32)">
      <summary>For a single-column list box or combo box, adds an item to the list. For a multicolumn list box or combo box, adds a row to the list.</summary>
      <param name="text">Specifies the item or row to add. The number of the first item or row is 0; the number of the second item or row is 1, and so on.</param>
      <param name="index">Integer specifying the position within the object where the new item or row is placed.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsComboBox.AddItem(System.String)">
      <summary>For a single-column list box or combo box, adds an item to the list. For a multicolumn list box or combo box, adds a row to the list.</summary>
      <param name="text">Specifies the item or row to add. The number of the first item or row is 0; the number of the second item or row is 1, and so on.</param>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.AutoSize">
      <summary>Specifies whether an object automatically resizes to display its entire contents.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.AutoTab">
      <summary>Specifies whether an automatic tab occurs when a user enters the maximum allowable number of characters into a TextBox or the text box portion of
a ComboBox.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.AutoWordSelect">
      <summary>Specifies whether a word or a character is the basic unit used to extend a selection.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.BackStyle">
      <summary>Returns or sets the background style for an object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.BorderColor">
      <summary>Specifies the color of an object's border.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.BordersSuppress">
      <summary>The property is obsolete.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.BorderStyle">
      <summary>Specifies the type of border used by the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.BoundColumn">
      <summary>Identifies the source of data in a multicolumn ComboBox or ListBox.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.CanPaste">
      <summary>Specifies whether the Clipboard contains data that the object supports.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.ColumnCount">
      <summary>Specifies the number of columns to display in a list box or combo box.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.ColumnHeads">
      <summary>Displays a single row of column headings for list boxes, combo boxes, and objects that accept column headings.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.ColumnWidths">
      <summary>Specifies the width of each column in a multicolumn combo box or list box.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.ControlType">
      <summary></summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.CurTargetX">
      <summary>Retrieves the preferred horizontal position of the insertion point in a multiline TextBox or ComboBox.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.CurTargetY">
      <summary>The property is obsolete.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.CurX">
      <summary>Specifies the current horizontal position of the insertion point in a multiline TextBox or ComboBox.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.DisplayStyle">
      <summary>Returns a style that specifies the type of the MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.DragBehavior">
      <summary>Specifies whether the system enables the drag-and-drop feature for a TextBox or ComboBox.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.DropButtonStyle">
      <summary>Specifies the symbol displayed on the drop button in the ComboBox.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.EnterFieldBehavior">
      <summary>Specifies the selection behavior when entering a TextBox or ComboBox.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.Font">
      <summary>Specifies the font to use in the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.FontBold">
      <summary>Specifies the visual attributes of text on a displayed MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.FontItalic">
      <summary>Specifies the visual attributes of text on a displayed MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.FontName">
      <summary>Specifies the name of the font used to display text.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.FontSize">
      <summary>Specifies the font size for text displayed with an object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.FontStrikethru">
      <summary>Specifies the visual attributes of text on a displayed MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.FontUnderline">
      <summary>Specifies the visual attributes of text on a displayed MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.FontWeight">
      <summary>Specifies the font weight of the text displayed by the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.HideSelection">
      <summary>Specifies whether selected text remains highlighted when a control does not have the focus.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.IMEMode">
      <summary>Specifies the default run time mode of the Input Method Editor (IME) for the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.LineCount">
      <summary>Returns the number of text lines in a TextBox or ComboBox.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.ListCount">
      <summary>Returns the number of list entries in a control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.ListCursor">
      <summary>The property is deprecated.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.ListIndex">
      <summary>Identifies the currently selected item in a ListBox or ComboBox.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.ListRows">
      <summary>Specifies the maximum number of rows to display in the list.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.ListStyle">
      <summary>Specifies the visual appearance of the list in a ListBox or ComboBox.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.ListWidth">
      <summary>Specifies the width of the list in the ComboBox.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.Locked">
      <summary>Specifies whether a control can be edited.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.MatchEntry">
      <summary>Returns or sets a value indicating how a ListBox or ComboBox searches its list as the user types.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.MatchFound">
      <summary>Indicates whether the text that a user has typed into a combo box matches any of the entries in the list.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.MatchRequired">
      <summary>Specifies whether a value entered in the text portion of a ComboBox must match an entry in the existing list portion of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.MaxLength">
      <summary>Specifies the maximum number of characters a user can enter in a TextBox or ComboBox.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.SelectionMargin">
      <summary>Specifies whether the user can select a line of text by clicking in the region to the left of the text.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.SelLength">
      <summary>The number of characters selected in a text box or the text portion of a combo box.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.SelStart">
      <summary>Indicates the starting point of selected text, or the insertion point if no text is selected.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.SelText">
      <summary>Returns or sets the selected text of a control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.ShowDropButtonWhen">
      <summary>Specifies when to show the drop-down button for a ComboBox or TextBox.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.SpecialEffect">
      <summary>Specifies the visual appearance of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.Style">
      <summary>Specifies how the user can choose or set the control's value.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.Text">
      <summary>Returns or sets the text in a TextBox. Changes the selected row in a ComboBox or ListBox.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.TextAlign">
      <summary>Specifies how text is aligned in the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.TextColumn">
      <summary>Identifies the column in a ComboBox or ListBox to store in the Text property when the user selects a row.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.TextLength">
      <summary>Returns the length, in characters, of text in the edit region of a TextBox or ComboBox.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.TopIndex">
      <summary>Sets and returns the item that appears in the topmost position in the list.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.Valid">
      <summary>Returns a value that indicates if the specified form field object is a valid check box form field.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsComboBox.Value">
      <summary>Specifies the state or content of the control.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsComboBox.BeforeDragOver">
      <summary>Occurs when a drag-and-drop operation is in progress.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsComboBox.BeforeDropOrPaste">
      <summary>Occurs when the user is about to drop or paste data onto an object.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsComboBox.Change">
      <summary>Occurs when the Value property changes.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsComboBox.Click">
      <summary>Occurs when the user clicks the control with the mouse.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsComboBox.DblClick">
      <summary>Occurs when the user points to an object and then clicks a mouse button twice.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsComboBox.DropButtonClick">
      <summary>Occurs whenever the drop-down list appears or disappears.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsComboBox.Error">
      <summary>Occurs when a control detects an error and cannot return the error information to a calling program.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsComboBox.KeyDown">
      <summary>Occurs when the user presses a key.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsComboBox.KeyPress">
      <summary>Occurs when the user presses an ANSI key.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsComboBox.KeyUp">
      <summary>Occurs when the user releases a key.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsComboBox.MouseDown">
      <summary>Occurs when the user presses the mouse button.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsComboBox.MouseMove">
      <summary>Occurs when the user moves the mouse.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsComboBox.MouseUp">
      <summary>Occurs when the user releases the mouse button.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsCommandButton.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the ADXMSFormsCommandButton class.</summary>
      <param name="container">An object implementing System.ComponentModel.IContainer to associate with this instance of ADXMSFormsCommandButton.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsCommandButton.#ctor">
      <summary>Initializes a new instance of the ADXMSFormsCommandButton class.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsCommandButton.GetVersionIndependentProgID">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCommandButton.Accelerator">
      <summary>Sets or retrieves the accelerator key for the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCommandButton.AutoSize">
      <summary>Specifies whether an object automatically resizes to display its entire contents.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCommandButton.BackStyle">
      <summary>Returns or sets the background style for an object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCommandButton.Caption">
      <summary>Descriptive text that appears on an object to identify or describe it.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCommandButton.ControlType">
      <summary></summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCommandButton.Font">
      <summary>Specifies the font to use in the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCommandButton.FontBold">
      <summary>Specifies the visual attributes of text on a displayed MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCommandButton.FontItalic">
      <summary>Specifies the visual attributes of text on a displayed MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCommandButton.FontName">
      <summary>Specifies the name of the font used to display text.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCommandButton.FontSize">
      <summary>Specifies the font size for text displayed with an object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCommandButton.FontStrikethru">
      <summary>Specifies the visual attributes of text on a displayed MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCommandButton.FontUnderline">
      <summary>Specifies the visual attributes of text on a displayed MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCommandButton.FontWeight">
      <summary>Specifies the font weight of the text displayed by the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCommandButton.Locked">
      <summary>Specifies whether a control can be edited.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCommandButton.Picture">
      <summary>Specifies the bitmap to display on the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCommandButton.PicturePosition">
      <summary>Specifies the location of the picture relative to its caption.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCommandButton.TakeFocusOnClick">
      <summary>Specifies whether a control takes the focus when clicked.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCommandButton.Value">
      <summary>Specifies the state or content of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsCommandButton.WordWrap">
      <summary>Indicates whether the contents of the control automatically wrap at the end of a line.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsCommandButton.BeforeDragOver">
      <summary>Occurs when a drag-and-drop operation is in progress.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsCommandButton.BeforeDropOrPaste">
      <summary>Occurs when the user is about to drop or paste data onto an object.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsCommandButton.Click">
      <summary>Occurs when the user clicks the control with the mouse.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsCommandButton.DblClick">
      <summary>Occurs when the user points to an object and then clicks a mouse button twice.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsCommandButton.Error">
      <summary>Occurs when a control detects an error and cannot return the error information to a calling program.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsCommandButton.KeyDown">
      <summary>Occurs when the user presses a key.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsCommandButton.KeyPress">
      <summary>Occurs when the user presses an ANSI key.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsCommandButton.KeyUp">
      <summary>Occurs when the user releases a key.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsCommandButton.MouseDown">
      <summary>Occurs when the user presses the mouse button.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsCommandButton.MouseMove">
      <summary>Occurs when the user moves the mouse.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsCommandButton.MouseUp">
      <summary>Occurs when the user releases the mouse button.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsControl.GetVersionIndependentProgID">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsControl.BackColor">
      <summary>Specifies the background color of the object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsControl.ControlName">
      <summary>Returns or sets the name of an MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsControl.ControlObj">
      <summary>Returns a reference to an MSForms control (a COM object).</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsControl.Enabled">
      <summary>Specifies whether a control can receive the focus and respond to user-generated events.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsControl.ForeColor">
      <summary>Specifies the foreground color of an object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsControl.IsConnected">
      <summary>True if the current class instance is connected to the corresponding MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsControl.MouseIcon">
      <summary>Assigns a custom icon to an object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsControl.MousePointer">
      <summary>Specifies the type of pointer displayed when the user positions the mouse over a particular object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsControl.Owner">
      <summary>Returns an instance of the ADXAddinAdditionalModule class.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsControl.Connect">
      <summary>Occurs when the component is connected to a specified MSForms control.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsImage.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the ADXMSFormsImage class.</summary>
      <param name="container">An object implementing System.ComponentModel.IContainer to associate with this instance of ADXMSFormsImage.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsImage.#ctor">
      <summary>Initializes a new instance of the ADXMSFormsImage class.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsImage.GetVersionIndependentProgID">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsImage.AutoSize">
      <summary>Specifies whether an object automatically resizes to display its entire contents.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsImage.BackStyle">
      <summary>Returns or sets the background style for an object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsImage.BorderColor">
      <summary>Specifies the color of an object's border.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsImage.BorderStyle">
      <summary>Specifies the type of border used by the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsImage.ControlType">
      <summary></summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsImage.Picture">
      <summary>Specifies the bitmap to display on the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsImage.PictureAlignment">
      <summary>Specifies the location of the picture relative to its caption.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsImage.PictureSizeMode">
      <summary>Specifies how to display the background picture on a control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsImage.PictureTiling">
      <summary>Lets you tile a picture in a form or page.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsImage.SpecialEffect">
      <summary>Specifies the visual appearance of the control.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsImage.BeforeDragOver">
      <summary>Occurs when a drag-and-drop operation is in progress.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsImage.BeforeDropOrPaste">
      <summary>Occurs when the user is about to drop or paste data onto an object.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsImage.Click">
      <summary>Occurs when the user clicks the control with the mouse.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsImage.DblClick">
      <summary>Occurs when the user points to an object and then clicks a mouse button twice.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsImage.Error">
      <summary>Occurs when a control detects an error and cannot return the error information to a calling program.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsImage.MouseDown">
      <summary>Occurs when the user presses the mouse button.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsImage.MouseMove">
      <summary>Occurs when the user moves the mouse.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsImage.MouseUp">
      <summary>Occurs when the user releases the mouse button.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsLabelControl.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the ADXMSFormsLabelControl class.</summary>
      <param name="container">An object implementing System.ComponentModel.IContainer to associate with this instance of ADXMSFormsLabelControl.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsLabelControl.#ctor">
      <summary>Initializes a new instance of the ADXMSFormsLabelControl class.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsLabelControl.GetVersionIndependentProgID">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsLabelControl.Accelerator">
      <summary>Sets or retrieves the accelerator key for the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsLabelControl.AutoSize">
      <summary>Specifies whether an object automatically resizes to display its entire contents.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsLabelControl.BackStyle">
      <summary>Returns or sets the background style for an object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsLabelControl.BorderColor">
      <summary>Specifies the color of an object's border.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsLabelControl.BorderStyle">
      <summary>Specifies the type of border used by the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsLabelControl.Caption">
      <summary>Descriptive text that appears on an object to identify or describe it.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsLabelControl.ControlType">
      <summary></summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsLabelControl.Font">
      <summary>Specifies the font to use in the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsLabelControl.FontBold">
      <summary>Specifies the visual attributes of text on a displayed MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsLabelControl.FontItalic">
      <summary>Specifies the visual attributes of text on a displayed MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsLabelControl.FontName">
      <summary>Specifies the name of the font used to display text.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsLabelControl.FontSize">
      <summary>Specifies the font size for text displayed with an object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsLabelControl.FontStrikethru">
      <summary>Specifies the visual attributes of text on a displayed MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsLabelControl.FontUnderline">
      <summary>Specifies the visual attributes of text on a displayed MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsLabelControl.FontWeight">
      <summary>Specifies the font weight of the text displayed by the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsLabelControl.Picture">
      <summary>Specifies the bitmap to display on the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsLabelControl.PicturePosition">
      <summary>Specifies the location of the picture relative to its caption.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsLabelControl.SpecialEffect">
      <summary>Specifies the visual appearance of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsLabelControl.TextAlign">
      <summary>Specifies how text is aligned in a control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsLabelControl.Value">
      <summary>Specifies the state or content of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsLabelControl.WordWrap">
      <summary>Indicates whether the contents of the control automatically wrap at the end of a line.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsLabelControl.BeforeDragOver">
      <summary>Occurs when a drag-and-drop operation is in progress.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsLabelControl.BeforeDropOrPaste">
      <summary>Occurs when the user is about to drop or paste data onto an object.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsLabelControl.Click">
      <summary>Occurs when the user clicks the control with the mouse.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsLabelControl.DblClick">
      <summary>Occurs when the user points to an object and then clicks a mouse button twice.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsLabelControl.Error">
      <summary>Occurs when a control detects an error and cannot return the error information to a calling program.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsLabelControl.MouseDown">
      <summary>Occurs when the user presses the mouse button.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsLabelControl.MouseMove">
      <summary>Occurs when the user moves the mouse.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsLabelControl.MouseUp">
      <summary>Occurs when the user releases the mouse button.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsListBox.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the ADXMSFormsListBox class.</summary>
      <param name="container">An object implementing System.ComponentModel.IContainer to associate with this instance of ADXMSFormsListBox.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsListBox.#ctor">
      <summary>Initializes a new instance of the ADXMSFormsListBox class.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsListBox.AddItem(System.Object,System.Object)">
      <summary>For a single-column list box or combo box, adds an item to the list. For a multicolumn list box or combo box, adds a row to the list.</summary>
      <param name="pvargItem">Specifies the item or row to add. The number of the first item or row is 0; the number of the second item or row is 1, and so on.</param>
      <param name="pvargIndex">Integer specifying the position within the object where the new item or row is placed.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsListBox.Clear">
      <summary>Removes all objects from an object or collection.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsListBox.GetColumn(System.Object,System.Object)">
      <summary>The method is obsolete.</summary>
      <param name="pvargColumn">...</param>
      <param name="pvargIndex">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsListBox.GetList(System.Object,System.Object)">
      <summary>The method is obsolete.</summary>
      <param name="pvargIndex">...</param>
      <param name="pvargColumn">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsListBox.GetSelected(System.Object)">
      <summary>Returns the selection state of items in a ListBox.</summary>
      <param name="pvargIndex">An integer with a range from 0 to one less than the number of items in the list.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsListBox.GetVersionIndependentProgID">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsListBox.RemoveItem(System.Object)">
      <summary>Removes a row from the list in a list box or combo box.</summary>
      <param name="pvargIndex">Specifies the row to delete. The number of the first row is 0; the number of the second row is 1, and so on.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsListBox.SetColumn(System.Object,System.Object,System.Object)">
      <summary>The method is obsolete.</summary>
      <param name="pvargColumn">...</param>
      <param name="pvargIndex">...</param>
      <param name="pvargValue">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsListBox.SetList(System.Object,System.Object,System.Object)">
      <summary>The method is obsolete.</summary>
      <param name="pvargIndex">...</param>
      <param name="pvargColumn">...</param>
      <param name="pvargValue">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsListBox.SetSelected(System.Object,System.Boolean)">
      <summary>Sets the selection state of items in a ListBox.</summary>
      <param name="pvargIndex">An integer with a range from 0 to one less than the number of items in the list.</param>
      <param name="pfvb">Whether an item is selected.</param>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsListBox.BorderColor">
      <summary>Specifies the color of an object's border.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsListBox.BordersSuppress">
      <summary>The property is obsolete.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsListBox.BorderStyle">
      <summary>Specifies the type of border used by the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsListBox.BoundColumn">
      <summary>Identifies the source of data in a multicolumn ComboBox or ListBox.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsListBox.ColumnCount">
      <summary>Specifies the number of columns to display in a list box or combo box.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsListBox.ColumnHeads">
      <summary>Displays a single row of column headings for list boxes, combo boxes, and objects that accept column headings.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsListBox.ColumnWidths">
      <summary>Specifies the width of each column in a multicolumn combo box or list box.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsListBox.ControlType">
      <summary></summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsListBox.DisplayStyle">
      <summary>Returns a style that specifies the type of the MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsListBox.Font">
      <summary>Specifies the font to use in the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsListBox.FontBold">
      <summary>Specifies the visual attributes of text on a displayed MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsListBox.FontItalic">
      <summary>Specifies the visual attributes of text on a displayed MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsListBox.FontName">
      <summary>Specifies the name of the font used to display text.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsListBox.FontSize">
      <summary>Specifies the font size for text displayed with an object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsListBox.FontStrikethru">
      <summary>Specifies the visual attributes of text on a displayed MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsListBox.FontUnderline">
      <summary>Specifies the visual attributes of text on a displayed MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsListBox.FontWeight">
      <summary>Specifies the font weight of the text displayed by the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsListBox.IMEMode">
      <summary>Specifies the default run time mode of the Input Method Editor (IME) for the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsListBox.IntegralHeight">
      <summary>Indicates whether a ListBox or TextBox displays full lines of text in a list or partial lines.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsListBox.ListCount">
      <summary>Returns the number of list entries in a control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsListBox.ListCursor">
      <summary>The property is deprecated.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsListBox.ListIndex">
      <summary>Identifies the currently selected item in a ListBox or ComboBox.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsListBox.ListStyle">
      <summary>Specifies the visual appearance of the list in a ListBox or ComboBox.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsListBox.ListWidth">
      <summary>Specifies the width of the list in the ListBox.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsListBox.Locked">
      <summary>Specifies whether a control can be edited.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsListBox.MatchEntry">
      <summary>Returns or sets a value indicating how a ListBox or ComboBox searches its list as the user types.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsListBox.MultiSelect">
      <summary>Indicates whether the object permits multiple selections.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsListBox.SpecialEffect">
      <summary>Specifies the visual appearance of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsListBox.Text">
      <summary>Returns or sets the text in a TextBox. Changes the selected row in a ComboBox or ListBox.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsListBox.TextAlign">
      <summary>Specifies how text is aligned in the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsListBox.TextColumn">
      <summary>Identifies the column in a ComboBox or ListBox to store in the Text property when the user selects a row.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsListBox.TopIndex">
      <summary>Sets and returns the item that appears in the topmost position in the list.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsListBox.Valid">
      <summary>Returns a value that indicates if the specified form field object is a valid check box form field.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsListBox.Value">
      <summary>Specifies the state or content of the control.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsListBox.BeforeDragOver">
      <summary>Occurs when a drag-and-drop operation is in progress.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsListBox.BeforeDropOrPaste">
      <summary>Occurs when the user is about to drop or paste data onto an object.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsListBox.Change">
      <summary>Occurs when the Value property changes.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsListBox.Click">
      <summary>Occurs when the user clicks the control with the mouse.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsListBox.DblClick">
      <summary>Occurs when the user points to an object and then clicks a mouse button twice.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsListBox.Error">
      <summary>Occurs when a control detects an error and cannot return the error information to a calling program.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsListBox.KeyDown">
      <summary>Occurs when the user presses a key.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsListBox.KeyPress">
      <summary>Occurs when the user presses an ANSI key.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsListBox.KeyUp">
      <summary>Occurs when the user releases a key.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsListBox.MouseDown">
      <summary>Occurs when the user presses the mouse button.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsListBox.MouseMove">
      <summary>Occurs when the user moves the mouse.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsListBox.MouseUp">
      <summary>Occurs when the user releases the mouse button.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsOptionButton.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the ADXMSFormsOptionButton class.</summary>
      <param name="container">An object implementing System.ComponentModel.IContainer to associate with this instance of ADXMSFormsOptionButton.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsOptionButton.#ctor">
      <summary>Initializes a new instance of the ADXMSFormsOptionButton class.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsOptionButton.GetVersionIndependentProgID">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsOptionButton.Accelerator">
      <summary>Sets or retrieves the accelerator key for the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsOptionButton.Alignment">
      <summary>Specifies the position of the control relative to its caption.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsOptionButton.AutoSize">
      <summary>Specifies whether an object automatically resizes to display its entire contents.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsOptionButton.BackStyle">
      <summary>Returns or sets the background style for an object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsOptionButton.BordersSuppress">
      <summary>The property is obsolete.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsOptionButton.Caption">
      <summary>Descriptive text that appears on an object to identify or describe it.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsOptionButton.ControlType">
      <summary></summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsOptionButton.DisplayStyle">
      <summary>Returns a style that specifies the type of the MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsOptionButton.Font">
      <summary>Specifies the font to use in the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsOptionButton.FontBold">
      <summary>Specifies the visual attributes of text on a displayed MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsOptionButton.FontItalic">
      <summary>Specifies the visual attributes of text on a displayed MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsOptionButton.FontName">
      <summary>Specifies the name of the font used to display text.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsOptionButton.FontSize">
      <summary>Specifies the font size for text displayed with an object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsOptionButton.FontStrikethru">
      <summary>Specifies the visual attributes of text on a displayed MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsOptionButton.FontUnderline">
      <summary>Specifies the visual attributes of text on a displayed MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsOptionButton.FontWeight">
      <summary>Specifies the font weight of the text displayed by the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsOptionButton.GroupName">
      <summary>Creates a group of mutually exclusive controls.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsOptionButton.Locked">
      <summary>Specifies whether a control can be edited.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsOptionButton.MultiSelect">
      <summary>Indicates whether the object permits multiple selections.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsOptionButton.Picture">
      <summary>Specifies the bitmap to display on the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsOptionButton.PicturePosition">
      <summary>Specifies the location of the picture relative to its caption.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsOptionButton.SpecialEffect">
      <summary>Specifies the visual appearance of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsOptionButton.TextAlign">
      <summary>Specifies how text is aligned in the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsOptionButton.TripleState">
      <summary>Determines whether a user can specify, from the user interface, the Null state for a CheckBox or ToggleButton.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsOptionButton.Valid">
      <summary>Returns a value that indicates if the specified form field object is a valid check box form field.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsOptionButton.Value">
      <summary>Specifies the state or content of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsOptionButton.WordWrap">
      <summary>Indicates whether the contents of the control automatically wrap at the end of a line.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsOptionButton.BeforeDragOver">
      <summary>Occurs when a drag-and-drop operation is in progress.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsOptionButton.BeforeDropOrPaste">
      <summary>Occurs when the user is about to drop or paste data onto an object.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsOptionButton.Change">
      <summary>Occurs when the Value property changes.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsOptionButton.Click">
      <summary>Occurs when the user clicks the control with the mouse.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsOptionButton.DblClick">
      <summary>Occurs when the user points to an object and then clicks a mouse button twice.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsOptionButton.Error">
      <summary>Occurs when a control detects an error and cannot return the error information to a calling program.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsOptionButton.KeyDown">
      <summary>Occurs when the user presses a key.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsOptionButton.KeyPress">
      <summary>Occurs when the user presses an ANSI key.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsOptionButton.KeyUp">
      <summary>Occurs when the user releases a key.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsOptionButton.MouseDown">
      <summary>Occurs when the user presses the mouse button.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsOptionButton.MouseMove">
      <summary>Occurs when the user moves the mouse.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsOptionButton.MouseUp">
      <summary>Occurs when the user releases the mouse button.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsScrollBar.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the ADXMSFormsScrollBar class.</summary>
      <param name="container">An object implementing System.ComponentModel.IContainer to associate with this instance of ADXMSFormsScrollBar.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsScrollBar.#ctor">
      <summary>Initializes a new instance of the ADXMSFormsScrollBar class.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsScrollBar.GetVersionIndependentProgID">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsScrollBar.ControlType">
      <summary></summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsScrollBar.Delay">
      <summary>Specifies the delay for the SpinUp, SpinDown, and Change events on a SpinButton or ScrollBar.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsScrollBar.LargeChange">
      <summary>Specifies the amount of movement that occurs when the user clicks between the scroll box and scroll arrow.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsScrollBar.Max">
      <summary>Specify the maximum acceptable value for the Value property of a ScrollBar or SpinButton.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsScrollBar.Min">
      <summary>Specify the minimum acceptable value for the Value property of a ScrollBar or SpinButton.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsScrollBar.Orientation">
      <summary>Specifies whether the SpinButton or ScrollBar is oriented vertically or horizontally.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsScrollBar.ProportionalThumb">
      <summary>Specifies whether the size of the scroll box is proportional to the scrolling region or fixed.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsScrollBar.SmallChange">
      <summary>Specifies the amount of movement that occurs when the user clicks either scroll arrow in a ScrollBar or SpinButton.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsScrollBar.Value">
      <summary>Specifies the state or content of the control.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsScrollBar.BeforeDragOver">
      <summary>Occurs when a drag-and-drop operation is in progress.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsScrollBar.BeforeDropOrPaste">
      <summary>Occurs when the user is about to drop or paste data onto an object.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsScrollBar.Change">
      <summary>Occurs when the Value property changes.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsScrollBar.Error">
      <summary>Occurs when a control detects an error and cannot return the error information to a calling program.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsScrollBar.KeyDown">
      <summary>Occurs when the user presses a key.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsScrollBar.KeyPress">
      <summary>Occurs when the user presses an ANSI key.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsScrollBar.KeyUp">
      <summary>Occurs when the user releases a key.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsScrollBar.Scroll">
      <summary>Occurs when the scroll box is repositioned.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsSpinButton.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the ADXMSFormsSpinButton class.</summary>
      <param name="container">An object implementing System.ComponentModel.IContainer to associate with this instance of ADXMSFormsSpinButton.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsSpinButton.#ctor">
      <summary>Initializes a new instance of the ADXMSFormsSpinButton class.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsSpinButton.GetVersionIndependentProgID">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsSpinButton.ControlType">
      <summary></summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsSpinButton.Delay">
      <summary>Specifies the delay for the SpinUp, SpinDown, and Change events on a SpinButton or ScrollBar.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsSpinButton.Max">
      <summary>Specify the maximum acceptable value for the Value property of a ScrollBar or SpinButton.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsSpinButton.Min">
      <summary>Specify the minimum acceptable value for the Value property of a ScrollBar or SpinButton.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsSpinButton.Orientation">
      <summary>Specifies whether the SpinButton or ScrollBar is oriented vertically or horizontally.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsSpinButton.SmallChange">
      <summary>Specifies the amount of movement that occurs when the user clicks either scroll arrow in a ScrollBar or SpinButton.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsSpinButton.Value">
      <summary>Specifies the state or content of the control.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsSpinButton.BeforeDragOver">
      <summary>Occurs when a drag-and-drop operation is in progress.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsSpinButton.BeforeDropOrPaste">
      <summary>Occurs when the user is about to drop or paste data onto an object.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsSpinButton.Change">
      <summary>Occurs when the Value property changes.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsSpinButton.Error">
      <summary>Occurs when a control detects an error and cannot return the error information to a calling program.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsSpinButton.KeyDown">
      <summary>Occurs when the user presses a key.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsSpinButton.KeyPress">
      <summary>Occurs when the user presses an ANSI key.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsSpinButton.KeyUp">
      <summary>Occurs when the user releases a key.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsSpinButton.SpinDown">
      <summary>Occurs when the user clicks the lower or left spin-button arrow.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsSpinButton.SpinUp">
      <summary>Occurs when the user clicks the upper or right spin-button arrow.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsTextBox.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the ADXMSFormsTextBox class.</summary>
      <param name="container">An object implementing System.ComponentModel.IContainer to associate with this instance of ADXMSFormsTextBox.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsTextBox.#ctor">
      <summary>Initializes a new instance of the ADXMSFormsTextBox class.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsTextBox.Copy">
      <summary>Copies the contents of an object to the Clipboard.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsTextBox.Cut">
      <summary>Removes selected information from an object and transfers it to the Clipboard.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsTextBox.GetVersionIndependentProgID">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsTextBox.Paste">
      <summary>Transfers the contents of the Clipboard to an object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.AutoSize">
      <summary>Specifies whether an object automatically resizes to display its entire contents.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.AutoTab">
      <summary>Specifies whether an automatic tab occurs when a user enters the maximum allowable number of characters into a TextBox or the text box portion of
a ComboBox.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.AutoWordSelect">
      <summary>Specifies whether a word or a character is the basic unit used to extend a selection.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.BackStyle">
      <summary>Returns or sets the background style for an object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.BorderColor">
      <summary>Specifies the color of an object's border.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.BordersSuppress">
      <summary>The property is obsolete.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.BorderStyle">
      <summary>Specifies the type of border used by the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.CanPaste">
      <summary>Specifies whether the Clipboard contains data that the object supports.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.ControlType">
      <summary></summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.CurLine">
      <summary>Specifies the current line of a control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.CurTargetX">
      <summary>Retrieves the preferred horizontal position of the insertion point in a multiline TextBox or ComboBox.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.CurTargetY">
      <summary>The property is obsolete.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.CurX">
      <summary>Specifies the current horizontal position of the insertion point in a multiline TextBox or ComboBox.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.CurY">
      <summary>The property is obsolete.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.DisplayStyle">
      <summary>Returns a style that specifies the type of the MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.DragBehavior">
      <summary>Specifies whether the system enables the drag-and-drop feature for a TextBox or ComboBox.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.DropButtonStyle">
      <summary>Specifies the symbol displayed on the drop button in the ComboBox.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.EnterFieldBehavior">
      <summary>Specifies the selection behavior when entering a TextBox or ComboBox.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.EnterKeyBehavior">
      <summary>Defines the effect of pressing ENTER in a TextBox.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.Font">
      <summary>Specifies the font to use in the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.FontBold">
      <summary>Specifies the visual attributes of text on a displayed MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.FontItalic">
      <summary>Specifies the visual attributes of text on a displayed MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.FontName">
      <summary>Specifies the name of the font used to display text.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.FontSize">
      <summary>Specifies the font size for text displayed with an object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.FontStrikethru">
      <summary>Specifies the visual attributes of text on a displayed MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.FontUnderline">
      <summary>Specifies the visual attributes of text on a displayed MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.FontWeight">
      <summary>Specifies the font weight of the text displayed by the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.HideSelection">
      <summary>Specifies whether selected text remains highlighted when a control does not have the focus.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.IMEMode">
      <summary>Specifies the default run time mode of the Input Method Editor (IME) for the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.IntegralHeight">
      <summary>Indicates whether a ListBox or TextBox displays full lines of text in a list or partial lines.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.LineCount">
      <summary>Returns the number of text lines in a TextBox or ComboBox.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.Locked">
      <summary>Specifies whether a control can be edited.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.MaxLength">
      <summary>Specifies the maximum number of characters a user can enter in a TextBox or ComboBox.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.MultiLine">
      <summary>Specifies whether a control can accept and display multiple lines of text.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.PasswordChar">
      <summary>Specifies whether placeholder characters are displayed instead of the characters actually entered in a TextBox.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.SelectionMargin">
      <summary>Specifies whether the user can select a line of text by clicking in the region to the left of the text.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.SelLength">
      <summary>The number of characters selected in a text box or the text portion of a combo box.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.SelStart">
      <summary>Indicates the starting point of selected text, or the insertion point if no text is selected.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.SelText">
      <summary>Returns or sets the selected text of a control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.ShowDropButtonWhen">
      <summary>Specifies when to show the drop-down button for a ComboBox or TextBox.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.SpecialEffect">
      <summary>Specifies the visual appearance of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.TabKeyBehavior">
      <summary>Determines whether tabs are allowed in the edit region.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.Text">
      <summary>Returns or sets the text in a TextBox. Changes the selected row in a ComboBox or ListBox.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.TextAlign">
      <summary>Specifies how text is aligned in the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.TextLength">
      <summary>Returns the length, in characters, of text in the edit region of a TextBox or ComboBox.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.Valid">
      <summary>Returns a value that indicates if the specified form field object is a valid check box form field.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.Value">
      <summary>Specifies the state or content of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsTextBox.WordWrap">
      <summary>Indicates whether the contents of a control automatically wrap at the end of a line.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsTextBox.BeforeDragOver">
      <summary>Occurs when a drag-and-drop operation is in progress.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsTextBox.BeforeDropOrPaste">
      <summary>Occurs when the user is about to drop or paste data onto an object.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsTextBox.Change">
      <summary>Occurs when the Value property changes.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsTextBox.DblClick">
      <summary>Occurs when the user points to an object and then clicks a mouse button twice.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsTextBox.DropButtonClick">
      <summary>Occurs whenever the drop-down list appears or disappears.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsTextBox.Error">
      <summary>Occurs when a control detects an error and cannot return the error information to a calling program.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsTextBox.KeyDown">
      <summary>Occurs when the user presses a key.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsTextBox.KeyPress">
      <summary>Occurs when the user presses an ANSI key.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsTextBox.KeyUp">
      <summary>Occurs when the user releases a key.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsTextBox.MouseDown">
      <summary>Occurs when the user presses the mouse button.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsTextBox.MouseMove">
      <summary>Occurs when the user moves the mouse.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsTextBox.MouseUp">
      <summary>Occurs when the user releases the mouse button.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsToggleButton.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the ADXMSFormsToggleButton class.</summary>
      <param name="container">An object implementing System.ComponentModel.IContainer to associate with this instance of ADXMSFormsToggleButton.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsToggleButton.#ctor">
      <summary>Initializes a new instance of the ADXMSFormsToggleButton class.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXMSFormsToggleButton.GetVersionIndependentProgID">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsToggleButton.Accelerator">
      <summary>Sets or retrieves the accelerator key for the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsToggleButton.Alignment">
      <summary>Specifies the position of a control relative to its caption.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsToggleButton.AutoSize">
      <summary>Specifies whether an object automatically resizes to display its entire contents.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsToggleButton.BackStyle">
      <summary>Returns or sets the background style for an object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsToggleButton.BordersSuppress">
      <summary>The property is obsolete.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsToggleButton.Caption">
      <summary>Descriptive text that appears on an object to identify or describe it.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsToggleButton.ControlType">
      <summary></summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsToggleButton.DisplayStyle">
      <summary>Returns a style that specifies the type of the MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsToggleButton.Font">
      <summary>Specifies the font to use in the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsToggleButton.FontBold">
      <summary>Specifies the visual attributes of text on a displayed MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsToggleButton.FontItalic">
      <summary>Specifies the visual attributes of text on a displayed MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsToggleButton.FontName">
      <summary>Specifies the name of the font used to display text.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsToggleButton.FontSize">
      <summary>Specifies the font size for text displayed with an object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsToggleButton.FontStrikethru">
      <summary>Specifies the visual attributes of text on a displayed MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsToggleButton.FontUnderline">
      <summary>Specifies the visual attributes of text on a displayed MSForms control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsToggleButton.FontWeight">
      <summary>Specifies the font weight of the text displayed by the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsToggleButton.GroupName">
      <summary>Creates a group of mutually exclusive controls.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsToggleButton.Locked">
      <summary>Specifies whether a control can be edited.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsToggleButton.MultiSelect">
      <summary>Indicates whether the object permits multiple selections.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsToggleButton.Picture">
      <summary>Specifies the bitmap to display on the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsToggleButton.PicturePosition">
      <summary>Specifies the location of the picture relative to its caption.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsToggleButton.SpecialEffect">
      <summary>Specifies the visual appearance of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsToggleButton.TextAlign">
      <summary>Specifies how text is aligned in the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsToggleButton.TripleState">
      <summary>Determines whether a user can specify, from the user interface, the Null state for a CheckBox or ToggleButton.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsToggleButton.Valid">
      <summary>Returns a value that indicates if the specified form field object is a valid check box form field.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsToggleButton.Value">
      <summary>Specifies the state or content of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXMSFormsToggleButton.WordWrap">
      <summary>Indicates whether the contents of a control automatically wrap at the end of a line.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsToggleButton.BeforeDragOver">
      <summary>Occurs when a drag-and-drop operation is in progress.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsToggleButton.BeforeDropOrPaste">
      <summary>Occurs when the user is about to drop or paste data onto an object.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsToggleButton.Change">
      <summary>Occurs when the Value property changes.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsToggleButton.Click">
      <summary>Occurs when the user clicks the control with the mouse.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsToggleButton.DblClick">
      <summary>Occurs when the user points to an object and then clicks a mouse button twice.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsToggleButton.Error">
      <summary>Occurs when a control detects an error and cannot return the error information to a calling program.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsToggleButton.KeyDown">
      <summary>Occurs when the user presses a key.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsToggleButton.KeyPress">
      <summary>Occurs when the user presses an ANSI key.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsToggleButton.KeyUp">
      <summary>Occurs when the user releases a key.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsToggleButton.MouseDown">
      <summary>Occurs when the user presses the mouse button.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsToggleButton.MouseMove">
      <summary>Occurs when the user moves the mouse.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXMSFormsToggleButton.MouseUp">
      <summary>Occurs when the user releases the mouse button.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlBarGroup.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlBarGroup.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlBarGroup.Caption">
      <summary>Returns or sets the display name of the group of shortcuts.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlBarGroup.Class">
      <summary>Returns a constant indicating the object's class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlBarGroup.Collection">
      <summary>The item's owner collection.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlBarGroup.GroupObj">
      <summary>Returns or sets the COM object connected to the current instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlBarGroup.IsConnected">
      <summary>True if the current class instance is connected to the corresponding COM object provided by the host application.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlBarGroup.Session">
      <summary>Returns the NameSpace object (a COM object) for the current session. If not connected, returns null (Nothing in VB).</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlBarGroup.Shortcuts">
      <summary>Returns the ADXOlBarShortcutCollection collection of shortcuts contained within the group.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlBarGroupCollection.#ctor(AddinExpress.MSO.ADXOlBarShortcutManager)">
      <summary>Initializes a new instance of the ADXOlBarGroupCollection class.</summary>
      <param name="owner">The owner of the collection.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlBarGroupCollection.Clear">
      <summary>Removes all groups from the collection.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlBarGroupCollection.Contains(System.Object)">
      <summary>Indicates whether the specified group exists in the collection.</summary>
      <param name="group">The group to locate in the collection.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlBarGroupCollection.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlBarGroupCollection.Remove(AddinExpress.MSO.ADXOlBarGroup)">
      <summary>Removes the specified ADXOlBarGroup from the group collection.</summary>
      <param name="group">The ADXOlBarGroup to remove.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlBarGroupCollection.RemoveAt(System.Int32)">
      <summary>Removes the group at the specified indexed location from the collection.</summary>
      <param name="index">The index of the group to remove.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlBarGroupCollection.Add(AddinExpress.MSO.ADXOlBarGroup)">
      <summary>Adds the specified ADXOlBarGroup to the collection.</summary>
      <param name="group">The ADXOlBarGroup to add.</param>
      <returns>The same ADXOlBarGroup if it was either previously stored or just added to the collection; otherwise a null reference (Nothing in Visual Basic).</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlBarGroupCollection.Add(System.String)">
      <summary>Creates a new ADXOlBarGroup with the specified name and adds it to the collection.</summary>
      <param name="name">The name of the ADXOlBarGroup.</param>
      <returns>The existing or a newly created ADXOlBarGroup.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlBarGroupCollection.IndexOf(AddinExpress.MSO.ADXOlBarGroup)">
      <summary>Returns the index of the specified shortcut group in the collection.</summary>
      <param name="group">The shortcut group to search for in the collection.</param>
      <returns>Integer.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlBarGroupCollection.IndexOf(System.String)">
      <summary>Returns the index of the shortcut group specified by caption in the collection.</summary>
      <param name="caption">The caption of the shortcut group to search for in the collection.</param>
      <returns>Integer.</returns>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlBarGroupCollection.Item(System.Int32)">
      <summary>Returns the ADXOlBarGroup at the specified index.</summary>
      <param name="index">The index of the ADXOlBarGroup to get.</param>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlBarGroupCollection.Owner">
      <summary>Returns the owner of the collection.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlBarShortcut.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlBarShortcut.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlBarShortcut.Caption">
      <summary>Returns or sets the display name of the shortcut.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlBarShortcut.Class">
      <summary>Returns a constant indicating the object's class. If isn't connected, returns zero.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlBarShortcut.Collection">
      <summary>The item's owner collection.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlBarShortcut.IconFileName">
      <summary>The path of the icon for the shortcut.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlBarShortcut.IsConnected">
      <summary>True if the current class instance is connected to the corresponding COM object provided by the host application.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlBarShortcut.Session">
      <summary>Returns a NameSpace object (a COM object) for the current session. If isn't connected, returns null (Nothing in VB).</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlBarShortcut.ShortcutObj">
      <summary>Returns or sets the COM object connected to the current instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlBarShortcut.Target">
      <summary>Returns an Object (probably a COM object) indicating the target of the shortcut.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlBarShortcutCollection.#ctor(AddinExpress.MSO.ADXOlBarGroup)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="owner">The owner of the collection.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlBarShortcutCollection.Clear">
      <summary>Removes all shortcuts from the collection.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlBarShortcutCollection.Contains(System.Object)">
      <summary>Indicates whether the specified shortcut exists in the collection.</summary>
      <param name="shortcut">The shortcut to locate in the collection.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlBarShortcutCollection.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlBarShortcutCollection.Remove(AddinExpress.MSO.ADXOlBarShortcut)">
      <summary>Removes the specified ADXOlBarShortcut from the shortcut collection.</summary>
      <param name="shortcut">The ADXOlBarShortcut to remove.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlBarShortcutCollection.RemoveAt(System.Int32)">
      <summary>Removes the shortcut at the specified indexed location from the collection.</summary>
      <param name="index">The index of the shortcut to remove.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlBarShortcutCollection.Add(AddinExpress.MSO.ADXOlBarShortcut)">
      <summary>Adds the specified ADXOlBarShortcut to the collection.</summary>
      <param name="shortcut">The ADXOlBarShortcut to add.</param>
      <returns>The same ADXOlBarShortcut if it was either previously stored or just added to the collection; otherwise a null reference (Nothing in Visual
Basic).</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlBarShortcutCollection.Add(System.Object,System.String,System.String)">
      <summary>Creates a new ADXOlBarShortcut with the specified target, name, and path to the icon file, and adds it to the collection.</summary>
      <param name="target">The target of the shortcut being created.</param>
      <param name="name">The name of the shortcut being created.</param>
      <param name="iconFileName">The path to the icon of the shortcut being created.</param>
      <returns>The existing or a newly created ADXOlBarShortcut.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlBarShortcutCollection.IndexOf(AddinExpress.MSO.ADXOlBarShortcut)">
      <summary>Returns the index of the specified shortcut in the collection.</summary>
      <param name="shortcut">The shortcut to search for in the collection.</param>
      <returns>Integer.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlBarShortcutCollection.IndexOf(System.String)">
      <summary>Returns the index of the shortcut specified by caption in the collection.</summary>
      <param name="caption">The caption of the shortcut to search for in the collection.</param>
      <returns>Integer.</returns>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlBarShortcutCollection.Item(System.Int32)">
      <summary>Returns the ADXOlBarShortcut at the specified index.</summary>
      <param name="index">The index of the ADXOlBarShortcut to get.</param>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlBarShortcutCollection.Owner">
      <summary>Returns the owner of the collection.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlBarShortcutManager.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlBarShortcutManager.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlBarShortcutManager.Groups">
      <summary>Returns the ADXOlBarGroupCollection collection containing all shortcut groups in the Shortcuts pane (Outlook Bar) of an explorer window.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlBarShortcutManager.IsConnected">
      <summary>True if the current class instance is connected to the corresponding COM object provided by the host application.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlBarShortcutManager.OutlookGroupsObj">
      <summary>Returns the COM object connected to the current instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlBeforeFolderSharingDialogEventArgs.Cancel">
      <summary>Returns or sets a boolean value indicating whether the event should be canceled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlBeforeFolderSharingDialogEventArgs.FolderToShare">
      <summary>Returns the Folder to share (a COM object).</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlExplorerBeforeFolderSwitchEventArgs.Cancel">
      <summary>Returns or sets a boolean value indicating whether the event should be canceled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlExplorerBeforeFolderSwitchEventArgs.Explorer">
      <summary>Returns the Explorer COM object that has fired the event.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlExplorerBeforeFolderSwitchEventArgs.NewFolder">
      <summary>Returns the MAPIFolder COM object the explorer is switching to. Returns null (Nothing in VB) if the folder being switched to is in a namespace
that doesn’t support Automation (such as the file system).</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlExplorerBeforeItemPasteEventArgs.Cancel">
      <summary>Returns or sets a boolean value indicating whether the event should be canceled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlExplorerBeforeItemPasteEventArgs.ClipboardContent">
      <summary>Returns the content to be pasted.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlExplorerBeforeItemPasteEventArgs.Folder">
      <summary>Returns the MAPIFolder COM object that is the destination of the paste.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlExplorerBeforeViewSwitchEventArgs.Cancel">
      <summary>Returns or sets a boolean value indicating whether the event should be canceled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlExplorerBeforeViewSwitchEventArgs.Explorer">
      <summary>Returns the Explorer COM object that has fired the event.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlExplorerBeforeViewSwitchEventArgs.NewView">
      <summary>Returns the name of the view the explorer is switching to.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlExplorerCommandBar.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlExplorerCommandBar.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlExplorerCommandBar.FolderName">
      <summary>The name of the folder that the command bar will be shown for.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlExplorerCommandBar.FolderNames">
      <summary>The names of the folders that the command bar will be shown for.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlExplorerCommandBar.ItemTypes">
      <summary>Returns or sets the item types that the command bar will be shown for.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlExplorerCommandBar.SupportedApps">
      <summary>Returns host applications supported by the command bar.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlExplorerCommandBar.UseForRibbon">
      <summary>True if the command bar is shown in the Ribbon UI.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlExplorerCommandBar.Visible">
      <summary>Shows / hides the command bar.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlExplorerMainMenu.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlExplorerMainMenu.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlExplorerMainMenu.BuiltIn">
      <summary>Returns True if the command bar is a built-in command bar of the host application.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlExplorerMainMenu.Controls">
      <summary>Controls on the command bar.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlExplorerMainMenu.SupportedApps">
      <summary>Returns host applications supported by the command bar.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlFolderPage.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlFolderPage.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlFolderPage.Collection">
      <summary>The owner collection of the item.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlFolderPage.FolderName">
      <summary>The folder that the property page will be shown for.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlFolderPage.FolderNames">
      <summary>The folders that the property page will be shown for.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlFolderPage.ItemTypes">
      <summary>Item types for which the property page will be shown.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlFolderPage.PageControl">
      <summary>Returns a control (System.Windows.Forms.Control) that represents the property Page.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlFolderPage.PageTitle">
      <summary>The title of the property page tab.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlFolderPage.PageType">
      <summary>The type name of the property page.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlFolderPageCollection.#ctor(AddinExpress.MSO.ADXAddinModule)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="owner">The AddinModule the collection belongs to.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlFolderPageCollection.Add(AddinExpress.MSO.ADXOlFolderPage)">
      <summary>Adds the specified ADXOlFolderPage to the collection.</summary>
      <param name="page">The ADXOlFolderPage to add.</param>
      <returns>The same ADXOlFolderPage if it was either previously stored or just added to the collection; otherwise a null reference (Nothing in Visual
Basic).</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlFolderPageCollection.Clear">
      <summary>Removes all property pages from the collection.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlFolderPageCollection.Contains(System.Object)">
      <summary>Indicates whether the specified page exists in the collection.</summary>
      <param name="page">The page to locate in the collection.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlFolderPageCollection.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlFolderPageCollection.Remove(AddinExpress.MSO.ADXOlFolderPage)">
      <summary>Removes the specified property page from the collection.</summary>
      <param name="page">The property page to remove.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlFolderPageCollection.RemoveAt(System.Int32)">
      <summary>Removes the page at the specified indexed location from the collection.</summary>
      <param name="index">The index of the page to remove.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlFolderPageCollection.IndexOf(AddinExpress.MSO.ADXOlFolderPage)">
      <summary>Returns the index of the specified page in the collection.</summary>
      <param name="page">The page to search for in the collection.</param>
      <returns>Integer.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlFolderPageCollection.IndexOf(System.String)">
      <summary>Returns the index of the page specified by name in the collection.</summary>
      <param name="pageName">The name of the page page to search for in the collection.</param>
      <returns>Integer.</returns>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlFolderPageCollection.Item(System.Int32)">
      <summary>Returns the ADXOlFolderPage at the specified index.</summary>
      <param name="index">The index of the ADXOlFolderPage to get.</param>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlFolderPageCollection.Owner">
      <summary>Returns the owner of the collection.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlGetFormRegionIconEventArgs.FormRegionName">
      <summary>The name of the form region which is the name used when registering the form region in the Windows registry.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlGetFormRegionIconEventArgs.Icon">
      <summary>A constant that identifies the type of icon.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlGetFormRegionIconEventArgs.IconObj">
      <summary>Returns or sets an Object that is either a byte-array that represents the original bytes of the image file or an IPictureDisp object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlGetFormRegionIconEventArgs.LCID">
      <summary>The locale ID that identifies the language that Outlook is currently using. This value is used to obtain the localization strings corresponding
to this language for the form region.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlGetFormRegionManifestEventArgs.FormRegionName">
      <summary>The name of the form region which is the name used when registering the form region in the Windows registry.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlGetFormRegionManifestEventArgs.LCID">
      <summary>The locale ID that identifies the language that Outlook is currently using. This value is used to obtain the localization strings corresponding
to this language for the form region.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlGetFormRegionManifestEventArgs.Manifest">
      <summary>The XML manifest for a form region.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlGetFormRegionStorageEventArgs.FormRegionMode">
      <summary>An ADXOlFormRegionMode that represents the mode that the form region is being loaded into.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlGetFormRegionStorageEventArgs.FormRegionName">
      <summary>The name of the form region which is the name used when registering the form region in the Windows registry.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlGetFormRegionStorageEventArgs.FormRegionSize">
      <summary>The type of form region being loaded, either adjoining or separate.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlGetFormRegionStorageEventArgs.Item">
      <summary>The Outlook item object that caused the loading of the form region.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlGetFormRegionStorageEventArgs.LCID">
      <summary>The locale ID that identifies the language that Outlook is currently using. This value is used to obtain the localization strings corresponding
to this language for the form region.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlGetFormRegionStorageEventArgs.Region">
      <summary>Returns or sets an array of bytes that contains the contents of the .OFS file. If null (Nothing in VB), then Outlook could not allocate storage
for this form region and will not load the form region.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlInspectorCommandBar.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlInspectorCommandBar.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlInspectorCommandBar.FolderName">
      <summary>The name of the folder that the command bar will be shown for.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlInspectorCommandBar.FolderNames">
      <summary>The names of the folders that the command bar will be shown for.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlInspectorCommandBar.ItemTypes">
      <summary>Returns or sets the item types that the command bar is be shown for.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlInspectorCommandBar.SupportedApps">
      <summary>Returns host applications supported by the command bar.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlInspectorCommandBar.Visible">
      <summary>Shows / hides the command bar.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlInspectorMainMenu.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlInspectorMainMenu.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlInspectorMainMenu.BuiltIn">
      <summary>Returns True if the command bar is a built-in command bar of the host application.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlInspectorMainMenu.Controls">
      <summary>Controls on the command bar.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlInspectorMainMenu.SupportedApps">
      <summary>Returns host applications supported by the command bar.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlInspectorMainMenu.Visible">
      <summary>Shows / hides the command bar.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlItemSendEventArgs.Cancel">
      <summary>Returns or sets a boolean value indicating whether the event should be canceled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlItemSendEventArgs.Item">
      <summary>Returns the Outlook item (a COM object) that has fired the event.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlPageChangeEventArgs.ActivePageName">
      <summary>The name of the active page.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlPropertyPage.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlPropertyPage.OlPropertyPageRegister(System.String)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="key"></param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlPropertyPage.OlPropertyPageUnregister(System.String)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="key"></param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOlPropertyPage.OnStatusChange">
      <summary>Notifies Microsoft Outlook that the custom property page has changed.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlPropertyPage.Caption">
      <summary>Returns or sets the title of the property page tab.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlPropertyPage.HelpContext">
      <summary>Returns or sets the Help context Id number for the Help topic attached to the property page.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOlPropertyPage.HelpFile">
      <summary>Returns or sets the file name for the Help topic attached to the property page.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOlPropertyPage.Apply">
      <summary>Occurs when the user has taken an action in the dialog box displaying the custom property page that requires your program to apply the property
values changed by the user.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOlPropertyPage.Dirty">
      <summary>Occurs whenever the ADXOlPropertyPage.OnStatusChange method is called.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOLSolutionFolder.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOLSolutionFolder.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOLSolutionFolder.FolderName">
      <summary>Returns or sets the name of the solution folder.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOLSolutionFolder.Folders">
      <summary>Returns or sets the collection of the solution folder items.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOLSolutionFolder.FolderType">
      <summary>Returns or sets the value which identifies the navigation folder type.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOLSolutionFolder.Image">
      <summary>Specifies the index of an image in an Imagelist that supplies images for the folder.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOLSolutionFolder.ImageList">
      <summary>Returns or sets an ImageList that will be used for adding images to the solution folder.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOLSolutionFolder.ImageTransparentColor">
      <summary>Returns or sets the solution folder image color to be transparent when the bitmap is drawn.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOLSolutionFolders.#ctor(System.Object)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="owner">The owner of the collection.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOLSolutionFolders.Add(AddinExpress.MSO.ADXOLSolutionFolder)">
      <summary>Adds the specified ADXOLSolutionFolder to the collection.</summary>
      <param name="folder">The ADXOLSolutionFolder to add.</param>
      <returns>The same ADXOLSolutionFolder if it was either previously stored or just added to the collection; otherwise a null reference (Nothing in Visual
Basic).</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXOLSolutionFolders.Clear">
      <summary>Removes all solution folders from the collection.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOLSolutionFolders.Contains(System.Object)">
      <summary>Indicates whether the specified folder exists in the collection.</summary>
      <param name="folder">The solution folder to locate in the collection.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOLSolutionFolders.Copy">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOLSolutionFolders.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOLSolutionFolders.Remove(AddinExpress.MSO.ADXOLSolutionFolder)">
      <summary>Removes the specified folder from the collection.</summary>
      <param name="folder">The solution folder to remove.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOLSolutionFolders.RemoveAt(System.Int32)">
      <summary>Removes a solution folder at the specified indexed location from the folder collection.</summary>
      <param name="index">The index of the solution folder to remove.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOLSolutionFolders.IndexOf(AddinExpress.MSO.ADXOLSolutionFolder)">
      <summary>Returns the index of the specified folder in the collection.</summary>
      <param name="folder">The solution folder to search for in the collection.</param>
      <returns>Integer.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXOLSolutionFolders.IndexOf(System.String)">
      <summary>Returns the index of the folder specified by name in the collection.</summary>
      <param name="folderName">The name of the solution folder to search for in the collection.</param>
      <returns>Integer.</returns>
    </member>
    <member name="P:AddinExpress.MSO.ADXOLSolutionFolders.Item(System.Int32)">
      <summary>Returns the ADXOLSolutionFolder at the specified index.</summary>
      <param name="index">The index of the ADXOLSolutionFolder to get.</param>
      <returns></returns>
    </member>
    <member name="P:AddinExpress.MSO.ADXOLSolutionFolders.Owner">
      <summary>Returns the owner of the collection.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOLSolutionModule.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the ADXOLSolutionModule class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOLSolutionModule.#ctor">
      <summary>Initializes a new instance of the ADXOLSolutionModule class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOLSolutionModule.Folders">
      <summary>The collection of the solution folders.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOLSolutionModule.NavigationPaneDisplayedModuleCount">
      <summary>The size of the Solutions module button in the Navigation Pane. If the it is less than the NavigationPanePosition property of the
ADXOLSolutionModule object, then the module button is a small one instead of a large one.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOLSolutionModule.NavigationPanePosition">
      <summary>The position of the Solutions module button in the Navigation Pane.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOLSolutionModule.Visible">
      <summary>Determines the visibility of the Solutions module button in the Navigation Pane.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOLSolutionModule.ParentFolderRequest">
      <summary>Fires when the Solution module is installed in Outlook. Allows you to specify the parent folder for the solution module folders.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOptionPageAddEventArgs.Cancel">
      <summary>Returns or sets a boolean value indicating whether the event should be canceled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOptionPageAddEventArgs.FolderPage">
      <summary>Returns the ADXOlFolderPage property page.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookAppEvents.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the ADXOutlookAppEvents.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookAppEvents.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOutlookAppEvents.ClassName">
      <summary>Returns a string value that represents the class identifier of the component.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.AdvancedSearchComplete">
      <summary>Occurs when the AdvancedSearch method has completed.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.AdvancedSearchStopped">
      <summary>Occurs when a specified Search object's Stop method has been executed.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.AttachmentContextMenuDisplay">
      <summary>Occurs before a context menu is displayed for a collection of attachments (Outlook 2007).</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.AutoDiscoverComplete">
      <summary>Occurs after Outlook has finished accessing the auto-discovery service of an Exchange server and has the related information available in
NameSpace.AutoDiscoverXml (Outlook 2007).</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.BeforeFolderSharingDialog">
      <summary>Occurs before the Sharing dialog box is displayed for a selected Folder object (Outlook 2007).</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.BeforeOptionPageAdd">
      <summary>Occurs before a new option page is added to the collection of Outlook option pages.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.BeforeReminderShow">
      <summary>Occurs before the Reminder dialog box is displayed.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.CommandBarsUpdate">
      <summary>Occurs when Outlook updates its command bars.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.ContextMenuClose">
      <summary>Occurs after a context menu is closed (Outlook 2007).</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.ExplorerActivate">
      <summary>Occurs when an explorer becomes the active window, either as a result of user action or through program code.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.ExplorerAddCommandBars">
      <summary>Occurs before Add-in Express adds command bars to the active explorer.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.ExplorerAttachmentSelectionChange">
      <summary>Introduced in Outlook 2010. Occurs when the user selects a different or additional attachment in the active explorer programmatically or by
interacting with the user interface.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.ExplorerBeforeFolderSwitch">
      <summary>Occurs before the explorer goes to a new folder, either as a result of user action or through program code.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.ExplorerBeforeItemCopy">
      <summary>Occurs when an item is copied. This event can be cancelled after it has started.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.ExplorerBeforeItemCut">
      <summary>Occurs when an item is cut from a folder. This method can be cancelled after it has started.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.ExplorerBeforeItemPaste">
      <summary>Occurs when a Microsoft Outlook item is pasted. This event can be cancelled after it has started.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.ExplorerBeforeMaximize">
      <summary>Occurs when an Explorer is maximized by the user. This event can be cancelled after it has started.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.ExplorerBeforeMinimize">
      <summary>Occurs when the active Explorer is minimized by the user. This event can be cancelled after it has started.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.ExplorerBeforeMove">
      <summary>Occurs when the Explorer is moved by the user. This event can be cancelled after it has started.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.ExplorerBeforeSize">
      <summary>Occurs when the user sizes the current Explorer. This event can be cancelled after it has started.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.ExplorerBeforeViewSwitch">
      <summary>Occurs before the explorer changes to a new view, either as a result of user action or through program code.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.ExplorerClose">
      <summary>Occurs when an explorer is being closed.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.ExplorerDeactivate">
      <summary>Occurs when an explorer stops being the active window, either as a result of user action or through program code.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.ExplorerFolderSwitch">
      <summary>Occurs when the explorer goes to a new folder, either as a result of user action or through program code.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.ExplorerSelectionChange">
      <summary>Occurs when the user switches to a different item in a folder using the user interface (UI) or programmatically.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.ExplorerViewSwitch">
      <summary>Occurs when the view in the explorer changes, either as a result of user action or through program code.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.FolderContextMenuDisplay">
      <summary>Occurs before a context menu is displayed for a folder (Outlook 2007).</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.InspectorActivate">
      <summary>Occurs when an inspector becomes the active window, either as a result of user action or through program code.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.InspectorAddCommandBars">
      <summary>Occurs before Add-in Express adds command bars to the active inspector.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.InspectorAttachmentSelectionChange">
      <summary>Introduced in Outlook 2010. Occurs when the user selects a different or additional attachment of an item in the active inspector programmatically
or by interacting with the user interface.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.InspectorBeforeMaximize">
      <summary>Occurs when an Inspector is maximized by the user. This event can be cancelled after it has started.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.InspectorBeforeMinimize">
      <summary>Occurs when the active Inspector is minimized by the user. This event can be cancelled after it has started.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.InspectorBeforeMove">
      <summary>Occurs when the Inspector is moved by the user. This event can be cancelled after it has started.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.InspectorBeforeSize">
      <summary>Occurs when the user sizes the current Inspector. This event can be cancelled after it has started.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.InspectorClose">
      <summary>Occurs when the inspector associated with a Microsoft Outlook item is being closed.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.InspectorDeactivate">
      <summary>Occurs when an inspector stops being the active window, either as a result of user action or through program code.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.ItemContextMenuDisplay">
      <summary>Occurs before a context menu is displayed for a collection of Outlook items (Outlook 2007).</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.ItemLoad">
      <summary>Occurs when an Outlook item is loaded into memory (Outlook 2007).</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.ItemSend">
      <summary>Occurs whenever an item is sent, either by the user through an Inspector (before the inspector is closed, but after the user clicks the Send
button) or when the Send method is used in a program.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.MAPILogonComplete">
      <summary>Occurs after the user has logged onto the system.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.NamespaceBeforeOptionPageAdd">
      <summary>Occurs before a new option page is added to the collection of Outlook option pages.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.NamespaceOptionPagesAdd">
      <summary>Occurs when Outlook updates the option pages collections of folders.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.NewExplorer">
      <summary>Occurs whenever a new explorer window is opened, either as a result of user action or through program code.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.NewInspector">
      <summary>Occurs whenever a new inspector window is opened, either as a result of user action or through program code.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.NewMail">
      <summary>Occurs when one or more new e-mail messages are received in the Inbox.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.NewMailEx">
      <summary>Occurs when one or more new items are received in the Inbox.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.OnBeforeFormRegionShow">
      <summary>Allows an add-in to update the user interface of a form region before it is displayed.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.OnGetFormRegionIcon">
      <summary>Obtains an icon image that will be displayed for a particular type of icon for the form region.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.OnGetFormRegionManifest">
      <summary>Obtains the XML manifest for a form region.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.OnGetFormRegionStorage">
      <summary>Obtains appropriate storage for a form region based on the specified information.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.OptionPagesAdd">
      <summary>Occurs when Outlook updates its option page collection.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.PageChange">
      <summary>Occurs when the active form page changes, either programmatically or by user action, on an Inspector object (Outlook 2007).</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.Quit">
      <summary>Occurs when Microsoft Outlook begins to close.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.Reminder">
      <summary>Occurs immediately before a reminder is displayed.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.ReminderAdd">
      <summary>Occurs after a reminder is added.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.ReminderChange">
      <summary>Occurs after a reminder has been modified.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.ReminderFire">
      <summary>Occurs before the reminder is executed.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.ReminderRemove">
      <summary>Occurs when a Reminder object has been removed from the collection.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.ShortcutContextMenuDisplay">
      <summary>Occurs before a context menu is displayed for a shortcut (Outlook 2007).</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.Snooze">
      <summary>Occurs when a reminder is dismissed using the Snooze button.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.Startup">
      <summary>Occurs when Microsoft Outlook is starting, but after all add-in programs have been loaded.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.StoreContextMenuDisplay">
      <summary>Occurs before a context menu is displayed for a store (Outlook 2007).</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.SyncEnd">
      <summary>Occurs immediately after Microsoft Outlook finishes synchronizing a user’s folders using the specified Send\\Receive group.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.SyncError">
      <summary>Occurs when Microsoft Outlook encounters an error while synchronizing a user’s folders using the specified Send\Receive group.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.SyncProgress">
      <summary>Occurs periodically while Microsoft Outlook is synchronizing a user’s folders using the specified Send\Receive group.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.SyncStart">
      <summary>Occurs when Microsoft Outlook begins synchronizing a user’s folders using the specified Send\Receive group.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXOutlookAppEvents.ViewContextMenuDisplay">
      <summary>Occurs before a context menu is displayed for a view (Outlook 2007).</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookFoldersEvents.DisconnectSubFolders">
      <summary>Disconnects from the events of the sub-folders of the folder specified in the ConnectTo method.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookFoldersEvents.ProcessFolderAdd(System.Object)">
      <summary>Is called when the FolderAdd event of the Folders collection occurs.</summary>
      <param name="item">The item (a COM object) that was added to the Folders collection.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookFoldersEvents.ProcessFolderChange(System.Object)">
      <summary>Is called when the FolderChange event of the Folders collection occurs.</summary>
      <param name="item">The item (a COM object) that was changed.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookFoldersEvents.ProcessFolderRemove">
      <summary>Is called when the FolderRemove event of the Folders collection occurs.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookFoldersEvents.RemoveConnection">
      <summary>Disconnects the class from the events of the folder specified in the ConnectTo method and all its subfolders. If specified in the ConnectTo
method, releases the folder object.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookFoldersEvents.ConnectTo(System.Object,System.Boolean)">
      <summary>Connects to the events of the specified folder. If the <i>eventClassReleasesComObject</i> parameter is <b>true</b>, the folder object will be
released when the <b>RemoveConnection</b> method of the class is called. Otherwise, the developer is responsible for releasing the folder object.</summary>
      <param name="olFolder">An Outlook folder the events of which will be processed by the class.</param>
      <param name="eventClassReleasesComObject">If true, the folder object will be released when the <b>RemoveConnection</b> method of the class is called. Otherwise, the developer is
responsible for releasing the folder object specified in the <i>olFolder</i> parameter.</param>
      <returns>Returns true, if the events are connected successfully. Otherwise, returns false.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookFoldersEvents.ConnectTo(System.Object,System.Boolean,System.Boolean)">
      <summary>Connects to the events of the specified folder. If the <i>eventClassReleasesComObject</i> parameter is <b>true</b>, the folder object will be
released when the <b>RemoveConnection</b> method of the class is called. Otherwise, the developer is responsible for releasing the folder object.</summary>
      <param name="olFolder">An Outlook folder the events of which will be processed by the class.</param>
      <param name="eventClassReleasesComObject">If true, the folder object will be released when the <b>RemoveConnection</b> method of the class is called. Otherwise, the developer is
responsible for releasing the folder object specified in the <i>olFolder</i> parameter.</param>
      <param name="recursive">If true, the class also connects to the events of the Items collections of all sub-folders of the specified folder.</param>
      <returns>Returns true, if the events are connected successfully. Otherwise, returns false.</returns>
    </member>
    <member name="P:AddinExpress.MSO.ADXOutlookFoldersEvents.FolderObj">
      <summary>Returns the MAPIFolder object (a COM object) to the events of which the class is connected.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOutlookFoldersEvents.IsConnected">
      <summary>Returns a boolean value which specifies whether the class is connected to a folder.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOutlookFoldersEvents.Module">
      <summary>Returns an ADXAddinModule which supplies events for the class.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemEvents.ConnectTo(System.Object,System.Boolean)">
      <summary>Connects to the events of the specified item. If the <i>eventClassReleasesComObject</i> parameter is <b>true</b>, the folder object will be
released when the <b>RemoveConnection</b> method of the class is called. Otherwise, the developer is responsible for releasing the folder object.</summary>
      <param name="olItem">An Outlook item the events of which will be processed by the class.</param>
      <param name="eventClassReleasesComObject">If true, the folder object will be released when the <b>RemoveConnection</b> method of the class is called. Otherwise, the developer is
responsible for releasing the folder object specified in the <i>olFolder</i> parameter.</param>
      <returns>Returns true, if the events are connected successfully. Otherwise, returns false.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemEvents.ProcessAfterWrite">
      <summary>Introduced in Outlook 2010. Occurs after Microsoft Outlook has saved the item.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemEvents.ProcessAttachmentAdd(System.Object)">
      <summary>Is called when the AttachmentAdd event of the Outlook item occurs.</summary>
      <param name="attachment">The attachment (a COM object) that was added to the item.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemEvents.ProcessAttachmentRead(System.Object)">
      <summary>Is called when the AttachmentRead event of the Outlook item occurs.</summary>
      <param name="attachment">The attachment (a COM object) that was opened for reading.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemEvents.ProcessAttachmentRemove(System.Object)">
      <summary>Introduced in Outlook 2007. Is called when the AttachmentRemove event of the Outlook item occurs.</summary>
      <param name="attachment">The attachment (a COM object) that was removed from the item.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemEvents.ProcessBeforeAttachmentAdd(System.Object,AddinExpress.MSO.ADXCancelEventArgs)">
      <summary>Introduced in Outlook 2007. Is called when the BeforeAttachmentAdd event of the Outlook item occurs.</summary>
      <param name="attachment">The attachment (a COM object) to be added to the item.</param>
      <param name="e">An ADXCancelEventArgs that allows cancelling the operation.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemEvents.ProcessBeforeAttachmentPreview(System.Object,AddinExpress.MSO.ADXCancelEventArgs)">
      <summary>Introduced in Outlook 2007. Is called when the BeforeAttachmentPreview event of the Outlook item occurs.</summary>
      <param name="attachment">The attachment (a COM object) to be previewed.</param>
      <param name="e">An ADXCancelEventArgs that allows cancelling the operation.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemEvents.ProcessBeforeAttachmentRead(System.Object,AddinExpress.MSO.ADXCancelEventArgs)">
      <summary>Introduced in Outlook 2007. Is called when the BeforeAttachmentRead event of the Outlook item occurs.</summary>
      <param name="attachment">The attachment (a COM object) to be read.</param>
      <param name="e">An ADXCancelEventArgs that allows cancelling the operation.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemEvents.ProcessBeforeAttachmentSave(System.Object,AddinExpress.MSO.ADXCancelEventArgs)">
      <summary>Is called when the BeforeAttachmentSave event of the Outlook item occurs.</summary>
      <param name="attachment">The attachment (a COM object) to be saved.</param>
      <param name="e">An ADXCancelEventArgs that allows cancelling the operation.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemEvents.ProcessBeforeAttachmentWriteToTempFile(System.Object,AddinExpress.MSO.ADXCancelEventArgs)">
      <summary>Introduced in Outlook 2007. Is called when the BeforeAttachmentWriteToTempFile event of the Outlook item occurs.</summary>
      <param name="attachment">The attachment (a COM object) to be written.</param>
      <param name="e">An ADXCancelEventArgs that allows cancelling the operation.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemEvents.ProcessBeforeAutoSave(AddinExpress.MSO.ADXCancelEventArgs)">
      <summary>Introduced in Outlook 2007. Is called when the BeforeAutoSave event of the Outlook item occurs.</summary>
      <param name="e">An ADXCancelEventArgs that allows cancelling the operation.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemEvents.ProcessBeforeCheckNames(AddinExpress.MSO.ADXCancelEventArgs)">
      <summary>Is called when the BeforeCheckNames event of the Outlook item occurs.</summary>
      <param name="e">An ADXCancelEventArgs that allows cancelling the operation.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemEvents.ProcessBeforeDelete(System.Object,AddinExpress.MSO.ADXCancelEventArgs)">
      <summary>Is called when the BeforeDelete event of the Outlook item occurs.</summary>
      <param name="item">The item (a COM object) being deleted.</param>
      <param name="e">An ADXCancelEventArgs that allows cancelling the operation. If e.Cancel is set to true, the reply operation is not completed and the new item is
not displayed.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemEvents.ProcessBeforeRead">
      <summary>Introduced in Outlook 2010. Occurs before Microsoft Outlook begins to read the properties for the item.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemEvents.ProcessClose(AddinExpress.MSO.ADXCancelEventArgs)">
      <summary>Is called when the Close event of the Outlook item occurs.</summary>
      <param name="e">An ADXCancelEventArgs that allows cancelling the operation.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemEvents.ProcessCustomAction(System.Object,System.Object,AddinExpress.MSO.ADXCancelEventArgs)">
      <summary>Is called when the CustomAction event of the Outlook item occurs.</summary>
      <param name="action">The Action object (a COM object) which represents the custom action that executes.</param>
      <param name="response">The newly created item (a COM object) resulting from the custom action.</param>
      <param name="e">An ADXCancelEventArgs that allows cancelling the operation. If e.Cancel is set to true, the custom action is not completed.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemEvents.ProcessCustomPropertyChange(System.String)">
      <summary>Is called when the CustomPropertyChange event of the Outlook item occurs.</summary>
      <param name="name">The name of the custom property that was changed.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemEvents.ProcessForward(System.Object,AddinExpress.MSO.ADXCancelEventArgs)">
      <summary>Is called when the Forward event of the Outlook item occurs.</summary>
      <param name="forward">The new item (a COM object) being forwarded.</param>
      <param name="e">An ADXCancelEventArgs that allows cancelling the operation. If e.Cancel is set to true, the forward operation is not completed and the new item
is not displayed.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemEvents.ProcessOpen(AddinExpress.MSO.ADXCancelEventArgs)">
      <summary>Is called when the Open event of the Outlook item occurs.</summary>
      <param name="e">An ADXCancelEventArgs that allows cancelling the operation. If e.Cancel is set to true, the open operation is not completed and the inspector is
not displayed.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemEvents.ProcessPropertyChange(System.String)">
      <summary>Is called when the PropertyChange event of the Outlook item occurs.</summary>
      <param name="name">The name of the property that was changed.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemEvents.ProcessRead">
      <summary>Is called when the Read event of the Outlook item occurs.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemEvents.ProcessReply(System.Object,AddinExpress.MSO.ADXCancelEventArgs)">
      <summary>Is called when the Reply event of the Outlook item occurs.</summary>
      <param name="response">The new item (a COM object) being sent in response to the original message.</param>
      <param name="e">An ADXCancelEventArgs that allows cancelling the operation. If e.Cancel is set to true, the reply operation is not completed and the new item is
not displayed.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemEvents.ProcessReplyAll(System.Object,AddinExpress.MSO.ADXCancelEventArgs)">
      <summary>Is called when the ReplyAll event of the Outlook item occurs.</summary>
      <param name="response">The new item (a COM object) being sent in response to the original message.</param>
      <param name="e">An ADXCancelEventArgs that allows cancelling the operation. If e.Cancel is set to true, the reply operation is not completed and the new item is
not displayed.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemEvents.ProcessSend(AddinExpress.MSO.ADXCancelEventArgs)">
      <summary>Is called when the Send event of the Outlook item occurs.</summary>
      <param name="e">An ADXCancelEventArgs that allows cancelling the operation. If e.Cancel is set to true, the open operation is not completed and the inspector is
left open.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemEvents.ProcessUnload">
      <summary>Introduced in Outlook 2007. Is called when the Unload event of the Outlook item occurs.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemEvents.ProcessWrite(AddinExpress.MSO.ADXCancelEventArgs)">
      <summary>Is called when the Write event of the Outlook item occurs.</summary>
      <param name="e">An ADXCancelEventArgs that allows cancelling the operation. If e.Cancel is set to true, the save operation is not completed.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemEvents.RemoveConnection">
      <summary>Disconnects the class from the events of the item specified in the ConnectTo method. If specified in the ConnectTo method, releases the item
object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOutlookItemEvents.IsConnected">
      <summary>Returns a boolean value which specifies whether the class is connected to a folder.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOutlookItemEvents.ItemObj">
      <summary>Returns the Outlook item object (a COM object) to the events of which the class is connected.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOutlookItemEvents.Module">
      <summary>Returns an ADXAddinModule which supplies events for the class.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemsEvents.DisconnectSubFolders">
      <summary>Disconnects from the events of the sub-folders of the folder specified in the ConnectTo method.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemsEvents.ProcessBeforeFolderMove(System.Object,AddinExpress.MSO.ADXCancelEventArgs)">
      <summary>Is called when the BeforeFolderMove event of the folder specified in the ConnectTo method occurs.</summary>
      <param name="moveTo">Represents the folder (a COM object) to which the item is being moved.</param>
      <param name="e">An ADXCancelEventArgs that allows cancelling the operation.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemsEvents.ProcessBeforeItemMove(System.Object,System.Object,AddinExpress.MSO.ADXCancelEventArgs)">
      <summary>Is called when the BeforeItemMove event of the folder specified in the ConnectTo method occurs.</summary>
      <param name="item">Represents an Outlook item (a COM object) that is to be moved or deleted.</param>
      <param name="moveTo">Represents the folder (a COM object) to which the item is being moved.</param>
      <param name="e">An ADXCancelEventArgs that allows cancelling the operation.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemsEvents.ProcessItemAdd(System.Object)">
      <summary>Is called when the ItemAdd event of the Items collection occurs.</summary>
      <param name="item">The item (a COM object) that was added to the Items collection.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemsEvents.ProcessItemChange(System.Object)">
      <summary>Is called when the ItemChange event of the Items collection occurs.</summary>
      <param name="item">The item (a COM object) that was changed.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemsEvents.ProcessItemRemove">
      <summary>Is called when the ItemRemove event of the Items collection occurs.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemsEvents.RemoveConnection">
      <summary>Disconnects the class from the events of the folder specified in the ConnectTo method and all its subfolders. If specified in the ConnectTo
method, releases the folder object.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemsEvents.ConnectTo(System.Object,System.Boolean)">
      <summary>Connects to the events of the specified folder. If the <i>eventClassReleasesComObject</i> parameter is <b>true</b>, the folder object will be
released when the <b>RemoveConnection</b> method of the class is called. Otherwise, the developer is responsible for releasing the folder object.</summary>
      <param name="olFolder">An Outlook folder the events of which will be processed by the class.</param>
      <param name="eventClassReleasesComObject">If true, the folder object will be released when the <b>RemoveConnection</b> method of the class is called. Otherwise, the developer is
responsible for releasing the folder object specified in the <i>olFolder</i> parameter.</param>
      <returns>Returns true, if the events are connected successfully. Otherwise, returns false.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemsEvents.ConnectTo(AddinExpress.MSO.ADXOlDefaultFolders,System.Boolean)">
      <summary>Connects to the events of the specified default folder. If the <i>eventClassReleasesComObject</i> parameter is <b>true</b>, the folder object
will be released when the <b>RemoveConnection</b> method of the class is called. Otherwise, the developer is responsible for releasing the folder object.</summary>
      <param name="folderType">A default Outlook folder the events of which will be processed by the class.</param>
      <param name="eventClassReleasesComObject">If true, the folder object will be released when the <b>RemoveConnection</b> method of the class is called. Otherwise, the developer is
responsible for releasing the folder object specified by the <i>folderType</i> parameter.</param>
      <returns>Returns true, if the events are connected successfully. Otherwise, returns false.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemsEvents.ConnectTo(System.Object,System.Boolean,System.Boolean)">
      <summary>Connects to the events of the specified folder. If the <i>eventClassReleasesComObject</i> parameter is <b>true</b>, the folder object will be
released when the <b>RemoveConnection</b> method of the class is called. Otherwise, the developer is responsible for releasing the folder object.</summary>
      <param name="olFolder">An Outlook folder the events of which will be processed by the class.</param>
      <param name="eventClassReleasesComObject">If true, the folder object will be released when the <b>RemoveConnection</b> method of the class is called. Otherwise, the developer is
responsible for releasing the folder object specified in the <i>olFolder</i> parameter.</param>
      <param name="recursive">If true, the class also connects to the events of the Items collections of all sub-folders of the specified folder.</param>
      <returns>Returns true, if the events are connected successfully. Otherwise, returns false.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXOutlookItemsEvents.ConnectTo(AddinExpress.MSO.ADXOlDefaultFolders,System.Boolean,System.Boolean)">
      <summary>Connects to the events of the specified default folder. If the <i>eventClassReleasesComObject</i> parameter is <b>true</b>, the folder object
will be released when the <b>RemoveConnection</b> method of the class is called. Otherwise, the developer is responsible for releasing the folder object.</summary>
      <param name="folderType">A default Outlook folder the events of which will be processed by the class.</param>
      <param name="eventClassReleasesComObject">If true, the folder object will be released when the <b>RemoveConnection</b> method of the class is called. Otherwise, the developer is
responsible for releasing the folder object specified by the <i>folderType</i> parameter.</param>
      <param name="recursive">If true, the class also connects to the events of the Items collections of all sub-folders of the specified folder.</param>
      <returns>Returns true, if the events are connected successfully. Otherwise, returns false.</returns>
    </member>
    <member name="P:AddinExpress.MSO.ADXOutlookItemsEvents.FolderObj">
      <summary>Returns the MAPIFolder object (a COM object) to the events of which the class is connected.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOutlookItemsEvents.IsConnected">
      <summary>Returns a boolean value which specifies whether the class is connected to a folder.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXOutlookItemsEvents.Module">
      <summary>Returns an ADXAddinModule which supplies events for the class.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXPowerPointAppEvents.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXPowerPointAppEvents.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPowerPointAppEvents.AfterNewPresentation">
      <summary>Occurs after a presentation is created.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPowerPointAppEvents.AfterPresentationOpen">
      <summary>Occurs after an existing presentation is opened.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPowerPointAppEvents.ColorSchemeChanged">
      <summary>Occurs after a color scheme is changed.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPowerPointAppEvents.NewPresentation">
      <summary>Occurs after a presentation is created, as it is added to the Presentations collection.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPowerPointAppEvents.PresentationBeforeClose">
      <summary>Not documented.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPowerPointAppEvents.PresentationBeforeSave">
      <summary>Occurs before a presentation is saved.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPowerPointAppEvents.PresentationClose">
      <summary>Occurs immediately before any open presentation closes, as it is removed from the Presentations collection.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPowerPointAppEvents.PresentationCloseFinal">
      <summary>Not documented.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPowerPointAppEvents.PresentationNewSlide">
      <summary>Occurs when a new slide is created in any open presentation, as the slide is added to the Slides collection.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPowerPointAppEvents.PresentationOpen">
      <summary>Occurs after an existing presentation is opened, as it is added to the Presentations collection.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPowerPointAppEvents.PresentationPrint">
      <summary>Occurs before a presentation is printed.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPowerPointAppEvents.PresentationSave">
      <summary>Occurs before any open presentation is saved.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPowerPointAppEvents.PresentationSync">
      <summary>Occurs when the local copy of a presentation that is part of a Document Workspace is synchronized with the copy on the server. Provides important
status information regarding the success or failure of the synchronization of the presentation.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPowerPointAppEvents.ProtectedViewWindowActivate">
      <summary>Not documented.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPowerPointAppEvents.ProtectedViewWindowBeforeClose">
      <summary>Not documented.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPowerPointAppEvents.ProtectedViewWindowBeforeEdit">
      <summary>Not documented.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPowerPointAppEvents.ProtectedViewWindowDeactivate">
      <summary>Not documented.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPowerPointAppEvents.ProtectedViewWindowOpen">
      <summary>Not documented.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPowerPointAppEvents.SlideSelectionChanged">
      <summary>This event occurs at different times depending on the current view.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPowerPointAppEvents.SlideShowBegin">
      <summary>Occurs when you start a slide show. Microsoft PowerPoint creates the slide show window and passes it to this event. If one slide show branches to
another, the SlideShowBegin event does not occur again when the second slide show begins.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPowerPointAppEvents.SlideShowEnd">
      <summary>Occurs after a slide show ends— immediately after the last SlideShowNextSlide event occurs.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPowerPointAppEvents.SlideShowNextBuild">
      <summary>Occurs upon mouse-click or timing animation, but before the animated object becomes visible.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPowerPointAppEvents.SlideShowNextClick">
      <summary>Occurs on the next click on the slide.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPowerPointAppEvents.SlideShowNextSlide">
      <summary>Occurs immediately before the transition to the next slide. For the first slide, occurs immediately after the SlideShowBegin event.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPowerPointAppEvents.SlideShowOnNext">
      <summary>Not documented.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPowerPointAppEvents.SlideShowOnPrevious">
      <summary>Not documented.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPowerPointAppEvents.WindowActivate">
      <summary>Occurs when the application window or any document window is activated.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPowerPointAppEvents.WindowBeforeDoubleClick">
      <summary>Occurs when you double-click the items in the views listed in the following table.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPowerPointAppEvents.WindowBeforeRightClick">
      <summary>Occurs when you right-click a shape, a slide, a notes page, or some text. This event is triggered by the MouseUp event.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPowerPointAppEvents.WindowDeactivate">
      <summary>Occurs when the application window or any document window is deactivated.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPowerPointAppEvents.WindowSelectionChange">
      <summary>Occurs when the selection of text, a shape, or a slide in the active document window changes, whether through the user interface or through code.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXPowerPointPresentationBeforeCloseEventArgs.Cancel">
      <summary>Returns or sets a boolean value indicating whether the event should be canceled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXPowerPointPresentationBeforeCloseEventArgs.Presentation">
      <summary></summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXPowerPointProtectedViewWindowBeforeCloseEventArgs.Cancel">
      <summary>Returns or sets a boolean value indicating whether the event should be canceled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXPowerPointProtectedViewWindowBeforeCloseEventArgs.ProtectedViewCloseReason">
      <summary></summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXPowerPointProtectedViewWindowBeforeCloseEventArgs.ProtectedViewWindow">
      <summary></summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXPowerPointProtectedViewWindowBeforeEditEventArgs.Cancel">
      <summary>Returns or sets a boolean value indicating whether the event should be canceled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXPowerPointProtectedViewWindowBeforeEditEventArgs.ProtectedViewWindow">
      <summary></summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXProjectAppEvents.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXProjectAppEvents.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXProjectAppEvents.ClassName">
      <summary>Returns a value that represents the class identifier of the component.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.AfterCubeBuilt">
      <summary>Introduced in Project 2010. Occurs when the OLAP cube-building process completes.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.ApplicationBeforeClose">
      <summary>Occurs before Project exits.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.ConnectionStatusChanged">
      <summary>Introduced in Project 2010. Occurs when the status of the connection with Microsoft Project Server 2010 changes. Available only in Project
Professional.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.IsFunctionalitySupported">
      <summary>Introduced in Project 2010. Occurs after the LoadWebBrowserControl method is called with the third parameter, FunctionalityName, set.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.JobCompleted">
      <summary>Introduced in Project 2010. Occurs when any queued job originating from Microsoft Project Professional 2010 is completed. Project Professional
only.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.JobStart">
      <summary>Introduced in Project 2010. Occurs before the queue job is put on the server queue. Project Professional only.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.LoadWebPage">
      <summary>Occurs after the LoadWebBrowserControl method is called. The method loads the Web browser control inside Project, and then the event is fired.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.LoadWebPane">
      <summary>Introduced in Project 2010. Occurs when Project loads a Web pane for Task Drivers, Deliverables, or the Project/Resource Import Wizard.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.NewProject">
      <summary>Occurs when a new project is created, including the default project created each time Microsoft Office Project 2003 starts, and is analogous to
the Open event for existing projects. The NewProject event occurs before the new project's Activate event.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.OnUndoOrRedo">
      <summary>Introduced in Project 2010. Occurs when a transaction is undone or redone.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.PaneActivate">
      <summary>Introduced in Project 2010. Occurs when the pane is activated.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.ProjectAfterSave">
      <summary>Occurs after a project has been saved.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.ProjectAssignmentNew">
      <summary>Occurs when a new assignment is created.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.ProjectBeforeAssignmentChange">
      <summary>Occurs before the user changes the value of an assignment field.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.ProjectBeforeAssignmentChange2">
      <summary>Occurs before the user changes the value of an assignment field. Uses the EventInfo object parameter.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.ProjectBeforeAssignmentDelete">
      <summary>Occurs before an assignment is removed or replaced.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.ProjectBeforeAssignmentDelete2">
      <summary>Occurs before an assignment is removed or replaced. Uses the EventInfo object parameter.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.ProjectBeforeAssignmentNew">
      <summary>Occurs before one or more assignments are created.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.ProjectBeforeAssignmentNew2">
      <summary>Occurs before one or more assignments are created. Uses the EventInfo object parameter.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.ProjectBeforeClearBaseline">
      <summary>Occurs before a baseline is cleared. Uses the EventInfo object parameter.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.ProjectBeforeClose">
      <summary>Occurs before a project is closed.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.ProjectBeforeClose2">
      <summary>Occurs before a project is closed. Uses the EventInfo object parameter.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.ProjectBeforePrint">
      <summary>Occurs before a project is printed.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.ProjectBeforePrint2">
      <summary>Occurs before a project is printed. Uses the EventInfo object parameter.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.ProjectBeforePublish">
      <summary>Introduced in Project 2010. Occurs before a Publish operation is placed on the server queue. The ProjectBeforePublish event can be cancelled.
Project Professional only.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.ProjectBeforeResourceChange">
      <summary>Occurs before the user changes the value of a resource field.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.ProjectBeforeResourceChange2">
      <summary>Occurs before the user changes the value of a resource field. Uses the EventInfo object parameter.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.ProjectBeforeResourceDelete">
      <summary>Occurs before a resource is deleted.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.ProjectBeforeResourceDelete2">
      <summary>Occurs before a resource is deleted. Uses the EventInfo object parameter.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.ProjectBeforeResourceNew">
      <summary>Occurs before one or more resources are created.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.ProjectBeforeResourceNew2">
      <summary>Occurs before one or more resources are created. Uses the EventInfo object parameter.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.ProjectBeforeSave">
      <summary>Occurs before a project is saved.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.ProjectBeforeSave2">
      <summary>Occurs before a project is saved. Uses the EventInfo object parameter.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.ProjectBeforeSaveBaseline">
      <summary>Occurs before a baseline is saved. Uses the EventInfo object parameter.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.ProjectBeforeTaskChange">
      <summary>Occurs before the user changes the value of a task field.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.ProjectBeforeTaskChange2">
      <summary>Occurs before the user changes the value of a task field. Uses the EventInfo object parameter.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.ProjectBeforeTaskDelete">
      <summary>Occurs before a task is deleted.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.ProjectBeforeTaskDelete2">
      <summary>Occurs before a task is deleted. Uses the EventInfo object parameter.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.ProjectBeforeTaskNew">
      <summary>Occurs before one or more tasks are created.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.ProjectBeforeTaskNew2">
      <summary>Occurs before one or more tasks are created. Uses the EventInfo object parameter.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.ProjectCalculate">
      <summary>Occurs after a project is calculated.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.ProjectResourceNew">
      <summary>Occurs when a new resource is created.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.ProjectTaskNew">
      <summary>Occurs when a new task is created.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.SaveCompletedToServer">
      <summary>Introduced in Project 2010. Occurs when Microsoft Project Professional 2010 successfully puts the Project Save job in the Project Server Queue.
Project Professional only.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.SaveStartingToServer">
      <summary>Introduced in Project 2010. Occurs when Microsoft Project Professional 2010 starts to save project changes to the Project Server Queue. Project
Professional only.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.SecondaryViewChange">
      <summary>Introduced in Project 2010. Event occurs when a secondary view pane changes within a project window.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.WindowActivate">
      <summary>Occurs when any window within Project is activated. The WindowActivate event does not occur when the application window is activated.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.WindowBeforeViewChange">
      <summary>Occurs when the top pane view is changed within a window in Project.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.WindowDeactivate">
      <summary>Occurs when any window within Project is deactivated. The WindowDeactivate event does not occur when the application window is deactivated.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.WindowGoalAreaChange">
      <summary>Occurs after a user clicks a different goal area in the Project Guide.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.WindowSelectionChange">
      <summary>Occurs when the selection handle is changed within a window in Project.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.WindowSidepaneDisplayChange">
      <summary>Occurs when the user clicks the Show/Hide Project Guide button on the Project Guide toolbar to show or hide the Project Guide.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.WindowSidepaneTaskChange">
      <summary>Occurs when a user selects different items in the Next Steps and Related Activities menu in the Project Guide.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.WindowViewChange">
      <summary>Occurs after the top pane view is changed within a project window. The WindowViewChange event returns a success argument that tells whether the
view change action was successful.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXProjectAppEvents.WorkpaneDisplayChange">
      <summary>Occurs when the Project Guide is hidden or shown.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXProjectBeforeAssignmentChangeEventArgs.Cancel">
      <summary>Returns or sets a boolean value indicating whether the event should be canceled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXProjectBeforeAssignmentChangeEventArgs.Field">
      <summary>Returns the field being changed.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXProjectBeforeAssignmentChangeEventArgs.Item">
      <summary>Returns the Assignment COM object whose field is being changed.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXProjectBeforeAssignmentChangeEventArgs.NewValue">
      <summary>Returns the new value for the field.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXProjectBeforeChangeEventArgs.Cancel">
      <summary>Returns or sets a boolean value indicating whether the event should be canceled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXProjectBeforeChangeEventArgs.Field">
      <summary>Returns the field being changed.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXProjectBeforeChangeEventArgs.Item">
      <summary>Returns the Task or Resource COM object whose field is being changed.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXProjectBeforeChangeEventArgs.NewValue">
      <summary>Returns the new value for the field.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXProjectBeforePublishEventArgs.Cancel">
      <summary>Returns or sets a boolean value indicating whether the event should be canceled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXProjectBeforePublishEventArgs.Project">
      <summary></summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXProjectLoadWebPageEventArgs.TargetPage">
      <summary>Returns the same TargetPage parameter that was used to call the LoadWebBrowserControl method.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXProjectLoadWebPageEventArgs.Window">
      <summary>Returns the window (a COM object) from which the LoadWebBrowserControl method was called.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXProjectLoadWebPaneEventArgs.TargetPage">
      <summary></summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXProjectLoadWebPaneEventArgs.Window">
      <summary></summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXPublisherAppEvents.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXPublisherAppEvents.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXPublisherAppEvents.ClassName">
      <summary>Returns a value that represents the class identifier of the component.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPublisherAppEvents.AfterPrint">
      <summary>This event is fired after all variables and fields are printed. User interface control does not return to the user until the event handler is
executed. The event is called after all the drawing operations are complete (in other words, after the software's job is complete and the printing hardware
takes over).</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPublisherAppEvents.BeforePrint">
      <summary>Occurs before the publication is printed or previewed. This event fires only after the document fully loads and the onload events are returned.
Printing does not occur until the event handler executes.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPublisherAppEvents.DocumentBeforeClose">
      <summary>Occurs immediately before any open document closes.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPublisherAppEvents.DocumentOpen">
      <summary>Occurs when a document is being opened.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPublisherAppEvents.HideCatalogUI">
      <summary>Occurs when the catalog of publication wizards is hidden in the Microsoft Office Publisher user interface.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPublisherAppEvents.MailMergeAfterMerge">
      <summary>Occurs after all records in a mail merge have merged successfully.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPublisherAppEvents.MailMergeAfterRecordMerge">
      <summary>Occurs after each record in the data source successfully merges in a mail merge.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPublisherAppEvents.MailMergeBeforeMerge">
      <summary>Occurs when a merge is executed before any records in a mail merge have merged.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPublisherAppEvents.MailMergeBeforeRecordMerge">
      <summary>Occurs as a merge is executed for the individual records in a merge.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPublisherAppEvents.MailMergeDataSourceLoad">
      <summary>Occurs when the data source is loaded for a mail merge.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPublisherAppEvents.MailMergeDataSourceValidate">
      <summary>Occurs when a user performs address verification by clicking Validate in the Mail Merge Recipients dialog box.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPublisherAppEvents.MailMergeGenerateBarcode">
      <summary>Occurs when Microsoft Office Publisher requires data to generate barcodes in a mail-merge publication, in particular when the mail-merge
recipient list changes.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPublisherAppEvents.MailMergeInsertBarcode">
      <summary>Occurs when the user issues the command to insert postal barcodes into a mail-merge publication, either in the Microsoft Office Publisher user
interface (UI), or programmatically.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPublisherAppEvents.MailMergeRecipientListClose">
      <summary>Fires when the user closes the Mail Merge Recipients dialog box. (From the Mail Merge or E-mail Merge task pane, click Edit Recipient List). Also
fires when the user closes the Catalog Merge Product List dialog box, which opens when the user clicks Edit Product List in the Catalog Merge task pane.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPublisherAppEvents.MailMergeWizardFollowUpCustom">
      <summary>Fires when the string that appears as the fourth item under Prepare to follow-up on this mailing on the third Mail Merge task pane in the
Microsoft Office Publisher user interface is clicked.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPublisherAppEvents.MailMergeWizardSendToCustom">
      <summary>Occurs when the custom button is clicked on step six of the Mail Merge Wizard.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPublisherAppEvents.MailMergeWizardStateChange">
      <summary>Occurs when a user changes from a specified step to a specified step in the Mail Merge Wizard.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPublisherAppEvents.NewDocument">
      <summary>Occurs when a new publication is created.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPublisherAppEvents.Quit">
      <summary>Occurs when the user quits Microsoft Publisher.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPublisherAppEvents.ShowCatalogUI">
      <summary>Fires when the catalog of publication wizards is displayed in the Microsoft Office Publisher user interface.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPublisherAppEvents.WindowActivate">
      <summary>Occurs when the application window is activated.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPublisherAppEvents.WindowDeactivate">
      <summary>Occurs when the application window is deactivated.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXPublisherAppEvents.WindowPageChange">
      <summary>Occurs when switching the view from one page to another page in a publication.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXPublisherBeforeMergeEventArgs.Cancel">
      <summary>Returns or sets a boolean value indicating whether the event should be canceled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXPublisherBeforeMergeEventArgs.Document">
      <summary>Returns the mail merge main document (a COM object).</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXPublisherBeforeMergeEventArgs.EndRecord">
      <summary>Returns the last record in the data source to include in the mail merge.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXPublisherBeforeMergeEventArgs.StartRecord">
      <summary>Returns the first record in the data source to include in the mail merge.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXPublisherGenerateBarcodeEventArgs.BarCode">
      <summary>A string representation of the barcode.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXPublisherGenerateBarcodeEventArgs.Document">
      <summary>The current publication (a COM object).</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRemoteObject.#ctor(AddinExpress.MSO.ADXAddinModule)">
      <summary>This class is obsolete. To access public members of your add-in class, use the Object property of the Office.COMAddin class and late binding. For
instance, OfficeApp.COMAddins.Item("MyAddin.ProgId").Object.MyMethod().</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRemoteObject.CallMethod(System.String,System.Object[])">
      <summary>This class is obsolete. To access public members of your add-in class, use the Object property of the Office.COMAddin class and late binding. For
instance, OfficeApp.COMAddins.Item("MyAddin.ProgId").Object.MyMethod().</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRemoteObject.CallMethod0(System.String)">
      <summary>This class is obsolete. To access public members of your add-in class, use the Object property of the Office.COMAddin class and late binding. For
instance, OfficeApp.COMAddins.Item("MyAddin.ProgId").Object.MyMethod().</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRemoteObject.CallMethod1(System.String,System.Object)">
      <summary>This class is obsolete. To access public members of your add-in class, use the Object property of the Office.COMAddin class and late binding. For
instance, OfficeApp.COMAddins.Item("MyAddin.ProgId").Object.MyMethod().</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRemoteObject.CallMethod2(System.String,System.Object,System.Object)">
      <summary>This class is obsolete. To access public members of your add-in class, use the Object property of the Office.COMAddin class and late binding. For
instance, OfficeApp.COMAddins.Item("MyAddin.ProgId").Object.MyMethod().</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRemoteObject.CallMethod3(System.String,System.Object,System.Object,System.Object)">
      <summary>This class is obsolete. To access public members of your add-in class, use the Object property of the Office.COMAddin class and late binding. For
instance, OfficeApp.COMAddins.Item("MyAddin.ProgId").Object.MyMethod().</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRemoteObject.CallMethod4(System.String,System.Object,System.Object,System.Object,System.Object)">
      <summary>This class is obsolete. To access public members of your add-in class, use the Object property of the Office.COMAddin class and late binding. For
instance, OfficeApp.COMAddins.Item("MyAddin.ProgId").Object.MyMethod().</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRemoteObject.CallMethod5(System.String,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>This class is obsolete. To access public members of your add-in class, use the Object property of the Office.COMAddin class and late binding. For
instance, OfficeApp.COMAddins.Item("MyAddin.ProgId").Object.MyMethod().</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRemoteObject.GetProperty(System.String)">
      <summary>This class is obsolete. To access public members of your add-in class, use the Object property of the Office.COMAddin class and late binding. For
instance, OfficeApp.COMAddins.Item("MyAddin.ProgId").Object.MyMethod().</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRemoteObject.GetProperty(System.String,System.Object[])">
      <summary>This class is obsolete. To access public members of your add-in class, use the Object property of the Office.COMAddin class and late binding. For
instance, OfficeApp.COMAddins.Item("MyAddin.ProgId").Object.MyMethod().</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRemoteObject.SetProperty(System.String,System.Object)">
      <summary>This class is obsolete. To access public members of your add-in class, use the Object property of the Office.COMAddin class and late binding. For
instance, OfficeApp.COMAddins.Item("MyAddin.ProgId").Object.MyMethod().</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRemoteObject.SetProperty(System.String,System.Object,System.Object[])">
      <summary>This class is obsolete. To access public members of your add-in class, use the Object property of the Office.COMAddin class and late binding. For
instance, OfficeApp.COMAddins.Item("MyAddin.ProgId").Object.MyMethod().</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonBeforeLoadEventArgs.RibbonId">
      <summary>Returns the Ribbon Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonBeforeLoadEventArgs.Xml">
      <summary>Returns or sets the Ribbon XML markup.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonBox.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonBox.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonBox.BoxStyle">
      <summary>Returns or sets the Ribbon box style.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonBox.Controls">
      <summary>Controls of the ribbon box.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonBox.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonBox.IdMso">
      <summary>A string value representing the Id of a built-in Ribbon control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonBox.InsertAfterId">
      <summary>The control will be inserted after a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonBox.InsertAfterIdMso">
      <summary>The control will be inserted after a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonBox.InsertBeforeId">
      <summary>The control will be inserted before a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonBox.InsertBeforeIdMso">
      <summary>The control will be inserted before a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonBox.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonBox.Shared">
      <summary>Specifies if the control belongs to the 'shared' namespace.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonBox.Visible">
      <summary>True if the control is visible.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonButton.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonButton.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonButton.Caption">
      <summary>The caption string of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonButton.Description">
      <summary>The description of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonButton.Enabled">
      <summary>True if the control is enabled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonButton.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonButton.IdMso">
      <summary>A string value representing the Id of a built-in Ribbon control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonButton.Image">
      <summary>Specifies the index of an image in an Imagelist that supplies images for the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonButton.ImageList">
      <summary>The ImageList component providing images for the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonButton.ImageMso">
      <summary>The Id of a built-in image.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonButton.ImageTransparentColor">
      <summary>Returns or sets the button image color to be transparent when the bitmap is drawn.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonButton.InsertAfterId">
      <summary>The control will be inserted after a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonButton.InsertAfterIdMso">
      <summary>The control will be inserted after a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonButton.InsertBeforeId">
      <summary>The control will be inserted before a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonButton.InsertBeforeIdMso">
      <summary>The control will be inserted before a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonButton.KeyTip">
      <summary>Returns or sets a string value indicating the key or key combination to be pressed on the keyboard in order to access the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonButton.ParseMsoXmlTypeAs">
      <summary>When adding a built-in control to a custom Ribbon tab, group, etc., it is required to specify the type of the control to be added. In rare cases,
Ribbon XML requires the control type to be specified as "control" rather than any specific type. Use this property to change the type of the Ribbon control to
be added.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonButton.Pressed">
      <summary>True if the control is pressed.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonButton.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonButton.ScreenTip">
      <summary>The text string shown when the user moves the mouse pointer over the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonButton.ShowCaption">
      <summary>True if the caption is visible.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonButton.Size">
      <summary>Returns or sets the size of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonButton.SuperTip">
      <summary>The text string shown when the user moves the mouse pointer over the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonButton.ToggleButton">
      <summary>Specifies if the control is a ToggleButton control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonButton.Visible">
      <summary>True if the control is visible.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXRibbonButton.OnClick">
      <summary>Occurs when the user clicks the button.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonButtonGroup.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonButtonGroup.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonButtonGroup.Controls">
      <summary>Controls of the ribbon button group.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonButtonGroup.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonButtonGroup.IdMso">
      <summary>A string value representing the Id of a built-in Ribbon control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonButtonGroup.InsertAfterId">
      <summary>The control will be inserted after a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonButtonGroup.InsertAfterIdMso">
      <summary>The control will be inserted after a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonButtonGroup.InsertBeforeId">
      <summary>The control will be inserted before a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonButtonGroup.InsertBeforeIdMso">
      <summary>The control will be inserted before a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonButtonGroup.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonButtonGroup.Shared">
      <summary>Specifies if the control belongs to the 'shared' namespace.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonButtonGroup.Visible">
      <summary>True if the control is visible.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonCheckBox.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonCheckBox.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCheckBox.Caption">
      <summary>The caption string of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCheckBox.Description">
      <summary>The description of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCheckBox.Enabled">
      <summary>True if the control is enabled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCheckBox.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCheckBox.IdMso">
      <summary>A string value representing the Id of a built-in Ribbon control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCheckBox.InsertAfterId">
      <summary>The control will be inserted after a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCheckBox.InsertAfterIdMso">
      <summary>The control will be inserted after a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCheckBox.InsertBeforeId">
      <summary>The control will be inserted before a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCheckBox.InsertBeforeIdMso">
      <summary>The control will be inserted before a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCheckBox.KeyTip">
      <summary>Returns or sets a string value indicating the key or key combination to be pressed on the keyboard in order to access the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCheckBox.Pressed">
      <summary>True if the control is pressed.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCheckBox.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCheckBox.ScreenTip">
      <summary>The text string shown when the user moves the mouse pointer over the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCheckBox.SuperTip">
      <summary>The text string shown when the user moves the mouse pointer over the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCheckBox.Visible">
      <summary>True if the control is visible.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXRibbonCheckBox.OnClick">
      <summary>Occurs when the user clicks the control.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonComboBox.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonComboBox.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonComboBox.Items">
      <summary>Controls of the ribbon combo box.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXRibbonComboBox.ItemPropertyChanging">
      <summary>Occurs when the Ribbon requests a property value of an item shown by the coresponding Ribbon control.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonCommand.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonCommand.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCommand.ActionTarget">
      <summary>The type of the Ribbon control that is overridden.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCommand.Enabled">
      <summary>True if the overridden control is enabled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCommand.Id">
      <summary>A string value representing the Id of the overridden control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCommand.IdMso">
      <summary>A string value representing the Id of the overridden built-in Ribbon control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCommand.Ribbons">
      <summary>Ribbon types for which the Ribbon Command works.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXRibbonCommand.OnAction">
      <summary>Occurs when the user clicks on the overridden control or presses the key combination associated with the control.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonContextMenu.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonContextMenu.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonContextMenu.ContextMenuNames">
      <summary>Controls of the Ribbon Office menu.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonContextMenu.Controls">
      <summary>Controls of the Ribbon Office menu.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonContextMenu.Enabled">
      <summary>True if the component is enabled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonContextMenu.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonControlCollection.#ctor(AddinExpress.MSO.ADXRibbonCustomControl,System.Int32,System.String)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="owner">The owner of the collection.</param>
      <param name="restrict">The maximum number of items in the collection.</param>
      <param name="collectionName">The name of the collection</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonControlCollection.BeginUpdate">
      <summary>Maintains performance when items are added to the collection one at a time.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonControlCollection.Clear">
      <summary>Removes all controls from the collection.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonControlCollection.Contains(System.Object)">
      <summary>Indicates whether the specified control exists in the collection.</summary>
      <param name="control">The control to locate in the collection.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonControlCollection.Copy">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonControlCollection.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonControlCollection.EndUpdate">
      <summary>Resumes refreshing the collection after refreshing is suspended by the BeginUpdate method.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonControlCollection.IndexOf(AddinExpress.MSO.ADXRibbonCustomControl)">
      <summary>Returns the index of the specified control in the collection.</summary>
      <param name="control">The control to search for in the collection.</param>
      <returns>Integer.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonControlCollection.Remove(AddinExpress.MSO.ADXRibbonCustomControl)">
      <summary>Removes the specified ADXRibbonCustomControl from the collection.</summary>
      <param name="control">The ADXRibbonCustomControl to remove.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonControlCollection.RemoveAt(System.Int32)">
      <summary>Removes a control at the specified indexed location from the control collection.</summary>
      <param name="index">The index of the control to remove.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonControlCollection.Add(AddinExpress.MSO.ADXRibbonCustomControl,AddinExpress.MSO.ADXRibbons)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="control">...</param>
      <param name="ribbons">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonControlCollection.Add(AddinExpress.MSO.ADXRibbonCustomControl)">
      <summary>Adds the specified ADXRibbonCustomControl to the collection.</summary>
      <param name="control">The ADXRibbonCustomControl to add.</param>
      <returns>The same ADXRibbonCustomControl if it was either previously stored or just added to the collection; otherwise a null reference (Nothing in Visual
Basic).</returns>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonControlCollection.Item(System.Int32)">
      <summary>Returns the ADXRibbonCustomControl at the specified index.</summary>
      <param name="index">The index of the ADXRibbonCustomControl to get.</param>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonControlCollection.Owner">
      <summary>Returns the owner of the collection.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonControlCollection.Restricted">
      <summary>Returns the maximal number of items in the collection.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonCreateMenuEventArgs.AddControl(AddinExpress.MSO.ADXRibbonCustomControl)">
      <summary>Adds the specified ADXRibbonCustomControl to the collection.</summary>
      <param name="control">The ADXRibbonCustomControl to add.</param>
      <returns>The same ADXRibbonCustomControl if it was either previously stored or just added to the collection; otherwise a null reference (Nothing in Visual
Basic).</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonCreateMenuEventArgs.Clear">
      <summary>Removes all controls from the collection.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonCreateMenuEventArgs.IndexOf(AddinExpress.MSO.ADXRibbonCustomControl)">
      <summary>Returns the index of the specified control.</summary>
      <param name="control">The control for which to determine the index.</param>
      <returns></returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonCreateMenuEventArgs.Remove(AddinExpress.MSO.ADXRibbonCustomControl)">
      <summary>Removes the specified ADXRibbonCustomControl from the collection.</summary>
      <param name="control">The ADXRibbonCustomControl to remove.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonCreateMenuEventArgs.RemoveAt(System.Int32)">
      <summary>Removes a control at the specified indexed location from the control collection.</summary>
      <param name="index">The index of the control to remove.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonCreateMenuEventArgs.Contains(System.Object)">
      <summary>Indicates whether the specified control exists in the collection.</summary>
      <param name="control">The control to locate in the collection.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonCreateMenuEventArgs.Contains(System.String)">
      <summary>Indicates whether the control specified by its Id exists in the collection.</summary>
      <param name="id">The Id of the control to locate in the collection.</param>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCreateMenuEventArgs.Item(System.Int32)">
      <summary>Returns a Ribbon control at the specified index location.</summary>
      <param name="index">The index of the control to get.</param>
      <returns>The Ribbon control.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonCustomComboBox.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonCustomComboBox.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomComboBox.Caption">
      <summary>The caption string of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomComboBox.Enabled">
      <summary>True if the control is enabled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomComboBox.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomComboBox.IdMso">
      <summary>A string value representing the Id of a built-in Ribbon control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomComboBox.Image">
      <summary>Specifies the index of an image in an Imagelist that supplies images for the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomComboBox.ImageList">
      <summary>The ImageList component providing images for the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomComboBox.ImageMso">
      <summary>The Id of a built-in image.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomComboBox.ImageTransparentColor">
      <summary>Returns or sets the button image color to be transparent when the bitmap is drawn.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomComboBox.InsertAfterId">
      <summary>The control will be inserted after a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomComboBox.InsertAfterIdMso">
      <summary>The control will be inserted after a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomComboBox.InsertBeforeId">
      <summary>The control will be inserted before a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomComboBox.InsertBeforeIdMso">
      <summary>The control will be inserted before a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomComboBox.KeyTip">
      <summary>Returns or sets a string value indicating the key or key combination to be pressed on the keyboard in order to access the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomComboBox.MaxLength">
      <summary>Returns or sets the maximum size of the string, in characters, that the user may type in an edit box or combo box.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomComboBox.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomComboBox.ScreenTip">
      <summary>The text string shown when the user moves the mouse pointer over the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomComboBox.ShowCaption">
      <summary>True if the caption is visible.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomComboBox.SizeString">
      <summary>A string, such as "wwwwwwwwww", that determines the size of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomComboBox.SuperTip">
      <summary>The text string shown when the user moves the mouse pointer over the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomComboBox.Text">
      <summary>Returns or sets the text displayed in the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomComboBox.Visible">
      <summary>True if the control is visible.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXRibbonCustomComboBox.OnChange">
      <summary>Occurs when the value in the control is changed and committed by the user.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonCustomControl.Invalidate">
      <summary>Invalidates the control</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsBackstageCheckBox">
      <summary>Performs conversion of the control to the ADXBackstageCheckBox class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsBackstageComboBox">
      <summary>Performs conversion of the control to the ADXBackstageComboBox class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsBackstageDropDown">
      <summary>Performs conversion of the control to the ADXBackstageDropDown class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsBackstageEditBox">
      <summary>Performs conversion of the control to the ADXBackstageEditBox class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsBackstageFastCommandButton">
      <summary>Performs conversion of the control to the ADXBackstageFastCommandButton class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsBackstageGroup">
      <summary>Performs conversion of the control to the ADXBackstageTaskFormGroupTask class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsBackstageGroupBox">
      <summary>Performs conversion of the control to the ADXBackstageGroupBox class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsBackstageGroupButton">
      <summary>Performs conversion of the control to the ADXBackstageGroupButton class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsBackstageHyperlink">
      <summary>Performs conversion of the control to the ADXBackstageHyperlink class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsBackstageImageControl">
      <summary>Performs conversion of the control to the ADXBackstageLabelControl class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsBackstageItem">
      <summary>Performs conversion of the control to the ADXBackstageItem class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsBackstageLabelControl">
      <summary>Performs conversion of the control to the ADXBackstageLabelControl class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsBackstageLayoutContainer">
      <summary>Performs conversion of the control to the ADXBackstageLayoutContainer class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsBackstageMenuButton">
      <summary>Performs conversion of the control to the ADXBackstageMenuButton class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsBackstageMenuCheckBox">
      <summary>Performs conversion of the control to the ADXBackstageMenuCheckBox class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsBackstageMenuGroup">
      <summary>Performs conversion of the control to the ADXBackstageMenuGroup class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsBackstageMenuToggleButton">
      <summary>Performs conversion of the control to the ADXBackstageMenuToggleButton class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsBackstagePrimaryMenu">
      <summary>Performs conversion of the control to the ADXBackstagePrimaryMenu class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsBackstageRadioGroup">
      <summary>Performs conversion of the control to the ADXBackstageRadioGroup class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsBackstageRegularButton">
      <summary>Performs conversion of the control to the ADXBackstageRegularButton class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsBackstageSubMenu">
      <summary>Performs conversion of the control to the ADXBackstageSubMenu class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsBackstageTab">
      <summary>Performs conversion of the control to the ADXRibbonTab class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsBackstageTaskFormGroup">
      <summary>Performs conversion of the control to the ADXBackstageTaskFormGroup class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsBackstageTaskFormGroupCategory">
      <summary>Performs conversion of the control to the ADXBackstageTaskFormGroupCategory class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsBackstageTaskFormGroupTask">
      <summary>Performs conversion of the control to the ADXBackstageTaskFormGroupTask class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsBackstageTaskGroup">
      <summary>Performs conversion of the control to the ADXBackstageTaskGroup class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsBackstageTaskGroupCategory">
      <summary>Performs conversion of the control to the ADXBackstageTaskGroupCategory class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsBackstageTaskGroupTask">
      <summary>Performs conversion of the control to the ADXBackstageTaskGroupTask class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsRibbon">
      <summary>Performs conversion to the IADXRibbonComponent class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsRibbonBox">
      <summary>Performs conversion of the control to the ADXRibbonBox class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsRibbonButton">
      <summary>Performs conversion of the control to the ADXRibbonButton class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsRibbonButtonGroup">
      <summary>Performs conversion of the control to the ADXRibbonButtonGroup class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsRibbonCheckBox">
      <summary>Performs conversion of the control to the ADXRibbonCheckBox class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsRibbonComboBox">
      <summary>Performs conversion of the control to the ADXRibbonComboBox class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsRibbonCommand">
      <summary>Performs conversion of the control to the ADXRibbonCommand class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsRibbonDialogBoxLauncher">
      <summary>Performs conversion of the control to the ADXRibbonDialogBoxLauncher class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsRibbonDropDown">
      <summary>Performs conversion of the control to the ADXRibbonDropDown class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsRibbonEditBox">
      <summary>Performs conversion of the control to the ADXRibbonEditBox class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsRibbonGallery">
      <summary>Performs conversion of the control to the ADXRibbonGallery class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsRibbonGroup">
      <summary>Performs conversion of the control to the ADXRibbonGroup class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsRibbonItem">
      <summary>Performs conversion of the control to the ADXRibbonItem class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsRibbonLabel">
      <summary>Performs conversion of the control to the ADXRibbonLabel class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsRibbonMenu">
      <summary>Performs conversion of the control to the ADXRibbonMenu class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsRibbonMenuSeparator">
      <summary>Performs conversion of the control to the ADXRibbonMenuSeparator class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsRibbonSeparator">
      <summary>Performs conversion of the control to the ADXRibbonSeparator class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsRibbonSplitButton">
      <summary>Performs conversion of the control to the ADXRibbonSplitButton class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.AsRibbonTab">
      <summary>Performs conversion of the control to the ADXRibbonTab class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.Collection">
      <summary>The collection the control belongs to.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomControl.Tag">
      <summary>Returns or sets the custom value associated with the Ribbon control.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXRibbonCustomControl.PropertyChanging">
      <summary>Occurs when the Ribbon requests a property value of the Ribbon control.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonCustomDropDown.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonCustomDropDown.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomDropDown.Caption">
      <summary>The caption string of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomDropDown.Enabled">
      <summary>True if the control is enabled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomDropDown.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomDropDown.IdMso">
      <summary>A string value representing the Id of a built-in Ribbon control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomDropDown.Image">
      <summary>Specifies the index of an image in an Imagelist that supplies images for the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomDropDown.ImageList">
      <summary>The ImageList component providing images for the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomDropDown.ImageMso">
      <summary>The Id of a built-in image.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomDropDown.ImageTransparentColor">
      <summary>Returns or sets the button image color to be transparent when the bitmap is drawn.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomDropDown.InsertAfterId">
      <summary>The control will be inserted after a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomDropDown.InsertAfterIdMso">
      <summary>The control will be inserted after a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomDropDown.InsertBeforeId">
      <summary>The control will be inserted before a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomDropDown.InsertBeforeIdMso">
      <summary>The control will be inserted before a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomDropDown.Items">
      <summary>Controls of the ribbon combo box.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomDropDown.KeyTip">
      <summary>Returns or sets a string value indicating the key or key combination to be pressed on the keyboard in order to access the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomDropDown.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomDropDown.ScreenTip">
      <summary>The text string shown when the user moves the mouse pointer over the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomDropDown.SelectedItemId">
      <summary>Returns or sets the ID of the item to be selected.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomDropDown.SelectedItemIndex">
      <summary>Returns or sets the index of the item to be selected.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomDropDown.ShowCaption">
      <summary>True if the caption is visible.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomDropDown.ShowItemCaption">
      <summary>Indicates whether items should display labels.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomDropDown.SuperTip">
      <summary>The text string shown when the user moves the mouse pointer over the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonCustomDropDown.Visible">
      <summary>True if the control is visible.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXRibbonCustomDropDown.OnAction">
      <summary>Occurs when the user selects an item in the control.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonDialogBoxLauncher.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonDialogBoxLauncher.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonDialogBoxLauncher.Enabled">
      <summary>True if the control is enabled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonDialogBoxLauncher.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonDialogBoxLauncher.IdMso">
      <summary>A string value representing the Id of a built-in Ribbon control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonDialogBoxLauncher.KeyTip">
      <summary>Returns or sets a string value indicating the key or key combination to be pressed on the keyboard in order to access the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonDialogBoxLauncher.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonDialogBoxLauncher.ScreenTip">
      <summary>The text string shown when the user moves the mouse pointer over the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonDialogBoxLauncher.SuperTip">
      <summary>The text string shown when the user moves the mouse pointer over the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonDialogBoxLauncher.Visible">
      <summary>True if the control is visible.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXRibbonDialogBoxLauncher.OnAction">
      <summary>Occurs when the user clicks the control.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonDropDown.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonDropDown.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonDropDown.Controls">
      <summary>Controls of the ribbon drop down.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonDropDown.SizeString">
      <summary>A string, such as "wwwwwwwwww", that determines the size of the control.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXRibbonDropDown.ItemPropertyChanging">
      <summary>Occurs when the Ribbon requests a property value of an item shown by the coresponding Ribbon control.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonEditBox.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonEditBox.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonGallery.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonGallery.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonGallery.Columns">
      <summary>The number of columns to display in the gallery.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonGallery.Controls">
      <summary>Controls of the ribbon gallery.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonGallery.Description">
      <summary>The description of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonGallery.ItemHeight">
      <summary>The height of items, in pixels.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonGallery.ItemWidth">
      <summary>The width of items, in pixels.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonGallery.Rows">
      <summary>The number of rows to display in the gallery.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonGallery.Size">
      <summary>Returns or sets the size of the control.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXRibbonGallery.ItemPropertyChanging">
      <summary>Occurs when the Ribbon requests a property value of an item shown by the coresponding Ribbon control.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonGroup.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonGroup.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonGroup.AutoScale">
      <summary>Specifies whether the group should automatically scale its contents.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonGroup.Caption">
      <summary>The caption string of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonGroup.CenterVertically">
      <summary>Specifies whether the group's contents should be vertically centered.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonGroup.Controls">
      <summary>Controls of the ribbon group.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonGroup.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonGroup.IdMso">
      <summary>A string value representing the Id of a built-in Ribbon control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonGroup.Image">
      <summary>Specifies the index of an image in an Imagelist that supplies images for the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonGroup.ImageList">
      <summary>The ImageList component providing images for the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonGroup.ImageMso">
      <summary>The Id of a built-in image.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonGroup.ImageTransparentColor">
      <summary>Returns or sets the button image color to be transparent when the bitmap is drawn.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonGroup.InsertAfterId">
      <summary>The control will be inserted after a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonGroup.InsertAfterIdMso">
      <summary>The control will be inserted after a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonGroup.InsertBeforeId">
      <summary>The control will be inserted before a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonGroup.InsertBeforeIdMso">
      <summary>The control will be inserted before a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonGroup.KeyTip">
      <summary>Returns or sets a string value indicating the key or key combination to be pressed on the keyboard in order to access the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonGroup.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonGroup.ScreenTip">
      <summary>The text string shown when the user moves the mouse pointer over the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonGroup.Shared">
      <summary>Specifies if the control belongs to the 'shared' namespace.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonGroup.SuperTip">
      <summary>The text string shown when the user moves the mouse pointer over the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonGroup.Visible">
      <summary>True if the control is visible.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonItem.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonItem.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonItem.Caption">
      <summary>The caption string of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonItem.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonItem.Image">
      <summary>Specifies the index of an image in an Imagelist that supplies images for the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonItem.ImageList">
      <summary>The ImageList component providing images for the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonItem.ImageTransparentColor">
      <summary>Returns or sets the button image color to be transparent when the bitmap is drawn.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonItem.ScreenTip">
      <summary>The text string shown when the user moves the mouse pointer over the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonItem.SuperTip">
      <summary>The text string shown when the user moves the mouse pointer over the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonItemPropertyChangingEventArgs.Index">
      <summary>Returns the item index.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonLabel.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonLabel.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonLabel.Caption">
      <summary>The caption string of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonLabel.Enabled">
      <summary>True if the control is enabled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonLabel.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonLabel.IdMso">
      <summary>A string value representing the Id of a built-in Ribbon control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonLabel.InsertAfterId">
      <summary>The control will be inserted after a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonLabel.InsertAfterIdMso">
      <summary>The control will be inserted after a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonLabel.InsertBeforeId">
      <summary>The control will be inserted before a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonLabel.InsertBeforeIdMso">
      <summary>The control will be inserted before a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonLabel.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonLabel.ScreenTip">
      <summary>The text string shown when the user moves the mouse pointer over the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonLabel.ShowCaption">
      <summary>True if the caption is visible.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonLabel.SuperTip">
      <summary>The text string shown when the user moves the mouse pointer over the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonLabel.Visible">
      <summary>True if the control is visible.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonMenu.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonMenu.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonMenu.Caption">
      <summary>The caption string of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonMenu.Controls">
      <summary>Controls of the ribbon menu.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonMenu.Description">
      <summary>The description of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonMenu.Dynamic">
      <summary>True if the control is Dynamic Menu.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonMenu.Enabled">
      <summary>True if the control is enabled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonMenu.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonMenu.IdMso">
      <summary>A string value representing the Id of a built-in Ribbon control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonMenu.Image">
      <summary>Specifies the index of an image in an Imagelist that supplies images for the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonMenu.ImageList">
      <summary>The ImageList component providing images for the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonMenu.ImageMso">
      <summary>The Id of a built-in image.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonMenu.ImageTransparentColor">
      <summary>Returns or sets the button image color to be transparent when the bitmap is drawn.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonMenu.InsertAfterId">
      <summary>The control will be inserted after a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonMenu.InsertAfterIdMso">
      <summary>The control will be inserted after a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonMenu.InsertBeforeId">
      <summary>The control will be inserted before a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonMenu.InsertBeforeIdMso">
      <summary>The control will be inserted before a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonMenu.ItemSize">
      <summary>The size of an item of a Ribbon control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonMenu.KeyTip">
      <summary>Returns or sets a string value indicating the key or key combination to be pressed on the keyboard in order to access the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonMenu.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonMenu.ScreenTip">
      <summary>The text string shown when the user moves the mouse pointer over the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonMenu.ShowCaption">
      <summary>True if the caption is visible.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonMenu.Size">
      <summary>Returns or sets the size of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonMenu.SuperTip">
      <summary>The text string shown when the user moves the mouse pointer over the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonMenu.Title">
      <summary>The title of the menu.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonMenu.Visible">
      <summary>True if the control is visible.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXRibbonMenu.OnCreate">
      <summary>If the Dynamic property is False, occurs when the control is created. If the Dynamic property is True, occurs also when the menu is about to drop
down.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonMenuSeparator.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonMenuSeparator.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonMenuSeparator.Caption">
      <summary>The caption string of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonMenuSeparator.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonMenuSeparator.InsertAfterId">
      <summary>The control will be inserted after a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonMenuSeparator.InsertAfterIdMso">
      <summary>The control will be inserted after a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonMenuSeparator.InsertBeforeId">
      <summary>The control will be inserted before a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonMenuSeparator.InsertBeforeIdMso">
      <summary>The control will be inserted before a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonMenuSeparator.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonOfficeMenu.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonOfficeMenu.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonOfficeMenu.Controls">
      <summary>Controls of the Ribbon Office menu.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonOfficeMenu.Enabled">
      <summary>True if the component is enabled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonOfficeMenu.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonOnActionEventArgs.CancelDefault">
      <summary>Returns or sets a boolean value specifying if the default action of the currently repurposed control should be cancelled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonOnActionEventArgs.Control">
      <summary>Returns the control that fired the event.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonOnActionEventArgs.Pressed">
      <summary>Returns True if the control is in the pressed state.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonOnActionEventArgs.SelectedId">
      <summary>Returns the Id of the selected item.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonOnActionEventArgs.SelectedIndex">
      <summary>Returns the index of the selected item.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonOnActionEventArgs.Text">
      <summary>Returns the text changed.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonOnCreateMenuEventArgs.Control">
      <summary>Returns the control that fired the event.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonOnCreateMenuEventArgs.XmlContent">
      <summary>Returns or sets an XML string that contains the contents of this dynamic menu.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonPropertyChangingEventArgs.Context">
      <summary>Returns an object representing the active window containing the Ribbon control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonPropertyChangingEventArgs.PropertyType">
      <summary>Returns an ADXRibbonControlPropertyType specifying the type of the property which is being changed.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonPropertyChangingEventArgs.Value">
      <summary>Returns or sets an Object specifying the value of the property. Initially, contains the default value of the property.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonQuickAccessToolbar.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonQuickAccessToolbar.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonQuickAccessToolbar.Controls">
      <summary>Controls of the Quick Access Toolbar.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonQuickAccessToolbar.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonSeparator.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonSeparator.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonSeparator.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonSeparator.InsertAfterId">
      <summary>The control will be inserted after a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonSeparator.InsertAfterIdMso">
      <summary>The control will be inserted after a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonSeparator.InsertBeforeId">
      <summary>The control will be inserted before a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonSeparator.InsertBeforeIdMso">
      <summary>The control will be inserted before a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonSeparator.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonSplitButton.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonSplitButton.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonSplitButton.Caption">
      <summary>The caption string of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonSplitButton.Controls">
      <summary>Controls of the ribbon split button.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonSplitButton.Description">
      <summary>The description of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonSplitButton.Enabled">
      <summary>True if the control is enabled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonSplitButton.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonSplitButton.IdMso">
      <summary>A string value representing the Id of a built-in Ribbon control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonSplitButton.Image">
      <summary>Specifies the index of an image in an Imagelist that supplies images for the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonSplitButton.ImageList">
      <summary>The ImageList component providing images for the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonSplitButton.ImageMso">
      <summary>The Id of a built-in image.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonSplitButton.ImageTransparentColor">
      <summary>Returns or sets the button image color to be transparent when the bitmap is drawn.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonSplitButton.InsertAfterId">
      <summary>The control will be inserted after a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonSplitButton.InsertAfterIdMso">
      <summary>The control will be inserted after a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonSplitButton.InsertBeforeId">
      <summary>The control will be inserted before a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonSplitButton.InsertBeforeIdMso">
      <summary>The control will be inserted before a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonSplitButton.KeyTip">
      <summary>Returns or sets a string value indicating the key or key combination to be pressed on the keyboard in order to access the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonSplitButton.Pressed">
      <summary>True if the control is pressed.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonSplitButton.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonSplitButton.ScreenTip">
      <summary>The text string shown when the user moves the mouse pointer over the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonSplitButton.ShowCaption">
      <summary>True if the caption is visible.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonSplitButton.Size">
      <summary>Returns or sets the size of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonSplitButton.SuperTip">
      <summary>The text string shown when the user moves the mouse pointer over the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonSplitButton.ToggleButton">
      <summary>Specifies if the control is a ToggleButton control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonSplitButton.Visible">
      <summary>True if the control is visible.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXRibbonSplitButton.OnClick">
      <summary>Occurs when the user clicks the control.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonTab.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonTab.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXRibbonTab.Activate">
      <summary>Activates the tab.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonTab.Caption">
      <summary>The caption string of the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonTab.Context">
      <summary>The contextual tab set the tab will be shown for.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonTab.Controls">
      <summary>Controls of the ribbon tab.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonTab.Id">
      <summary>A string value representing the control's Id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonTab.IdMso">
      <summary>A string value representing the Id of a built-in Ribbon control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonTab.InsertAfterId">
      <summary>The control will be inserted after a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonTab.InsertAfterIdMso">
      <summary>The control will be inserted after a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonTab.InsertBeforeId">
      <summary>The control will be inserted before a custom Ribbon control identified by the Id specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonTab.InsertBeforeIdMso">
      <summary>The control will be inserted before a built-in Ribbon control identified by the IdMso specified in this property.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonTab.KeyTip">
      <summary>Returns or sets a string value indicating the key or key combination to be pressed on the keyboard in order to access the control.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonTab.Ribbons">
      <summary>Ribbon types for which the Ribbon control will be shown.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonTab.Shared">
      <summary>Specifies if the control belongs to the 'shared' namespace.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXRibbonTab.Visible">
      <summary>True if the control is visible.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXSendMessageEventArgs.LParam">
      <summary>Specifies additional message-specific information.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXSendMessageEventArgs.Message">
      <summary>Returns the message id.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXSendMessageEventArgs.WParam">
      <summary>Specifies additional message-specific information.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXStringCollection.#ctor(System.Object)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="owner">The owner of the collection.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXStringCollection.Add(System.String)">
      <summary>Adds the specified string to the collection.</summary>
      <param name="value">The string to add.</param>
      <returns>The zero-based index at which the new string is inserted.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXStringCollection.AddRange(System.String[])">
      <summary>Adds the specified strings to the collection.</summary>
      <param name="value">Strings to add.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXStringCollection.Clear">
      <summary>Removes all strings from the collection.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXStringCollection.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXStringCollection.Insert(System.Int32,System.String)">
      <summary>Inserts a specified string into the collection at the specified index.</summary>
      <param name="index">The zero-based index at which <i>value</i> should be inserted.</param>
      <param name="value">The string to insert.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXStringCollection.RemoveAt(System.Int32)">
      <summary>Removes the string at the specified index from the collection.</summary>
      <param name="index">The index of the string to remove.</param>
    </member>
    <member name="P:AddinExpress.MSO.ADXStringCollection.Owner">
      <summary>Returns the owner of the collection.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXTaskPane.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the ADXTaskPane.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXTaskPane.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXTaskPane.AsCTP">
      <summary>This class supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXTaskPane.Collection">
      <summary>The collection that the current object belongs to.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXTaskPane.ControlProgID">
      <summary>Specifies a UserControl that is shown as a task pane.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXTaskPane.DockPosition">
      <summary>Returns the initial dock position of a custom task pane (as set at design-time) or sets the dock position of all task pane instances at run-time.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXTaskPane.DockPositionRestrict">
      <summary>Returns the initial dock position restriction of a custom task pane (as set at design-time) or sets the dock position restriction of all task
pane instances at run-time.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXTaskPane.Height">
      <summary>Returns the initial height of a custom task pane (as set at design-time) or sets the height of all task pane instances at run-time.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXTaskPane.IsConnected">
      <summary>True if the task pane is connected.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXTaskPane.Item(System.Object)">
      <summary>Returns the ADXCustomTaskPaneInstance associated with the specified window.</summary>
      <param name="window">The window for which to return the associated ADXCustomTaskPaneInstance.</param>
    </member>
    <member name="P:AddinExpress.MSO.ADXTaskPane.OutlookWindows">
      <summary>Returns or sets the Outlook window types supported by the task pane.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXTaskPane.SupportedApps">
      <summary>Returns or sets host applications supported by the task pane.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXTaskPane.Title">
      <summary>Returns or sets the title of the task pane.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXTaskPane.Visible">
      <summary>Returns or sets a boolean value specifying if the task pane is visible.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXTaskPane.Width">
      <summary>Returns the initial width of a custom task pane (as set at design-time) or sets the width of all task pane instances at run-time.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXTaskPane.DockPositionStateChange">
      <summary>Occurs when docking position of the task pane is changed.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXTaskPane.VisibleStateChange">
      <summary>Occurs when the task pane visible state is changed.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXTaskPane.ADXCustomTaskPaneInstance.Control">
      <summary>Returns the Microsoft ActiveX control instance (a COM object) displayed in the custom task pane frame.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXTaskPane.ADXCustomTaskPaneInstance.DockPosition">
      <summary>Returns or sets the dock position of the current task pane instance.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXTaskPane.ADXCustomTaskPaneInstance.DockPositionRestrict">
      <summary>Returns or sets the dock position restriction of the current task pane instance.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXTaskPane.ADXCustomTaskPaneInstance.Height">
      <summary>Returns or sets the height of the current task pane instance.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXTaskPane.ADXCustomTaskPaneInstance.Parent">
      <summary>Returns the ADXTaskPanes collection's item which is the parent for the current task pane instance.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXTaskPane.ADXCustomTaskPaneInstance.Title">
      <summary>Returns or sets the title of the current task pane instance.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXTaskPane.ADXCustomTaskPaneInstance.Visible">
      <summary>Returns or sets the visible state of the current task pane instance.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXTaskPane.ADXCustomTaskPaneInstance.Width">
      <summary>Returns or sets the width of the current task pane instance.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXTaskPane.ADXCustomTaskPaneInstance.Window">
      <summary>Returns the parent window object (a COM object) of the ADXCustomTaskPaneInstance object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXTaskPaneCreateEventArgs.Cancel">
      <summary>Returns or sets a boolean value indicating whether the event should be canceled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXTaskPaneCreateEventArgs.Window">
      <summary>Returns the host application's window (a COM object) the task pane is shown in.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXTaskPaneShowEventArgs.Cancel">
      <summary>Returns or sets a boolean value indicating whether the event should be canceled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXTaskPaneShowEventArgs.Instance">
      <summary>Returns the currently active ADXTaskPane.ADXCustomTaskPaneInstance custom task pane instance.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXVisioAppEvents.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXVisioAppEvents.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXVisioAppEvents.ClassName">
      <summary>Returns a string value that represents the class identifier of the component.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.AfterModal">
      <summary>Occurs after the Microsoft Office Visio instance leaves a modal state.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.AfterRemoveHiddenInformation">
      <summary>Occurs when hidden information is removed from the document. Added in Visio 2007.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.AfterResume">
      <summary>Occurs when the operating system resumes normal operation after having been suspended.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.AfterResumeEvents">
      <summary>Occurs after firing of events is resumed. Added in Visio 2007.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.AppActivated">
      <summary>Occurs after a Microsoft Office Visio instance becomes active.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.AppDeactivated">
      <summary>Occurs after a Microsoft Office Visio instance becomes inactive.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.AppObjActivated">
      <summary>Occurs after a Microsoft Office Visio instance becomes active.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.AppObjDeactivated">
      <summary>Occurs after a Microsoft Office Visio instance becomes inactive.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.BeforeDataRecordsetDelete">
      <summary>Occurs before a DataRecordset object is deleted from the DataRecordsets collection. Added in Visio 2007.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.BeforeDocumentClose">
      <summary>Occurs before a document is closed.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.BeforeDocumentSave">
      <summary>Occurs before a document is saved.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.BeforeDocumentSaveAs">
      <summary>Occurs just before a document is saved using the Save As command.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.BeforeMasterDelete">
      <summary>Occurs before a master is deleted from a document.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.BeforeModal">
      <summary>Occurs before a Microsoft Office Visio instance enters a modal state.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.BeforePageDelete">
      <summary>Occurs before a page is deleted.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.BeforeQuit">
      <summary>Occurs before a Microsoft Office Visio instance terminates.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.BeforeSelectionDelete">
      <summary>Occurs before selected objects are deleted.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.BeforeShapeDelete">
      <summary>Occurs before a shape is deleted.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.BeforeShapeTextEdit">
      <summary>Occurs before a shape is opened for text editing in the user interface.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.BeforeStyleDelete">
      <summary>Occurs before a style is deleted.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.BeforeSuspend">
      <summary>Occurs before the operating system enters a suspended state.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.BeforeSuspendEvents">
      <summary>Occurs before firing of events is suspended. Added in Visio 2007.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.BeforeWindowClosed">
      <summary>Occurs before a window is closed.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.BeforeWindowPageTurn">
      <summary>Occurs before a window is about to show a different page.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.BeforeWindowSelDelete">
      <summary>Occurs before the shapes in the selection of a window are deleted.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.CalloutRelationshipAdded">
      <summary>Occurs when a new callout relationship is added to the application. Added in Visio 2010.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.CalloutRelationshipDeleted">
      <summary>Occurs when a callout relationship is deleted from the application. Added in Visio 2010.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.CellChanged">
      <summary>Occurs after the value changes in a cell in a document.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.ConnectionsAdded">
      <summary>Occurs after connections have been established between shapes.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.ConnectionsDeleted">
      <summary>Occurs after connections between shapes have been removed.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.ContainerRelationshipAdded">
      <summary>Occurs when a new container relationship is added to the document. Added in Visio 2010.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.ContainerRelationshipDeleted">
      <summary>Occurs when a container relationship is deleted from the document. Added in Visio 2010.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.ConvertToGroupCanceled">
      <summary>Occurs after an event handler has returned True (cancel) to a QueryCancelConvertToGroup event.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.DataRecordsetAdded">
      <summary>Occurs when a DataRecordset object is added to a DataRecordsets collection. Added in Visio 2010.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.DataRecordsetChanged">
      <summary>Occurs when a data recordset changes as a result of being refreshed. Added in Visio 2010.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.DesignModeEntered">
      <summary>Occurs before a document enters design mode.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.DocumentChanged">
      <summary>Occurs after certain properties of a document are changed.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.DocumentCloseCanceled">
      <summary>Occurs after an event handler has returned True (cancel) to a QueryCancelDocumentClose event.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.DocumentCreated">
      <summary>Occurs after a document is created.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.DocumentOpened">
      <summary>Occurs after a document is opened.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.DocumentSaved">
      <summary>Occurs after a document is saved.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.DocumentSavedAs">
      <summary>Occurs after a document is saved by using the Save As command.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.EnterScope">
      <summary>Queued when an internal command begins, or when an Automation client opens a scope by using the BeginUndoScope method.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.ExitScope">
      <summary>Queued when an internal command ends, or when an Automation client exits a scope using the EndUndoScope method.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.FormulaChanged">
      <summary>Occurs after a formula changes in a cell in the object that receives the event.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.GroupCanceled">
      <summary>Occurs after an event handler has returned True (cancel) to a QueryCancelGroup event. Added in Visio 2010.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.KeyDown">
      <summary>Occurs when a keyboard key is pressed. Added in Visio 2003.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.KeyPress">
      <summary>Occurs when a keyboard key is pressed. Added in Visio 2003.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.KeyUp">
      <summary>Occurs when a keyboard key is released. Added in Visio 2003.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.MarkerEvent">
      <summary>Caused by calling the QueueMarkerEvent method.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.MasterAdded">
      <summary>Occurs after a new master is added to a document.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.MasterChanged">
      <summary>Occurs after properties of a master are changed and propagated to its instances.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.MasterDeleteCanceled">
      <summary>Occurs after an event handler has returned True (cancel) to a QueryCancelMasterDelete event.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.MouseDown">
      <summary>Occurs when a mouse button is clicked. Added in Visio 2003.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.MouseMove">
      <summary>Occurs when the mouse is moved. Added in Visio 2003.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.MouseUp">
      <summary>Occurs when a mouse button is released. Added in Visio 2003.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.MustFlushScopeBeginning">
      <summary>Occurs before the Microsoft Office Visio instance is forced to flush its event queue.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.MustFlushScopeEnded">
      <summary>Occurs after the Microsoft Office Visio instance forces a flush of its event queue.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.NoEventsPending">
      <summary>Occurs after the Microsoft Office Visio instance flushes its event queue.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.OnKeystrokeMessageForAddon">
      <summary>Occurs when Microsoft Office Visio receives a keystroke message from Microsoft Windows that is targeted at an add-on window or child of an add-on
window.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.PageAdded">
      <summary>Occurs after a new page is added to a document.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.PageChanged">
      <summary>Occurs after the name of a page, the background page associated with a page, or the page type (foreground or background) changes.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.PageDeleteCanceled">
      <summary>Occurs after an event handler has returned True (cancel) to a QueryCancelPageDelete event.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.QueryCancelConvertToGroup">
      <summary>Occurs before the application converts a selection of shapes to a group in response to a user action in the interface. If any event handler
returns True, the operation is canceled.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.QueryCancelDocumentClose">
      <summary>Occurs before the application closes a document in response to a user action in the interface. If any event handler returns True, the operation
is canceled.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.QueryCancelGroup">
      <summary>Occurs before the application groups a selection of shapes in response to a user action in the interface. If any event handler returns True, the
operation is canceled. Added in Visio 2007.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.QueryCancelMasterDelete">
      <summary>Occurs before the application deletes a master in response to a user action in the interface. If any event handler returns True, the operation is
canceled.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.QueryCancelPageDelete">
      <summary>Occurs before the application deletes a page in response to a user action in the interface. If any event handler returns True, the operation is
canceled.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.QueryCancelQuit">
      <summary>Occurs before the application terminates in response to a user action in the interface. If any event handler returns True, the operation is
canceled.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.QueryCancelSelectionDelete">
      <summary>Occurs before the application deletes a selection of shapes in response to a user action in the interface. If any event handler returns True, the
operation is canceled.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.QueryCancelStyleDelete">
      <summary>Occurs before the application deletes a style in response to a user action in the interface. If any event handler returns True, the operation is
canceled.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.QueryCancelSuspend">
      <summary>Occurs before the operating system enters a suspended state. If any event handler returns True, the Microsoft Office Visio instance will deny the
operating system's request.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.QueryCancelSuspendEvents">
      <summary>Occurs before the application suspends events in response to client code. If any event handler returns True, the operation is canceled. Added in
Visio 2007.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.QueryCancelUngroup">
      <summary>Occurs before the application ungroups a selection of shapes in response to a user action in the interface. If any event handler returns True,
the operation is canceled.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.QueryCancelWindowClose">
      <summary>Occurs before the application closes a window in response to a user action in the interface. If any event handler returns True, the operation is
canceled.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.QuitCanceled">
      <summary>Occurs after an event handler has returned True (cancel) to a QueryCancelQuit event.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.RuleSetValidated">
      <summary>Occurs when a rule set is validated. Added in Visio 2010.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.RunModeEntered">
      <summary>Occurs after a document enters run mode.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.SelectionAdded">
      <summary>Occurs after one or more shapes are added to a document.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.SelectionChanged">
      <summary>Occurs after a set of shapes selected in a window changes.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.SelectionDeleteCanceled">
      <summary>Occurs before the application deletes a selection of shapes in response to a user action in the interface. If any event handler returns True, the
operation is canceled.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.ShapeAdded">
      <summary>Occurs after one or more shapes are added to a document.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.ShapeChanged">
      <summary>Occurs after a property of a shape that is not stored in a cell is changed in a document.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.ShapeDataGraphicChanged">
      <summary>Occurs after a data graphic is applied to or deleted from a shape. Added in Visio 2010.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.ShapeExitedTextEdit">
      <summary>Occurs after a shape is no longer open for interactive text editing.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.ShapeLinkAdded">
      <summary>Occurs after a shape is linked to a data row. Added in Visio 2010. This Visio object or member is available only to licensed users of Microsoft
Visio Professional 2010 or Visio Premium 2010.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.ShapeLinkDeleted">
      <summary>Occurs after the link between a shape and a data row is deleted. Added in Visio 2010.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.ShapeParentChanged">
      <summary>Occurs after shapes are grouped or a group is ungrouped.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.StyleAdded">
      <summary>Occurs after a new style is added to a document.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.StyleChanged">
      <summary>Occurs after the name of a style is changed or a change to the style propagates to objects to which the style is applied.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.StyleDeleteCanceled">
      <summary>Occurs after an event handler has returned True (cancel) to a QueryCancelStyleDelete event.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.SuspendCanceled">
      <summary>Occurs after an event handler has returned True (cancel) to a QueryCancelSuspend event.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.SuspendEventsCanceled">
      <summary>Occurs after an event handler has returned True (cancel) to a QueryCancelSuspendEvents event. Added in Visio 2007.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.TextChanged">
      <summary>Occurs after the text of a shape is changed in a document.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.UngroupCanceled">
      <summary>Occurs after an event handler has returned True (cancel) to a QueryCancelUngroup event.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.ViewChanged">
      <summary>Occurs when the zoom level or scroll position of a drawing window changes.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.VisioIsIdle">
      <summary>Occurs after the application empties its message queue.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.WindowActivated">
      <summary>Occurs after the active window changes in a Microsoft Office Visio instance.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.WindowChanged">
      <summary>Occurs when the size or position of a window changes.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.WindowCloseCanceled">
      <summary>Occurs after an event handler has returned True (cancel) to a QueryCancelWindowClose event.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.WindowOpened">
      <summary>Occurs after a window is opened.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXVisioAppEvents.WindowTurnedToPage">
      <summary>Occurs after a window shows a different page.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXVisioKeyPressEventArgs.CancelDefault">
      <summary>False if Microsoft Visio should process the message it receives from this event; otherwise, True.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXVisioKeyPressEventArgs.KeyAscii">
      <summary>The ASCII value of the key that was pressed.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXVisioKeyUpDownEventArgs.CancelDefault">
      <summary>False if Microsoft Visio should process the message it receives from this event; otherwise, True.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXVisioKeyUpDownEventArgs.KeyButtonState">
      <summary>The state of the SHIFT and CTRL keys for the event</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXVisioKeyUpDownEventArgs.KeyCode">
      <summary>The key that was pressed or released.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXVisioMouseEventArgs.Button">
      <summary>The mouse button that was pressed, clicked or released.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXVisioMouseEventArgs.CancelDefault">
      <summary>False if Microsoft Visio should process the message it receives from this event; otherwise, True.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXVisioMouseEventArgs.KeyButtonState">
      <summary>The state of the mouse buttons and the SHIFT and CTRL keys for the event.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXVisioMouseEventArgs.X">
      <summary>The x-coordinate of the mouse pointer.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXVisioMouseEventArgs.Y">
      <summary>The y-coordinate of the mouse pointer.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXVisioQueryCancelGroupEventArgs.Cancel">
      <summary>Returns or sets a boolean value indicating whether the event should be canceled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXVisioQueryCancelGroupEventArgs.Selection">
      <summary>The selection of shapes that is going to be grouped.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXVisioQueryCancelSuspendEventsEventArgs.Application">
      <summary>The instance of Microsoft Visio in which firing of events is going to be suspended.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXVisioQueryCancelSuspendEventsEventArgs.Cancel">
      <summary>Returns or sets a boolean value indicating whether the event should be canceled.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordAppEvents.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordAppEvents.#ctor">
      <summary>Initializes a new instance of the class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordAppEvents.ClassName">
      <summary>Returns a string value that represents the class identifier of the component.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordAppEvents.DocumentBeforeClose">
      <summary>Occurs immediately before any open document closes.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordAppEvents.DocumentBeforePrint">
      <summary>Occurs before any open document is printed.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordAppEvents.DocumentBeforeSave">
      <summary>Occurs before any open document is saved.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordAppEvents.DocumentChange">
      <summary>Occurs when a new document is created, when an existing document is opened, or when another document is made the active document.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordAppEvents.DocumentOpen">
      <summary>Occurs when a document is opened.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordAppEvents.DocumentSync">
      <summary>Occurs when the local copy of a document that is part of a Document Workspace is synchronized with the copy on the server.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordAppEvents.EPostageInsert">
      <summary>Occurs when a user inserts electronic postage into a document.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordAppEvents.EPostageInsertEx">
      <summary>Occurs when a user inserts electronic postage into a document.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordAppEvents.EPostagePropertyDialog">
      <summary>Occurs when a user clicks the E-postage Properties (Labels and Envelopes dialog box) button or Print Electronic Postage toolbar button.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordAppEvents.MailMergeAfterMerge">
      <summary>Occurs after all records in a mail merge have merged successfully.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordAppEvents.MailMergeAfterRecordMerge">
      <summary>Occurs after each record in the data source successfully merges in a mail merge.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordAppEvents.MailMergeBeforeMerge">
      <summary>Occurs when a merge is executed before any records merge.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordAppEvents.MailMergeBeforeRecordMerge">
      <summary>Occurs as a merge is executed for the individual records in a merge.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordAppEvents.MailMergeDataSourceLoad">
      <summary>Occurs when the data source is loaded for a mail merge.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordAppEvents.MailMergeDataSourceValidate">
      <summary>Occurs when a user performs address verification by clicking Validate in the Mail Merge Recipients dialog box.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordAppEvents.MailMergeDataSourceValidate2">
      <summary>Occurs when a user performs address verification by clicking Validate in the Mail Merge Recipients dialog box.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordAppEvents.MailMergeWizardSendToCustom">
      <summary>Occurs when the custom button is clicked on step six of the Mail Merge Wizard.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordAppEvents.MailMergeWizardStateChange">
      <summary>Occurs when a user changes from a specified step to a specified step in the Mail Merge Wizard.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordAppEvents.NewDocument">
      <summary>Occurs when a new document is created.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordAppEvents.ProtectedViewWindowActivate">
      <summary>Occurs when any protected view window is activated. Added in Word 2010.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordAppEvents.ProtectedViewWindowBeforeClose">
      <summary>Occurs immediately before a protected view window or a document in a protected view window closes. Added in Word 2010.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordAppEvents.ProtectedViewWindowBeforeEdit">
      <summary>Occurs immediately before editing is enabled on the document in the specified protected view window. Added in Word 2010.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordAppEvents.ProtectedViewWindowDeactivate">
      <summary>Occurs when a protected view window is deactivated. Added in Word 2010.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordAppEvents.ProtectedViewWindowOpen">
      <summary>Occurs when a protected view window is opened. Added in Word 2010.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordAppEvents.ProtectedViewWindowSize">
      <summary>Occurs when a protected view window is is resized or moved. Added in Word 2010.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordAppEvents.Quit">
      <summary>Occurs when the user quits Word.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordAppEvents.Startup">
      <summary>Occurs when Word starts.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordAppEvents.WindowActivate">
      <summary>Occurs when any document window is activated.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordAppEvents.WindowBeforeDoubleClick">
      <summary>Occurs when the editing area of a document window is double-clicked, before the default double-click action.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordAppEvents.WindowBeforeRightClick">
      <summary>Occurs when the editing area of a document window is right-clicked, before the default right-click action.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordAppEvents.WindowDeactivate">
      <summary>Occurs when any document window is deactivated.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordAppEvents.WindowSelectionChange">
      <summary>Occurs when the selection changes in the active document window.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordAppEvents.WindowSize">
      <summary>Occurs when the application window is resized or moved.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordAppEvents.XMLSelectionChange">
      <summary>Occurs when the parent XML node of the current selection changes.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordAppEvents.XMLValidationError">
      <summary>Occurs when there is a validation error in the document.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the ADXWordDocumentModule class.</summary>
      <param name="container">An object implementing System.ComponentModel.IContainer to associate with this instance of ADXDocumentModule.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.#ctor">
      <summary>Initializes a new instance of the ADXWordDocumentModule class.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.AcceptAllRevisions">
      <summary>Accepts all tracked changes in the document.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.Activate">
      <summary>Activates the document so that it becomes the active document.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.AddToFavorites">
      <summary>Creates a shortcut to the document or hyperlink and adds it to the Favorites folder.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.ApplyTheme(System.String)">
      <summary>Applies a theme to the document.</summary>
      <param name="name">The name of the theme plus any theme formatting options you want to apply.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.AutoFormat">
      <summary>Automatically formats the document.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.AutoSummarize(System.Object,System.Object,System.Object)">
      <summary>Creates an automatic summary of the document, and returns a Word.Range object.</summary>
      <param name="length">The length of the summary as a percentage of the total document length (the larger the number, the more detail that's included in the summary).</param>
      <param name="mode">Specifies the way the summary is displayed.</param>
      <param name="updateProperties">True to update the Keyword and Comments boxes in the Properties dialog box to reflect the content of the summary for the document.</param>
      <returns>Word.Range object.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.CheckConsistency">
      <summary>Searches all text in a Japanese language document and displays instances where character usage is inconsistent for the same words.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.CheckGrammar">
      <summary>Begins a spelling and grammar check for the document.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.CheckSpelling(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Begins a spelling check for the document.</summary>
      <param name="customDictionary">Either an expression that returns a Word.Dictionary or the file name of the custom dictionary.</param>
      <param name="ignoreUppercase">True if capitalization is ignored.</param>
      <param name="alwaysSuggest">True for Microsoft Word to always suggest alternative spellings.</param>
      <param name="customDictionary2">Either an expression that returns a Word.Dictionary or the file name of an additional custom dictionary. You can specify as many as nine
additional dictionaries.</param>
      <param name="customDictionary3">Either an expression that returns a Word.Dictionary or the file name of an additional custom dictionary. You can specify as many as nine
additional dictionaries.</param>
      <param name="customDictionary4">Either an expression that returns a Word.Dictionary or the file name of an additional custom dictionary. You can specify as many as nine
additional dictionaries.</param>
      <param name="customDictionary5">Either an expression that returns a Word.Dictionary or the file name of an additional custom dictionary. You can specify as many as nine
additional dictionaries.</param>
      <param name="customDictionary6">Either an expression that returns a Word.Dictionary or the file name of an additional custom dictionary. You can specify as many as nine
additional dictionaries.</param>
      <param name="customDictionary7">Either an expression that returns a Word.Dictionary or the file name of an additional custom dictionary. You can specify as many as nine
additional dictionaries.</param>
      <param name="customDictionary8">Either an expression that returns a Word.Dictionary or the file name of an additional custom dictionary. You can specify as many as nine
additional dictionaries.</param>
      <param name="customDictionary9">Either an expression that returns a Word.Dictionary or the file name of an additional custom dictionary. You can specify as many as nine
additional dictionaries.</param>
      <param name="customDictionary10">Either an expression that returns a Word.Dictionary or the file name of an additional custom dictionary. You can specify as many as nine
additional dictionaries.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.CloseDocument(System.Object,System.Object,System.Object)">
      <summary>Closes the document.</summary>
      <param name="saveChanges">Specifies the save action for the document.</param>
      <param name="originalFormat">Specifies the save format for the document.</param>
      <param name="routeDocument">True to route the document to the next recipient. If the document does not have a routing slip attached, this argument is ignored.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.ClosePrintPreview">
      <summary>Switches the document from print preview to the previous view.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.Compare(System.String)">
      <summary>Displays revision marks that indicate where the document differs from another document.</summary>
      <param name="name">The name of the document with which the specified document is compared.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.ComputeStatistics(AddinExpress.MSO.ADXStatistic,System.Object)">
      <summary>Returns a statistic based on the contents of the document.</summary>
      <param name="statistic">The statistic to compute.</param>
      <param name="includeFootnotesAndEndnotes">True to include footnotes and endnotes when computing statistics.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.ConvertNumbersToText(System.Object)">
      <summary>Changes the list numbers and LISTNUM fields in the document to text.</summary>
      <param name="numberType">The type of number to be converted.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.CopyStylesFromTemplate(System.String)">
      <summary>Copies styles from the specified template to the document.</summary>
      <param name="template">The template file name.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.CountNumberedItems(System.Object,System.Object)">
      <summary>Returns the number of bulleted or numbered items and LISTNUM fields in the document.</summary>
      <param name="numberType">The type of numbers to be counted.</param>
      <param name="level">A number that corresponds to the numbering level you want to count.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.CreateLetterContent(System.String,System.Boolean,System.String,AddinExpress.MSO.ADXLetterStyle,System.Boolean,AddinExpress.MSO.ADXLetterheadLocation,System.Single,System.String,System.String,System.String,AddinExpress.MSO.ADXSalutationType,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Creates and returns a Word.LetterContent object based on the specified letter elements.</summary>
      <param name="dateFormat">The date for the letter.</param>
      <param name="includeHeaderFooter">True to include the header and footer from the page design template.</param>
      <param name="pageDesign">The name of the template attached to the document.</param>
      <param name="letterStyle">The document layout.</param>
      <param name="letterhead">True to reserve space for a preprinted letterhead.</param>
      <param name="letterheadLocation">The location of the preprinted letterhead.</param>
      <param name="letterheadSize">The amount of space (in points) to be reserved for a preprinted letterhead.</param>
      <param name="recipientName">The name of the person who will be receiving the letter.</param>
      <param name="recipientAddress">The mailing address of the person who'll be receiving the letter.</param>
      <param name="salutation">The salutation text for the letter.</param>
      <param name="salutationType">The salutation type for the letter.</param>
      <param name="recipientReference">The reference line text for the letter.</param>
      <param name="mailingInstructions">The mailing instruction text for the letter.</param>
      <param name="attentionLine">The attention line text for the letter.</param>
      <param name="subject">The subject text for the letter.</param>
      <param name="ccList">The names of the carbon copy (CC) recipients for the letter.</param>
      <param name="returnAddress">The text of the return mailing address for the letter.</param>
      <param name="senderName">The name of the person sending the letter.</param>
      <param name="closing">The closing text for the letter.</param>
      <param name="senderCompany">The company name of the person creating the letter.</param>
      <param name="senderJobTitle">The job title of the person creating the letter.</param>
      <param name="senderInitials">The initials of the person creating the letter.</param>
      <param name="enclosureNumber">The number of enclosures for the letter.</param>
      <param name="infoBlock">The parameter is not used.</param>
      <param name="recipientCode">The parameter is not used.</param>
      <param name="recipientGender">The parameter is not used.</param>
      <param name="returnAddressShortForm">The parameter is not used.</param>
      <param name="senderCity">The parameter is not used.</param>
      <param name="senderCode">The parameter is not used.</param>
      <param name="senderGender">The parameter is not used.</param>
      <param name="senderReference">The parameter is not used.</param>
      <returns>Word.LetterContent object.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.DataForm">
      <summary>Displays the Data Form dialog box, in which you can add, delete, or modify records.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.DetectLanguage">
      <summary>Analyzes the specified text to determine the language that it is written in.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.EditionOptions(AddinExpress.MSO.ADXEditionType,AddinExpress.MSO.ADXEditionOption,System.String,System.Object)">
      <summary>The method is used in Microsoft Office Macintosh Edition only.</summary>
      <param name="type">This argument is available only in Microsoft Office Macintosh Edition.</param>
      <param name="option">This argument is available only in Microsoft Office Macintosh Edition.</param>
      <param name="name">This argument is available only in Microsoft Office Macintosh Edition.</param>
      <param name="format">This argument is available only in Microsoft Office Macintosh Edition.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.FitToPages">
      <summary>Decreases the font size of text just enough so that the document will fit on one fewer pages.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.FollowHyperlink(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Displays a cached document, if it has already been downloaded. Otherwise, this method resolves the hyperlink, downloads the target document, and
displays the document in the appropriate application.</summary>
      <param name="address">The address of the target document.</param>
      <param name="subAddress">The location within the target document. The default value is an empty string.</param>
      <param name="newWindow">True to display the target location in a new window.</param>
      <param name="addHistory">True to add the link to the current day's history folder.</param>
      <param name="extraInfo">string or a byte array that specifies additional information for HTTP to use to resolve the hyperlink.</param>
      <param name="method">Specifies the way additional information for HTTP is handled.</param>
      <param name="headerInfo">A string that specifies header information for the HTTP request.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.ForwardMailer">
      <summary>The method is used in Microsoft Office Macintosh Edition only.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.GetCrossReferenceItems(System.Object)">
      <summary>Returns an array of items that can be cross-referenced based on the specified cross-reference type.</summary>
      <param name="referenceType">The type of item you want to insert a cross-reference to.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.GetDocumentName">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.GetLetterContent">
      <summary>Retrieves letter elements from the document and returns a Word.LetterContent object.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.GoTo(System.Object,System.Object,System.Object,System.Object)">
      <summary>Returns a Word.Range object that represents the start position of the specified item, such as a page, bookmark, or field.</summary>
      <param name="what">The kind of item to which the range or selection is moved.</param>
      <param name="which">The item to which the range or selection is moved.</param>
      <param name="count">The number of the item in the document.</param>
      <param name="name">If the What parameter is wdGoToBookmark, wdGoToComment, wdGoToField, or wdGoToObject, this argument specifies a name. Only positive values are
valid. To specify an item that precedes the range or selection, use wdGoToPrevious as the Which argument and specify a value for the Count parameter.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.MakeCompatibilityDefault">
      <summary>Sets the compatibility options.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.ManualHyphenation">
      <summary>Initiates manual hyphenation of the document, one line at a time.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.Merge(System.String)">
      <summary>Merges the changes marked with revision marks from one document to another.</summary>
      <param name="fileName">The path and file name of the document with which to merge.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.Post">
      <summary>Posts the document to a public folder in Microsoft Exchange.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.PresentIt">
      <summary>Opens PowerPoint with the specified Word document loaded.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Prints all or part of the document.</summary>
      <param name="background">Set to True to have the macro continue while Microsoft Word prints the document.</param>
      <param name="append">Set to True to append the specified document to the file name specified by the OutputFileName argument.</param>
      <param name="range">The page range.</param>
      <param name="outputFileName">If PrintToFile is True, this argument specifies the path and file name of the output file.</param>
      <param name="from">The starting page number when Range is set to wdPrintFromTo.</param>
      <param name="to">The ending page number when Range is set to wdPrintFromTo.</param>
      <param name="item">The item to be printed.</param>
      <param name="copies">The number of copies to be printed.</param>
      <param name="pages">The page numbers and page ranges to be printed, separated by commas.</param>
      <param name="pageType">The type of pages to be printed.</param>
      <param name="printToFile">True to send printer instructions to a file. Make sure to specify a file name with OutputFileName.</param>
      <param name="collate">When printing multiple copies of a document, True to print all pages of the document before printing the next copy.</param>
      <param name="activePrinterMacGX">This argument is available only in Microsoft Office Macintosh Edition.</param>
      <param name="manualDuplexPrint">True to print a two-sided document on a printer without a duplex printing kit.</param>
      <param name="printZoomColumn">The number of pages you want Word to fit horizontally on one page.</param>
      <param name="printZoomRow">The number of pages you want Word to fit vertically on one page.</param>
      <param name="printZoomPaperWidth">The width to which you want Word to scale printed pages, in twips (20 twips = 1 point; 72 points = 1 inch).</param>
      <param name="printZoomPaperHeight">The height to which you want Word to scale printed pages, in twips (20 twips = 1 point; 72 points = 1 inch).</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.PrintOutOld(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Prints all or part of the document.</summary>
      <param name="background">Set to True to have the macro continue while Microsoft Word prints the document.</param>
      <param name="append">Set to True to append the specified document to the file name specified by the OutputFileName argument.</param>
      <param name="range">The page range.</param>
      <param name="outputFileName">If PrintToFile is True, this argument specifies the path and file name of the output file.</param>
      <param name="from">The starting page number when Range is set to wdPrintFromTo.</param>
      <param name="to">The ending page number when Range is set to wdPrintFromTo.</param>
      <param name="item">The item to be printed.</param>
      <param name="copies">The number of copies to be printed.</param>
      <param name="pages">The page numbers and page ranges to be printed, separated by commas.</param>
      <param name="pageType">The type of pages to be printed.</param>
      <param name="printToFile">True to send printer instructions to a file. Make sure to specify a file name with OutputFileName.</param>
      <param name="collate">When printing multiple copies of a document, True to print all pages of the document before printing the next copy.</param>
      <param name="activePrinterMacGX">This argument is available only in Microsoft Office Macintosh Edition.</param>
      <param name="manualDuplexPrint">True to print a two-sided document on a printer without a duplex printing kit.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.PrintPreview">
      <summary>Switches the view to print preview.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.Protect(AddinExpress.MSO.ADXProtectionType,System.Object,System.Object)">
      <summary>Applies one of several types of protection to the document.</summary>
      <param name="type">The protection type for the specified document.</param>
      <param name="noReset">False to reset form fields to their default values. True to retain the current form field values if the document is protected.</param>
      <param name="password">The password required to remove protection from the document.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.Range(System.Object,System.Object)">
      <summary>Returns a Word.Range object by using the specified starting and ending character positions.</summary>
      <param name="start">The starting character position.</param>
      <param name="end">The ending character position.</param>
      <returns>Word.Range object.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.Redo(System.Object)">
      <summary>Redoes the last action that was undone (reverses the Undo method). Returns True if the actions were redone successfully.</summary>
      <param name="times">The number of actions to be redone.</param>
      <returns>True if the actions were redone successfully.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.RejectAllRevisions">
      <summary>Rejects all tracked changes in the document.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.Reload">
      <summary>Reloads a cached document by resolving the hyperlink to the document and downloading it.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.ReloadAs(AddinExpress.MSO.ADXEncoding)">
      <summary>Reloads a document based on an HTML document, using the specified document encoding.</summary>
      <param name="encoding">Specifies the encoding to use when reloading the document.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.RemoveNumbers(System.Object)">
      <summary>Removes numbers or bullets from the document.</summary>
      <param name="numberType">The type of number to be removed.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.RemoveTheme">
      <summary>Removes the active theme from the document.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.Repaginate">
      <summary>Repaginates the entire document.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.Reply">
      <summary>Opens a new e-mail message - with the sender's address on the To line - for replying to the active message</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.ReplyAll">
      <summary>Opens a new e-mail message - with the sender’s and all other recipients' addresses on the To and Cc lines, as appropriate - for replying to the
active message</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.Route">
      <summary>Routes the document, using the document's current routing slip.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.RunAutoMacro(AddinExpress.MSO.ADXAutoMacros)">
      <summary>Runs an auto macro that's stored in the document. If the specified auto macro doesn't exist, nothing happens.</summary>
      <param name="which">The auto macro to run.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.RunLetterWizard(System.Object,System.Object)">
      <summary>Runs the Letter Wizard on the document.</summary>
      <param name="letterContent">A Word.LetterContent object. Any filled properties in the Word.LetterContent object show up as prefilled elements in the Letter Wizard dialog
boxes.</param>
      <param name="wizardMode">True to display the Letter Wizard dialog box as a series of steps with a Next, Back, and Finish button.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.Save">
      <summary>Saves the document.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>Saves the document with a new name or format. Some of the arguments for this method correspond to the options in the Save As dialog box.</summary>
      <param name="fileName">The name for the document. The default is the current folder and file name. If the document has never been saved, the default name is used (for
example, Doc1.doc). If a document with the specified file name already exists, the document is overwritten without the user being prompted first.</param>
      <param name="fileFormat">The format in which the document is saved.</param>
      <param name="lockComments">True to lock the document for comments.</param>
      <param name="password">A password string for opening the document.</param>
      <param name="addToRecentFiles">True to add the document to the list of recently used files on the File menu.</param>
      <param name="writePassword">A password string for saving changes to the document.</param>
      <param name="readOnlyRecommended">True to have Microsoft Office Word suggest read-only status whenever the document is opened.</param>
      <param name="embedTrueTypeFonts">True to save TrueType fonts with the document.</param>
      <param name="saveNativePictureFormat">If graphics were imported from another platform (for example, Macintosh), True to save only the Windows version of the imported graphics.</param>
      <param name="saveFormsData">True to save the data entered by a user in a form as a data record.</param>
      <param name="saveAsAOCELetter">If the document has an attached mailer, True to save the document as an AOCE letter (the mailer is saved).</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.Sblt(System.String)">
      <summary>The method is obsolete.</summary>
      <param name="s">The method is obsolete.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.Select">
      <summary>Selects the contents of the document.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.SendFax(System.String,System.Object)">
      <summary>Sends the specified document as a fax, without any user interaction.</summary>
      <param name="address">The recipient's fax number.</param>
      <param name="subject">The text for the subject line. The character limit is 255</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.SendMail">
      <summary>Opens a message window for sending the specified document through Microsoft Exchange.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.SendMailer(System.Object,System.Object)">
      <summary>The method is used in Microsoft Office Macintosh Edition only.</summary>
      <param name="fileFormat">This argument is available only in Microsoft Office Macintosh Edition.</param>
      <param name="priority">This argument is available only in Microsoft Office Macintosh Edition.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.SetLetterContent(System.Object)">
      <summary>Inserts the contents of the specified Word.LetterContent object into a document.</summary>
      <param name="letterContent">The that includes the various elements of the letter.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.ToggleFormsDesign">
      <summary>Switches form design mode on or off.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.Undo(System.Object)">
      <summary>Undoes the last action or a sequence of actions, which are displayed in the Undo list. Returns True if the actions were successfully undone.</summary>
      <param name="times">The number of actions to be undone.</param>
      <returns>True if the actions were successfully undone.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.UndoClear">
      <summary>Clears the list of actions that can be undone for the specified document.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.Unprotect(System.Object)">
      <summary>Removes protection from the document.</summary>
      <param name="password">The password string used to protect the document. Passwords are case-sensitive.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.UpdateStyles">
      <summary>Copies all styles from the attached template into the document, overwriting any existing styles in the document that have the same name.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.UpdateSummaryProperties">
      <summary>Updates the keyword and comment text in the Properties dialog box (File menu) to reflect the AutoSummary content for the document.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.ViewCode">
      <summary>Displays the code window for the selected Microsoft ActiveX control in the document.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.ViewPropertyBrowser">
      <summary>Displays the property window for the selected Microsoft ActiveX control in the document.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXWordDocumentModule.WebPagePreview">
      <summary>Displays a preview of the document as it would look if saved as a Web page.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.ActiveTheme">
      <summary>Returns the name of the active theme for the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.ActiveThemeDisplayName">
      <summary>Returns the display name of the active theme for the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.ActiveWindow">
      <summary>Returns a Word.Window object that represents the active window (the window with the focus).</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.AttachedTemplate">
      <summary>Returns or sets a Word.Template object that represents the template attached to the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.AutoHyphenation">
      <summary>True if automatic hyphenation is turned on for the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Background">
      <summary>Returns a Word.Shape object that represents the background image for the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Bookmarks">
      <summary>Returns a Word.Bookmarks collection that represents all the bookmarks in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.BuiltInDocumentProperties">
      <summary>Returns a DocumentProperties collection that represents all the built-in document properties for the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Characters">
      <summary>Returns a Word.Characters collection that represents the characters in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.ClickAndTypeParagraphStyle">
      <summary>Returns or sets the default paragraph style applied to text by the Click and Type feature in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.CodeName">
      <summary>Returns the code name for the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.CodeName2">
      <summary>Returns the code name for the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.CommandBarsObj">
      <summary>Returns a CommandBars collection that represents the menu bar and all the toolbars in the Word document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Comments">
      <summary>Returns a Word.Comments collection that represents all the comments in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.ConsecutiveHyphensLimit">
      <summary>Returns or sets the maximum number of consecutive lines that can end with hyphens.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.ContainerObj">
      <summary>Returns the object that represents the container application for the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Content">
      <summary>Returns a Word.Range object that represents the main document story.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Creator">
      <summary>Returns a 32-bit integer that indicates the application in which this object was created.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.CustomDocumentProperties">
      <summary>Returns a DocumentProperties collection that represents all the custom document properties for the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.DefaultTabStop">
      <summary>Returns or sets the interval (in points) between the default tab stops in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Document">
      <summary>Returns or sets the Word document name.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.DocumentObj">
      <summary>If the module is connected to a Word document object, returns a reference to the Word.Document object (a COM object). Otherwise, returns null
(Nothing).</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Email">
      <summary>Returns an Email object that contains all the e-mail–related properties of the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.EmbedTrueTypeFonts">
      <summary>True if Microsoft Word embeds TrueType fonts in the document when it is saved.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Endnotes">
      <summary>Returns a Word.Endnotes collection that represents all the endnotes in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Envelope">
      <summary>Returns a Word.Envelope object that represents an envelope and envelope features in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.FarEastLineBreakLanguage">
      <summary>Returns or sets an ADXFarEastLineBreakLanguageID that represents the East Asian language to use when breaking lines of text in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.FarEastLineBreakLevel">
      <summary>Returns or sets an ADXFarEastLineBreakLevel that represents the line break control level for the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Fields">
      <summary>Returns a Word.Fields collection that represents all the fields in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Footnotes">
      <summary>Returns a Word.Footnotes collection that represents all the footnotes in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.FormFields">
      <summary>Returns a Word.FormFields collection that represents all the form fields in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.FormsDesign">
      <summary>True if the document is in form design mode.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Frames">
      <summary>Returns a Word.Frames collection that represents all the frames in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Frameset">
      <summary>Returns a Word.Frameset object that represents an entire frames page or a single frame on a frames page.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.FullName">
      <summary>Returns a string that represents the name of a document, including the path.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.GrammarChecked">
      <summary>True if a grammar check has been run on the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.GrammaticalErrors">
      <summary>Returns a Word.ProofreadingErrors collection that represents the sentences that failed the grammar check in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.GridDistanceHorizontal">
      <summary>Returns or sets a double that represents the amount of horizontal space between the invisible gridlines that Microsoft Word uses when you draw,
move, and resize AutoShapes or East Asian characters in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.GridDistanceVertical">
      <summary>Returns or sets a double that represents the amount of vertical space between the invisible gridlines that Microsoft Word uses when you draw,
move, and resize AutoShapes or East Asian characters in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.GridOriginFromMargin">
      <summary>True if Word starts the character grid from the upper-left corner of the page.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.GridOriginHorizontal">
      <summary>Returns or sets a double that represents the point, relative to the left edge of the page, where you want the invisible grid for drawing, moving,
and resizing AutoShapes or East Asian characters to begin in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.GridOriginVertical">
      <summary>Returns or sets a double that represents the point, relative to the top of the page, where you want the invisible grid for drawing, moving, and
resizing AutoShapes or East Asian characters to begin in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.GridSpaceBetweenHorizontalLines">
      <summary>Returns or sets the interval at which Word displays horizontal character gridlines in print layout view.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.GridSpaceBetweenVerticalLines">
      <summary>Returns or sets the interval at which Word displays vertical character gridlines in print layout view.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.HasMailer">
      <summary>The property is used in Microsoft Office Macintosh Edition only.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.HasPassword">
      <summary>True if a password is required to open the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.HasRoutingSlip">
      <summary>True if the document has a routing slip attached to it.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.HTMLProject">
      <summary>The property is obsolete.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Hyperlinks">
      <summary>Returns a Word.Hyperlinks collection that represents all the hyperlinks in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.HyphenateCaps">
      <summary>True if words in all capital letters can be hyphenated.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.HyphenationZone">
      <summary>Returns or sets the width of the hyphenation zone, in points.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Indexes">
      <summary>Returns a Word.Indexes collection that represents all the indexes in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.InlineShapes">
      <summary>Returns a Word.InlineShapes collection that represents all the InlineShape objects in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.IsConnected">
      <summary>True if the current class instance is connected to the corresponding Word document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.IsMasterDocument">
      <summary>True if the document is a master document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.IsSubdocument">
      <summary>True if the document is a subdocument of a master document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.JustificationMode">
      <summary>Returns or sets the character spacing adjustment for the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.KerningByAlgorithm">
      <summary>True if Word kerns half-width Latin characters and punctuation marks in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Kind">
      <summary>Returns or sets the format type that Word uses when automatically formatting the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.LanguageDetected">
      <summary>Returns or sets a value that specifies whether Word has detected the language of the specified text.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.ListParagraphs">
      <summary>Returns a Word.ListParagraphs object that represents all the numbered paragraphs in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Lists">
      <summary>Returns a Word.Lists collection that contains all the formatted lists in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.ListTemplates">
      <summary>Returns a Word.ListTemplates collection that represents all the list formats for the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Mailer">
      <summary>The property is used in Microsoft Office Macintosh Edition only.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.MailMerge">
      <summary>Returns a Word.MailMerge object that represents the mail merge functionality for the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Name">
      <summary>Returns the name of the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.NoLineBreakAfter">
      <summary>Returns or sets the kinsoku characters after which Word will not break a line.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.NoLineBreakBefore">
      <summary>Returns or sets the kinsoku characters before which Word will not break a line.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.OpenEncoding">
      <summary>Returns the encoding used to open the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.OptimizeForWord97">
      <summary>True if Word optimizes the document for viewing in Microsoft Word 97 by disabling any incompatible formatting.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.PageSetup">
      <summary>Returns a Word.PageSetup object that is associated with the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Paragraphs">
      <summary>Returns a Word.Paragraphs collection that represents all the paragraphs in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Parent">
      <summary>Returns an Object that represents the parent object of the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Password">
      <summary>Sets a password that must be supplied to open the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Path">
      <summary>Returns the disk or Web path to the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.PrintFormsData">
      <summary>True if Word prints onto a preprinted form only the data entered in the corresponding online form.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.PrintFractionalWidths">
      <summary>True if the document is formatted to use fractional point spacing to display and print characters.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.PrintPostScriptOverText">
      <summary>True if PRINT field instructions (such as PostScript commands) in the document are to be printed on top of text and graphics when a PostScript
printer is used.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.PrintRevisions">
      <summary>True if revision marks are printed with the document. False if revision marks aren't printed (that is, tracked changes are printed as if they'd
been accepted).</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.ProtectionType">
      <summary>Returns the protection type for the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.ReadabilityStatistics">
      <summary>Returns a Word.ReadabilityStatistics collection that represents the readability statistics for the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.ReadOnly">
      <summary>True if changes to the document cannot be saved to the original document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.ReadOnlyRecommended">
      <summary>True if Word displays a message box whenever a user opens the document, suggesting that it be opened as read-only.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Revisions">
      <summary>Returns a Word.Revisions collection that represents the tracked changes in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Routed">
      <summary>True if the document has been routed to the next recipient.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.RoutingSlip">
      <summary>Returns a Word.RoutingSlip object that represents the routing slip information for the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Saved">
      <summary>True if the document or template has not changed since it was last saved. False if Word displays a prompt to save changes when the document is
closed.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.SaveEncoding">
      <summary>Returns or sets the encoding to use when saving the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.SaveFormat">
      <summary>Returns the file format of the document or file converter.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.SaveFormsData">
      <summary>True if Word saves the data entered in a form as a tab-delimited record for use in a database.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.SaveSubsetFonts">
      <summary>True if Word saves a subset of the embedded TrueType fonts with the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Scripts">
      <summary>Returns an Office.Scripts collection that represents the collection of HTML scripts in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Sections">
      <summary>Returns a Word.Section collection that represents the sections in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Sentences">
      <summary>Returns a Word.Sentences collection that represents all the sentences in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Shapes">
      <summary>Returns a Word.Shapes collection that represents all the Shape objects in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.ShowGrammaticalErrors">
      <summary>True if grammatical errors are marked by a wavy green line in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.ShowRevisions">
      <summary>True if tracked changes in the document are shown on the screen.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.ShowSpellingErrors">
      <summary>True if Word underlines spelling errors in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.ShowSummary">
      <summary>True if an automatic summary is displayed for the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.SnapToGrid">
      <summary>True if AutoShapes or East Asian characters are automatically aligned with an invisible grid when they are drawn, moved, or resized in the
document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.SnapToShapes">
      <summary>True if Word automatically aligns AutoShapes or East Asian characters with invisible gridlines that go through the vertical and horizontal edges
of other AutoShapes or East Asian characters in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.SpellingChecked">
      <summary>True if spelling has been checked throughout the document. False if all or some of the range or document has not been checked for spelling.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.SpellingErrors">
      <summary>Returns a Word.ProofreadingErrors collection that represents the words identified as spelling errors in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.StoryRanges">
      <summary>Returns a Word.StoryRanges collection that represents all the stories in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Styles">
      <summary>Returns a Word.Styles collection for the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Subdocuments">
      <summary>Returns a Word.Subdocuments collection that represents all the subdocuments in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.SummaryLength">
      <summary>Returns or sets the length of the summary as a percentage of the document length.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.SummaryViewMode">
      <summary>Returns or sets the way a summary is displayed.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Tables">
      <summary>Returns a Word.Tables collection that represents all the tables in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.TablesOfAuthorities">
      <summary>Returns a Word.TableOfAuthorities collection that represents the tables of authorities in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.TablesOfAuthoritiesCategories">
      <summary>Returns a Word.TablesOfAuthoritiesCategories collection that represents the available table of authorities categories for the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.TablesOfContents">
      <summary>Returns a Word.TablesOfContents collection that represents the tables of contents in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.TablesOfFigures">
      <summary>Returns a Word.TablesOfFigures collection that represents the tables of figures in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.TrackRevisions">
      <summary>True if changes are tracked in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Type">
      <summary>Returns the document type (template or document).</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.UpdateStylesOnOpen">
      <summary>True if the styles in the document are updated to match the styles in the attached template each time the document is opened.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.UserControl">
      <summary>True if the document was created or opened by the user.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Variables">
      <summary>Returns a Word.Variables collection that represents the variables stored in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.VBASigned">
      <summary>True if the Microsoft Visual Basic for Applications (VBA) project for the document has been digitally signed.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.VBProject">
      <summary>Returns the Office.VBProject object for the template or document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Versions">
      <summary>Returns a Word.Versions collection that represents all the versions of the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.WebOptions">
      <summary>Returns a Word.WebOptions object, which contains document-level attributes used by Microsoft Word when you save a document as a Web page or open
a Web page.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Windows">
      <summary>Returns a Word.Windows collection that represents all windows for the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.Words">
      <summary>Returns a Word.Words collection that represents all the words in the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.WritePassword">
      <summary>Sets a password for saving changes to the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordDocumentModule.WriteReserved">
      <summary>True if the document is protected with a write password.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordDocumentModule.Close">
      <summary>Occurs when a document is closed.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordDocumentModule.Connect">
      <summary>Occurs when the module is connected to a specified Word document.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordDocumentModule.New">
      <summary>Occurs when a new document is created.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordDocumentModule.Open">
      <summary>Occurs when a document is opened.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXWordDocumentModule.Sync">
      <summary>Occurs when the local copy of a document that is part of a Document Workspace is synchronized with the copy on the server.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordEPostageInsertExEventArgs.Cancel">
      <summary>Returns or sets a boolean value indicating whether the event should be canceled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordEPostageInsertExEventArgs.DeliveryAddrEnd">
      <summary>Returns the ending position in the document for the delivery address. Positioning corresponds to the value of the End property for a Range
object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordEPostageInsertExEventArgs.DeliveryAddrStart">
      <summary>Returns the starting position in the document for the delivery address. Positioning corresponds to the value of the Start property for a Range
object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordEPostageInsertExEventArgs.Document">
      <summary>Returns the document (a COM object) to which electronic postage is being added.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordEPostageInsertExEventArgs.Height">
      <summary>Returns the height of the envelope in 1/1440-inch units.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordEPostageInsertExEventArgs.PaperFeed">
      <summary>Returns the feed method as specified on the Printing Options tab of the Envelope Options dialog box.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordEPostageInsertExEventArgs.Print">
      <summary>True if the user has specified to print the envelope. False if the user has specified to insert the envelope into the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordEPostageInsertExEventArgs.PrinterName">
      <summary>Returns the name of the printer as specified on the Printing Options tab of the Envelope Options dialog box.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordEPostageInsertExEventArgs.ReturnAddrEnd">
      <summary>Returns the ending position in the document for the return address. Positioning corresponds to the value of the End property for a Range object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordEPostageInsertExEventArgs.ReturnAddrStart">
      <summary>Returns the starting position in the document for the return address. Positioning corresponds to the value of the Start property for a Range
object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordEPostageInsertExEventArgs.Width">
      <summary>Returns the width of the envelope in 1/1440-inch units.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordMailBeforeMergeEventArgs.Cancel">
      <summary>Returns or sets a boolean value indicating whether the event should be canceled.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordMailBeforeMergeEventArgs.Document">
      <summary>Returns the mail merge main document (a COM object).</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordMailBeforeMergeEventArgs.EndRecord">
      <summary>Returns the last record in the data source to include in the mail merge.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordMailBeforeMergeEventArgs.StartRecord">
      <summary>Returns the first record in the data source to include in the mail merge.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordMailMergeStateChangeEventArgs.Document">
      <summary>Returns the mail merge main document (a COM object).</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordMailMergeStateChangeEventArgs.FromState">
      <summary>Returns or sets the Mail Merge Wizard step from which the user is moving.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordMailMergeStateChangeEventArgs.Handled">
      <summary>True moves the user to the next step. False for the user to remain at the current step.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordMailMergeStateChangeEventArgs.ToState">
      <summary>Returns or sets the Mail Merge Wizard step to which a user is moving.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordProtectedViewWindowBeforeCloseEventArgs.Cancel">
      <summary>False when the event occurs. If the event procedure sets this argument to True, the window does not close when the procedure is finished.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordProtectedViewWindowBeforeCloseEventArgs.CloseReason">
      <summary>An integer representing a constant from the WdProtectedViewCloseReason enumeration in the Word object model.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordProtectedViewWindowBeforeCloseEventArgs.ProtectedViewWindow">
      <summary>The protected view window (a COM object) that is closed.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordProtectedViewWindowBeforeEditEventArgs.Cancel">
      <summary>False when the event occurs. If the event procedure sets this argument to True, editing is not enabled on the document.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordProtectedViewWindowBeforeEditEventArgs.ProtectedViewWindow">
      <summary>The protected view window (a COM object) that contains the document that is enabled for editing.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordXMLSelectionChangeEventArgs.NewXMLNode">
      <summary>Returns the XML node (a COM object) to which the insertion point is moving.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordXMLSelectionChangeEventArgs.OldXMLNode">
      <summary>Returns the XML node (a COM object) from which the insertion point is moving.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordXMLSelectionChangeEventArgs.Reason">
      <summary>Returns or sets the reason why the selection has changed. Can be any of the following constants:

<list type="bullet"><item>0 - Insertion point has been moved.</item><item>1 - Text has been inserted into the selection.</item><item>2 - Selection has been deleted.</item></list></summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXWordXMLSelectionChangeEventArgs.Selection">
      <summary>Returns the text selected, including XML elements (a COM object). If no text is selected, returns either nothing or the first character to the
right of the insertion point.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLAdditionalModule.#ctor">
      <summary>Initializes a new instance of the ADXAddinAdditionalModule class.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLAdditionalModule.GetContainer">
      <summary>Returns the add-in module container.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLAdditionalModule.RegisterModuleInternal(System.Type)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="key"></param>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLAdditionalModule.UnregisterModuleInternal(System.Type)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="key"></param>
    </member>
    <member name="P:AddinExpress.MSO.ADXXLLAdditionalModule.Description">
      <summary>Returns the additional module description.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXXLLAdditionalModule.MainModule">
      <summary>Returns the add-in module instance.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXXLLAdditionalModule.ModuleName">
      <summary>Returns the additional module name.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXXLLAdditionalModule.OnAdd">
      <summary>Occurs when the add-in is loaded via the Add-in Manager dialog.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXXLLAdditionalModule.OnBeforeFunctionAdd">
      <summary>Occurs before a function is registered. Allows you to decide if you need to register the function.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXXLLAdditionalModule.OnClose">
      <summary>Occurs whenever Excel closes down or the add-in is unloaded via the Add-in Manager dialog.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXXLLAdditionalModule.OnFree">
      <summary>Occurs whenever Excel closes down or the add-in is unloaded via the Add-ins dialog.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXXLLAdditionalModule.OnInitialize">
      <summary>Occurs once during a session, when Excel checks the add-in's interface for the first time.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXXLLAdditionalModule.OnOpen">
      <summary>Occurs when the add-in is loaded either on Excel startup or via the Add-in Manager dialog.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXXLLAdditionalModule.OnRemove">
      <summary>Occurs when the add-in is unloaded via the Add-in Manager dialog.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXXLLAdditionalModule.OnShowAddinManager">
      <summary>Occurs when the Add-ins dialog is opened in Excel.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLAdditionalModuleCollection.#ctor(AddinExpress.MSO.ADXXLLModule)">
      <summary>Initializes a new instance of the class.</summary>
      <param name="owner">The XLLModule which is the owner of the collection.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLAdditionalModuleCollection.Add(AddinExpress.MSO.ADXXLLAdditionalModuleItem)">
      <summary>Adds the specified ADXXLLAdditionalModuleItem to the collection.</summary>
      <param name="module">The ADXXLLAdditionalModuleItem to add.</param>
      <returns>The same ADXXLLAdditionalModuleItem if it was either previously stored or just added to the collection; otherwise a null reference (Nothing in
Visual Basic).</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLAdditionalModuleCollection.Clear">
      <summary>Removes all modules from the collection.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLAdditionalModuleCollection.Contains(System.Object)">
      <summary>Indicates whether a specified module exists in the collection.</summary>
      <param name="module">The module to locate in the collection.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLAdditionalModuleCollection.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLAdditionalModuleCollection.IndexOf(AddinExpress.MSO.ADXXLLAdditionalModuleItem)">
      <summary>Returns the index of the specified module in the collection.</summary>
      <param name="module">The module to search for in the collection.</param>
      <returns>Integer.</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLAdditionalModuleCollection.Remove(AddinExpress.MSO.ADXXLLAdditionalModuleItem)">
      <summary>Removes the specified module from the module collection.</summary>
      <param name="module">The module to remove.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLAdditionalModuleCollection.RemoveAt(System.Int32)">
      <summary>Removes the module from the module collection at the specified indexed location.</summary>
      <param name="index">The index of the module to remove.</param>
    </member>
    <member name="P:AddinExpress.MSO.ADXXLLAdditionalModuleCollection.Item(System.Int32)">
      <summary>Returns the ADXXLLAdditionalModuleItem at the specified index.</summary>
      <param name="index">The index of the ADXXLLAdditionalModuleItem to get.</param>
    </member>
    <member name="P:AddinExpress.MSO.ADXXLLAdditionalModuleCollection.Owner">
      <summary>Returns the owner of the collection.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXXLLAdditionalModuleCollection.Item(System.Int32)">
      <summary>Returns the ADXXLLAdditionalModuleItem at the specified index.</summary>
      <param name="index">The index of the ADXXLLAdditionalModuleItem to get.</param>
    </member>
    <member name="P:AddinExpress.MSO.ADXXLLAdditionalModuleCollection.Item(System.String)">
      <summary>Returns the ADXXLLAdditionalModuleItem with the specified name.</summary>
      <param name="moduleName">The name of the ADXXLLAdditionalModuleItem additional module to get.</param>
      <returns>The ADXXLLAdditionalModuleItem or a null reference (Nothing in Visual Basic).</returns>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLAdditionalModuleItem.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the ADXXLLAdditionalModuleItem class.</summary>
      <param name="container">An IContainer that represents the container for the component.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLAdditionalModuleItem.#ctor">
      <summary>Initializes a new instance of the ADXXLLAdditionalModuleItem class.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXXLLAdditionalModuleItem.AssemblyPath">
      <summary>Returns the path of the additional assembly.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXXLLAdditionalModuleItem.Collection">
      <summary>Returns a collection that contains the item.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXXLLAdditionalModuleItem.Enabled">
      <summary>Returns or sets whether the module is used.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXXLLAdditionalModuleItem.Module">
      <summary>Returns an instance of the additional module.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXXLLAdditionalModuleItem.ModuleProgID">
      <summary>Returns the ProgID of the additional module.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLModule.#ctor">
      <summary>Initializes an instance of the class.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLModule.addInManagerInfo(System.Int64)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="xlOper">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLModule.addInManagerInfo12(System.Int64)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="xlOper12">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLModule.autoAdd">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLModule.autoClose">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLModule.autoFree(System.Int64)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="xlOper">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLModule.autoFree12(System.Int64)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="xlOper12">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLModule.autoOpen">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLModule.autoRemove">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLModule.CheckForMSIUpdates">
      <summary>If a new version of the application is available, the method returns a formatted string: a URL or UNC path.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLModule.CheckForUpdates">
      <summary>Runs the ClickOnce application associated with the RTD Server to check if there is a new version of the server in the update location. Can be
used only if the RTD Server was deployed with Add-in Express ClickOnce Solution.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLModule.CreateProcess(System.String)">
      <summary>Creates a new process of the same integrity level as its parent process. The new process executes the specified executable file.</summary>
      <param name="fullPath">The path to the executable file to launch.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLModule.GetContainer">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLModule.GetData(System.String)">
      <summary>Retrieves a binary data array from the active worksheet.</summary>
      <param name="name">The name of the binary block in the active worksheet.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLModule.initialize(System.Int64)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="lpSetJumpFunc">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLModule.initialize12(System.Int64,System.Int64)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="lpSetJumpFunc">...</param>
      <param name="lpExcel12v">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLModule.initialize2(System.Int64,System.Int64,System.Int64)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="lpSetJumpFunc">...</param>
      <param name="lpExcel12v">...</param>
      <param name="lpMMngAlloc">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLModule.initialize3(System.Int64,System.Int64,System.Int64,System.Int64)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="lpSetJumpFunc">...</param>
      <param name="lpExcel12v">...</param>
      <param name="lpMMngAlloc">...</param>
      <param name="lpMMngFree">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLModule.IsMSINetworkDeployed">
      <summary>Returns True if the add-in was registered/installed via MSI-based Web installer.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLModule.IsMSIUpdatable">
      <summary>Returns True if the user is permited to update the application. In Vista or Windows 7, it is always True.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLModule.IsNetworkDeployed">
      <summary>Returns True if the XLL add-in was installed via ClickOnce.</summary>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLModule.RegisterMethods(System.Collections.Generic.List{System.Reflection.MethodInfo})">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="methods">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLModule.RegisterXLLInternal(System.Type)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="t">...</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLModule.RemoveData(System.String)">
      <summary>Removes a binary data array from the active worksheet.</summary>
      <param name="name">The name of the binary block in the active worksheet.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLModule.SetData(System.String,System.Byte[])">
      <summary>Saves a binary data array to the active worksheet.</summary>
      <param name="name">The name of the binary block in the active worksheet.</param>
      <param name="data">The array of bytes.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLModule.ShowErrorDialog(System.Object,System.Exception)">
      <summary>Shows the error dialog displaying information on the exception.</summary>
      <param name="sender">An object that has initiated the dialog.</param>
      <param name="e">The exception.</param>
    </member>
    <member name="M:AddinExpress.MSO.ADXXLLModule.UnregisterXLLInternal(System.Type)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="t">...</param>
    </member>
    <member name="P:AddinExpress.MSO.ADXXLLModule.AddinName">
      <summary>The name of the XLL add-in. This string will be shown in the Add-ins dialog in Excel (Tools / Add-ins...).</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXXLLModule.DisplayAlerts">
      <summary>Specifies if an alert should be shown when the add-in is being uninstalled and Excel is running.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXXLLModule.HelpFile">
      <summary>The path and file name of a CHM file providing help topics for the add-in.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXXLLModule.HostApplication">
      <summary>Returns an Excel.Application object.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXXLLModule.Interval">
      <summary>The time (in seconds) at which the OnTime event is called.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXXLLModule.IsInFunctionWizard">
      <summary>returns True if the the Insert Function dialog (function wizard) is shown.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXXLLModule.LoadAtStartup">
      <summary>Specifies if the add-in should be loaded at Excel start-up.</summary>
    </member>
    <member name="P:AddinExpress.MSO.ADXXLLModule.Modules">
      <summary>Returns an ADXXLLAdditionalModuleCollection collection of additional XLL modules.</summary>
    </member>
    <member name="F:AddinExpress.MSO.ADXXLLModule.CurrentInstance">
      <summary>This static property (Shared in VB) returns the current XLL module instance.</summary>
      <returns>ADXXLLModule</returns>
    </member>
    <member name="E:AddinExpress.MSO.ADXXLLModule.OnAdd">
      <summary>Occurs when the add-in is loaded via the Add-ins dialog.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXXLLModule.OnBeforeFunctionAdd">
      <summary>Occurs before a function is registered. Allows you to decide if you need to register the function.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXXLLModule.OnClose">
      <summary>Occurs whenever Excel closes down or the add-in is unloaded via the Add-ins dialog.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXXLLModule.OnEntry">
      <summary>Occurs whenever the user enters new data into the active worksheet.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXXLLModule.OnError">
      <summary>Occurs when the add-in code generates an exception.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXXLLModule.OnFree">
      <summary>Occurs whenever Excel closes down or the add-in is unloaded via the Add-ins dialog.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXXLLModule.OnInitialize">
      <summary>Occurs once during a session, when Excel checks the add-in's interface for the first time.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXXLLModule.OnOpen">
      <summary>Occurs when the add-in is loaded either on Excel startup or via the Add-ins dialog.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXXLLModule.OnRemove">
      <summary>Occurs when the add-in is unloaded via the Add-ins dialog.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXXLLModule.OnShowAddinManager">
      <summary>Occurs when the Add-ins dialog is opened in Excel.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXXLLModule.OnTime">
      <summary>Occurs when the system clock reaches the time specified in the Interval property.</summary>
    </member>
    <member name="E:AddinExpress.MSO.ADXXLLModule.OnWindow">
      <summary>Occurs whenever Excel is about to switch to another workbook.</summary>
    </member>
    <member name="M:AddinExpress.MSO.PictureConverter.IconToPictureDisp(System.Drawing.Icon)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="icon">...</param>
    </member>
    <member name="M:AddinExpress.MSO.PictureConverter.ImageToIPicture(System.Drawing.Image)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="image">...</param>
    </member>
    <member name="M:AddinExpress.MSO.PictureConverter.ImageToOlePicture(System.Drawing.Image)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="image">...</param>
    </member>
    <member name="M:AddinExpress.MSO.PictureConverter.ImageToPictureDisp(System.Drawing.Image)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="image">...</param>
    </member>
    <member name="M:AddinExpress.MSO.PictureConverter.PictureDispToImage(AddinExpress.MSO.IPictureDisp)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="picture">...</param>
    </member>
    <member name="M:AddinExpress.MSO.RefreshPropertiesListAttribute.#ctor(System.String)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="properties">...</param>
    </member>
    <member name="F:AddinExpress.MSO.RefreshPropertiesListAttribute.Properties">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:AddinExpress.MSO.SupportedInVisualDesignerAttribute.#ctor">
      <summary>Initializes an instance of the class.</summary>
    </member>
    <member name="M:AddinExpress.MSO.SupportedInVisualDesignerAttribute.#ctor(System.Boolean)">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
      <param name="visible">...</param>
    </member>
    <member name="P:AddinExpress.MSO.SupportedInVisualDesignerAttribute.Visible">
      <summary>This property supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:AddinExpress.MSO.XPThemes.Enable">
      <summary>Enables the use of XP themes and returns a new instance of the class.</summary>
    </member>
    <member name="T:AddinExpress.MSO.ActiveXContainer_EventHandler">
      <summary></summary>
      <param name="key"></param>
      <param name="value"></param>
    </member>
    <member name="T:AddinExpress.MSO.ADXAccessObjectChanged_EventHandler">
      <summary>Represents the method that handles the CurrentObjectChanged event in Access.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="name">The name of the current object.</param>
      <param name="objType">An ADXAcObjectType representing the object type.</param>
      <param name="objState">An ADXAcObjectState representing the object state.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXAction_EventHandler">
      <summary>Represents the method that will handle the ADXBuiltinControl.Action event.</summary>
      <param name="sender">The object that caused the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXActionEx_EventHandler">
      <summary>Represents the method that will handle the ADXBuiltinControl.Action event.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXCancelEventArgs allowing cancelling the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXBackstage_EventHandler">
      <summary></summary>
      <param name="sender">The object that caused the event.</param>
      <param name="context"></param>
    </member>
    <member name="T:AddinExpress.MSO.ADXChange_EventHandler">
      <summary>Represents the method that will handle the ADXCustomCommandBarComboBox.Change event.</summary>
      <param name="sender">The object that caused the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXClick_EventHandler">
      <summary>Represents the method that will handle the ADXCommandBarButton.Click event.</summary>
      <param name="sender">The object that caused the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXClickOnceAction_EventHandler">
      <summary>Represents the method that handles the ADXClickOnceModule.OnClickOnceAction event.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="action"></param>
    </member>
    <member name="T:AddinExpress.MSO.ADXClickOnceUI_EventHandler">
      <summary>Represents the method that handles the ADXClickOnceModule.OnShowClickOnceCustomUI event.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXClickOnceUIEventArgs that provides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXCustomTaskPane_EventHandler">
      <summary>Represents the method that handles the following events of ADXTaskPane:

<list type="bullet"><item>DockPositionStateChange</item><item>VisibleStateChange</item></list></summary>
      <param name="sender">The object that caused the event.</param>
      <param name="taskPaneInst">The active custom task pane (a COM object).</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXDirty_EventHandler">
      <summary>Represents the method that will handle the ADXOlOptionPage.Dirty event.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXDirtyEventArgs providing data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXDocumentFix_EventHandler">
      <summary>Represents the method that handles the OnFix event of ADXDocumentInspector.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXDocumentFixEventArgs that provides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXDocumentInspect_EventHandler">
      <summary>Represents the method that handles the OnInspect event of ADXDocumentInspector.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXDocumentInspectEventArgs that provides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXError_EventHandler">
      <summary>Represents the method that will handle the ADXAddinModule.Error event.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXErrorEventArgs providing data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXEvents_EventHandler">
      <summary>Represents the method that will handle the following events: ADXAddinModule.AddInBeginShutdown ADXAddinModule.AddInFinalize
ADXAddinModule.AddInInitialize ADXAddinModule.AddInStartupComplete</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An EventArgs providing data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelBeforeDoubleClick_EventHandler">
      <summary>Represents the method that handles the BeforeDoubleClick event in Excel.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="target">The active Chart object (a COM object).</param>
      <param name="elementID">The double-clicked object. The value of this parameter determines the expected values of Arg1 and Arg2</param>
      <param name="arg1">Additional event information, depending on the value of ElementID</param>
      <param name="arg2">Additional event information, depending on the value of ElementID</param>
      <param name="e">An ADXCancelEventArgs that allows cancelling the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelBeforeRightClick_EventHandler">
      <summary>Represents the method that handles the BeforeRightClick event in Excel.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="target">The cell (Range object, a COM object) nearest to the mouse pointer when the right-click occurred.</param>
      <param name="e">An ADXCancelEventArgs that allows cancelling the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelChange_EventHandler">
      <summary>Represents the method that handles the Change event in Excel.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="target">The changed range (a COM object).</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelFollowHyperlink_EventHandler">
      <summary>Represents the method that handles the FollowHyperlink event in Excel.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="target">The Hyperlink object (a COM object) that represents the destination of the hyperlink.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelFunctionAdd_EventHandler">
      <summary>Represents the method that handles the ADXXLLModule.OnBeforeFunctionAdd event.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXExcelFunctionAddEventArgs that provides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelHyperlink_EventHandler">
      <summary>Represents the method that handles the SheetFollowHyperlink event in Excel.</summary>
      <param name="sender">The object that sent the event.</param>
      <param name="sheet">The Worksheet object (a COM object) that contains the hyperlink.</param>
      <param name="hyperlink">The Hyperlink object (a COM object) that represents the destination of the hyperlink.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelMouseDown_EventHandler">
      <summary>Represents the method that handles the MouseDown event in Excel.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="button">The mouse button that was released.</param>
      <param name="shift">The state of the SHIFT, CTRL, and ALT keys when the event occurred. Can be one of or a sum of values.</param>
      <param name="x">The X coordinate of the mouse pointer in chart object client coordinates.</param>
      <param name="y">The Y coordinate of the mouse pointer in chart object client coordinates.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelMouseMove_EventHandler">
      <summary>Represents the method that handles the MouseMove event in Excel.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="button">The mouse button that was released.</param>
      <param name="shift">The state of the SHIFT, CTRL, and ALT keys when the event occurred. Can be one of or a sum of values.</param>
      <param name="x">The X coordinate of the mouse pointer in chart object client coordinates.</param>
      <param name="y">The Y coordinate of the mouse pointer in chart object client coordinates.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelMouseUp_EventHandler">
      <summary>Represents the method that handles the MouseUp event in Excel.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="button">The mouse button that was released.</param>
      <param name="shift">The state of the SHIFT, CTRL, and ALT keys when the event occurred. Can be one of or a sum of values.</param>
      <param name="x">The X coordinate of the mouse pointer in chart object client coordinates.</param>
      <param name="y">The Y coordinate of the mouse pointer in chart object client coordinates.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelPivotTable_EventHandler">
      <summary>Represents the method that handles the following Excel events:

<list type="bullet"><item>WorkbookPivotTableCloseConnection</item><item>WorkbookPivotTableOpenConnection</item></list></summary>
      <param name="sender">The object that caused the event.</param>
      <param name="workbook">The selected workbook (a COM object).</param>
      <param name="pivot">The selected PivotTable report (a COM object).</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelPivotTableAfterValueChange_EventHandler">
      <summary>Represents the method that handles the PivotTableAfterValueChange event.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="targetPivotTable">The PivotTable (a COM object) that contains the edited or recalculated cells.</param>
      <param name="targetRange">The range (a COM object) that contains all the edited or recalcuated cells.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelPivotTableBeforeAllocateChanges_EventHandler">
      <summary>Represents the method that handles the PivotTableBeforeAllocateChanges event.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="targetPivotTable">The PivotTable that contains the changes to apply.</param>
      <param name="valueChangeStart">The index to the first change in the associated PivotTableChangeList collection. The index is specified by the Order property of the ValueChange
object in the PivotTableChangeList collection.</param>
      <param name="valueChangeEnd">The index to the last change in the associated PivotTableChangeList collection. The index is specified by the Order property of the ValueChange
object in the PivotTableChangeList collection.</param>
      <param name="e">An ADXCancelEventArgs that allos cancellinf the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelPivotTableBeforeCommitChanges_EventHandler">
      <summary>Represents the method that handles the PivotTableAfterValueChange event in Excel.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="targetPivotTable">The PivotTable (a COM object) that contains the changes to commit.</param>
      <param name="valueChangeStart">The index to the first change in the associated PivotTableChangeList collection. The index is specified by the Order property of the ValueChange
object in the PivotTableChangeList collection.</param>
      <param name="valueChangeEnd">The index to the last change in the associated PivotTableChangeList collection. The index is specified by the Order property of the ValueChange
object in the PivotTableChangeList collection.</param>
      <param name="e">An ADXCancelEventArgs that allos cancellinf the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelPivotTableBeforeDiscardChanges_EventHandler">
      <summary>Represents the method that handles the PivotTableAfterValueChange event in Excel.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="targetPivotTable">The PivotTable (a COM object) that contains the changes to discard.</param>
      <param name="valueChangeStart">The index to the first change in the associated PivotTableChangeList collection. The index is specified by the Order property of the ValueChange
object in the PivotTableChangeList collection.</param>
      <param name="valueChangeEnd">The index to the last change in the associated PivotTableChangeList collection. The index is specified by the Order property of the ValueChange
object in the PivotTableChangeList collection.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelPivotTableChangeSync_EventHandler">
      <summary>Represents the method that handles the PivotTableChangeSync event in Excel.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="target">The PivotTable (a COM object) that was changed.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelPivotTableUpdate_EventHandler">
      <summary>Represents the method that handles the PivotTableUpdate event in Excel.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="target">The selected PivotTable report (a COM object).</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelProtectedViewWindowActivate_EventHandler">
      <summary>Represents the method that handles the ProtectedViewWindowActivate event in Excel.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="protectedViewWindow">An object (a COM object) that represents the Protected View window that is activated.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelProtectedViewWindowBeforeClose_EventHandler">
      <summary>Represents the method that handles the ProtectedViewWindowBeforeClose event in Excel.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXExcelProtectedViewWindowBeforeCloseEventArgs that provides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelProtectedViewWindowBeforeEdit_EventHandler">
      <summary>Represents the method that handles the ProtectedViewWindowBeforeEdit event in Excel.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXExcelProtectedViewWindowBeforeEditEventArgs that provides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelProtectedViewWindowDeactivate_EventHandler">
      <summary>Represents the method that handles the ProtectedViewWindowDeactivate event in Excel.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="protectedViewWindow">An object (a COM object) that represents the Protected View window that is deactivated.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelProtectedViewWindowOpen_EventHandler">
      <summary>Represents the method that handles the ProtectedViewWindowOpen event in Excel.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="protectedViewWindow">An object (a COM object) that represents the Protected View window that is opened.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelProtectedViewWindowResize_EventHandler">
      <summary>Represents the method that handles the ProtectedViewWindowResize event in Excel.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="protectedViewWindow">An object (a COM object) that represents the Protected View window that is sized.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelSelect_EventHandler">
      <summary>Represents the method that handles the Select event in Excel.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="elementID">The selected chart element.</param>
      <param name="arg1">The selected chart element.</param>
      <param name="arg2">The selected chart element.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelSelectionChange_EventHandler">
      <summary>Represents the method that handles the SelectionChange event in Excel.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="target">The new selected range (a COM object).</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelSeriesChange_EventHandler">
      <summary>Represents the method that handles the SeriesChange event in Excel.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="seriesIndex">The offset within the Series collection for the changed series.</param>
      <param name="pointIndex">The offset within the Points collection for the changed point.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelSheet_EventHandler">
      <summary>Represents the method that handles the following events:

<list type="bullet"><item>SheetSelectionChange</item><item>SheetChange</item></list></summary>
      <param name="sender">The object that sent the event.</param>
      <param name="sheet">The Excel sheet (a COM object) that caused the event.</param>
      <param name="range">The Range object (a COM object) that is the changed or selected range.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelSheetBefore_EventHandler">
      <summary>Represents the method that handles the following Excel events:

<list type="bullet"><item>SheetBeforeDoubleClick</item><item>SheetBeforeRightClick</item></list></summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXExcelSheetBeforeEventArgs that provides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelSheetPivotTableAfterValueChange_EventHandler">
      <summary>Represents the method that handles the SheetPivotTableAfterValueChange event in Excel.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="sheet">The worksheet that contains the PivotTable.</param>
      <param name="targetPivotTable">The PivotTable that contains the edited or recalculated cells.</param>
      <param name="targetRange">The range that contains all the edited or recalcuated cells.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelSheetPivotTableBeforeAllocateChanges_EventHandler">
      <summary>Represents the method that handles the SheetPivotTableBeforeDoChanges event in Excel.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXExcelSheetPivotTableBeforeChangesEventArgs that provides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelSheetPivotTableBeforeCommitChanges_EventHandler">
      <summary>Represents the method that handles the SheetPivotTableBeforeDoChanges event in Excel.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXExcelSheetPivotTableBeforeChangesEventArgs that provides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelSheetPivotTableBeforeDiscardChanges_EventHandler">
      <summary>Represents the method that handles the SheetPivotTableBeforeDiscardChanges event in Excel.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="sheet">The sheet (a COM object).</param>
      <param name="targetPivotTable">The PivotTable (a COM object) that contains the changes to discard.</param>
      <param name="valueChangeStart">The index to the first change in the associated PivotTableChangeList object. The index is specified by the Order property of the ValueChange
object in the PivotTableChangeList collection.</param>
      <param name="valueChangeEnd">The index to the last change in the associated PivotTableChangeList object. The index is specified by the Order property of the ValueChange
object in the PivotTableChangeList collection.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelSheetPivotTableUpdate_EventHandler">
      <summary>Represents the method that handles the SheetPivotTableUpdate event in Excel.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="sheet">The selected sheet (a COM object).</param>
      <param name="pivot">The selected PivotTable report (a COM object).</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelWorkbook_EventHandler">
      <summary>Represents the method that handles the WorkbookNewSheet event in Excel.</summary>
      <param name="sender">The object that sent the event.</param>
      <param name="workbook">The Workbook object (a COM object) that caused the event.</param>
      <param name="sheet">The new Excel sheet (a COM object).</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelWorkbookAfterSave_EventHandler">
      <summary>Represents the method that handles the WorkbookAfterSave event in Excel.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="workbook">The workbook (a COM object) being saved.</param>
      <param name="success">Returns True if the save operation was successful; otherwise False.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelWorkbookAfterXmlExport_EventHandler">
      <summary>Represents the method that handles the WorkbookAfterXmlExport event in Excel.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="workbook">The target workbook (a COM object).</param>
      <param name="map">The XML map (a COM object) that was used to save or export data.</param>
      <param name="url">The location of the XML file that was exported.</param>
      <param name="result">Indicates the results of the save or export operation.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelWorkbookAfterXmlImport_EventHandler">
      <summary>Represents the method that handles the WorkbookAfterXmlImport event in Excel.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="workbook">The target workbook (a COM object).</param>
      <param name="map">The XML map (a COM object) that was used to import data.</param>
      <param name="isRefresh">True if the event was triggered by refreshing an existing connection to XML data, False if a new mapping was created.</param>
      <param name="result">Indicates the results of the refresh or import operation.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelWorkbookBeforeXmlExport_EventHandler">
      <summary>Represents the method that handles the WorkbookBeforeXmlExport event in Excel.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXExcelWorkbookBeforeXmlExportEventArgs that provides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelWorkbookBeforeXmlImport_EventHandler">
      <summary>Represents the method that handles the WorkbookBeforeXmlImport event in Excel.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXExcelWorkbookBeforeXmlImportEventArgs that provides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelWorkbookNewChart_EventHandler">
      <summary>Represents the method that handles the WorkbookNewChart event in Excel.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="workbook">The workbook (a COM object).</param>
      <param name="chart">The new chart (a COM object).</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelWorkbookRowsetComplete_EventHandler">
      <summary>Represents the method that handles the WorkbookRowsetComplete event in Excel.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="workbook">The workbook (a COM object) for which the event occurs.</param>
      <param name="description">A brief description of the event.</param>
      <param name="sheet">The worksheet on which the recordset is created.</param>
      <param name="success">Contains a Boolean value to indicate success or failure.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXExcelWorkbookSync_EventHandler">
      <summary>Represents the method that handles the WorkbookSync event in Excel.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="workbook">The workbook (a COM object) being synchronized.</param>
      <param name="syncEventType">The status of the workbook synchronization.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXFrontPageBeforeWebPublish_EventHandler">
      <summary>Represents the method that handles the OnBeforeWebPublish event in FrontPage.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXFrontPageBeforeWebPublishEventArgs that provides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXHostAction_EventHandler">
      <summary>Represents the method that handles the following events:

<list type="bullet"><item>ExplorerBeforeMaximize</item><item>ExplorerBeforeMinimize</item><item>ExplorerBeforeMove</item><item>ExplorerBeforeSize</item><item>ExplorerBeforeItemCopy</item><item>ExplorerBeforeItemCut</item><item>InspectorBeforeMaximize</item><item>InspectorBeforeMinimize</item><item>InspectorBeforeMove</item><item>InspectorBeforeSize</item></list></summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXHostActionEventArgs providing data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXHostActiveObject_EventHandler">
      <summary>Represents the method that handles the following events:

<list type="bullet"><item>NewWorkbook in Excel</item><item>SheetActivate in Excel</item><item>SheetDeactivate in Excel</item><item>SheetCalculate in Excel</item><item>WorkbookOpen in Excel</item><item>WorkbookActivate in Excel</item><item>WorkbookDeactivate in Excel</item><item>WorkbookAddinInstall in Excel</item><item>WorkbookAddinUninstall in Excel</item><item>OnWebNew in FrontPage</item><item>OnWebOpen in FrontPage</item><item>OnPageNew in FrontPage</item><item>OnPageOpen in FrontPage</item><item>WindowActivate in FrontPage</item><item>WindowDeactivate in FrontPage</item><item>AdvancedSearchComplete in Outlook</item><item>AdvancedSearchStopped in Outlook</item><item>WindowSelectionChange in PowerPoint</item><item>PresentationClose in PowerPoint</item><item>PresentationSave in PowerPoint</item><item>PresentationOpen in PowerPoint</item><item>NewPresentation in PowerPoint</item><item>PresentationNewSlide in PowerPoint</item><item>SlideShowBegin in PowerPoint</item><item>SlideShowNextBuild in PowerPoint</item><item>SlideShowNextSlide in PowerPoint</item><item>SlideShowEnd in PowerPoint</item><item>PresentationPrint in PowerPoint</item><item>SlideSelectionChanged in PowerPoint</item><item>ColorSchemeChanged in PowerPoint</item><item>AfterNewPresentation in PowerPoint</item><item>AfterPresentationOpen in PowerPoint</item><item>NewProject in Project</item><item>ProjectCalculate in Project</item><item>WindowActivate in Project</item><item>WindowDeactivate in Project</item><item>WindowActivate in Publisher</item><item>WindowDeactivate in Publisher</item><item>WindowPageChange in Publisher</item><item>Quit in Publisher</item><item>NewDocument in Publisher</item><item>DocumentOpen in Publisher</item><item>MailMergeAfterMerge in Publisher</item><item>MailMergeAfterRecordMerge in Publisher</item><item>MailMergeDataSourceLoad in Publisher</item><item>MailMergeWizardSendToCustom in Publisher</item><item>MailMergeRecipientListClose in Publisher</item><item>MailMergeWizardFollowUpCustom in Publisher</item><item>AfterPrint in Publisher</item><item>AppActivated in Visio</item><item>AppDeactivated in Visio</item><item>AppObjActivated in Visio</item><item>AppObjDeactivated in Visio</item><item>BeforeQuit in Visio</item><item>BeforeModal in Visio</item><item>AfterModal in Visio</item><item>WindowOpened in Visio</item><item>SelectionChanged in Visio</item><item>BeforeWindowClosed in Visio</item><item>WindowActivated in Visio</item><item>BeforeWindowSelDelete in Visio</item><item>BeforeWindowPageTurn in Visio</item><item>WindowTurnedToPage in Visio</item><item>DocumentOpened in Visio</item><item>DocumentCreated in Visio</item><item>DocumentSaved in Visio</item><item>DocumentSavedAs in Visio</item><item>DocumentChanged in Visio</item><item>BeforeDocumentClose in Visio</item><item>StyleAdded in Visio</item><item>StyleChanged in Visio</item><item>BeforeStyleDelete in Visio</item><item>MasterAdded in Visio</item><item>MasterChanged in Visio</item><item>BeforeMasterDelete in Visio</item><item>PageAdded in Visio</item><item>PageChanged in Visio</item><item>BeforePageDelete in Visio</item><item>ShapeAdded in Visio</item><item>BeforeSelectionDelete in Visio</item><item>ShapeChanged in Visio</item><item>SelectionAdded in Visio</item><item>BeforeShapeDelete in Visio</item><item>TextChanged in Visio</item><item>CellChanged in Visio</item><item>NoEventsPending in Visio</item><item>VisioIsIdle in Visio</item><item>MustFlushScopeBeginning in Visio</item><item>MustFlushScopeEnded in Visio</item><item>RunModeEntered in Visio</item><item>DesignModeEntered in Visio</item><item>BeforeDocumentSave in Visio</item><item>BeforeDocumentSaveAs in Visio</item><item>FormulaChanged in Visio</item><item>ConnectionsAdded in Visio</item><item>ConnectionsDeleted in Visio</item><item>QuitCanceled in Visio</item><item>WindowChanged in Visio</item><item>ViewChanged in Visio</item><item>WindowCloseCanceled in Visio</item><item>DocumentCloseCanceled in Visio</item><item>StyleDeleteCanceled in Visio</item><item>MasterDeleteCanceled in Visio</item><item>PageDeleteCanceled in Visio</item><item>ShapeParentChanged in Visio</item><item>BeforeShapeTextEdit in Visio</item><item>ShapeExitedTextEdit in Visio</item><item>SelectionDeleteCanceled in Visio</item><item>UngroupCanceled in Visio</item><item>ConvertToGroupCanceled in Visio</item><item>SuspendCanceled in Visio</item><item>BeforeSuspend in Visio</item><item>AfterResume in Visio</item><item>DocumentOpen in Word</item><item>NewDocument in Word</item><item>WindowSelectionChange in Word</item><item>EPostagePropertyDialog in Word</item><item>EPostageInsert in Word</item></list></summary>
      <param name="sender">The object that sent the event.</param>
      <param name="hostObj">The object (a COM object) that is the cause of the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXHostAfterAction_EventHandler">
      <summary>Represents the method that handles the following events:

<list type="bullet"><item>OnAfterWebPublish in FrontPage</item><item>OnAfterPageSavein FrontPage</item><item>MailMergeDataSourceValidate in Word</item><item>MailMergeDataSourceValidate2 in Word</item></list></summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXHostAfterActionEventArgs that provides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXHostBeforeAction_EventHandler">
      <summary>Represents the method that handles the following events:

<list type="bullet"><item>ADXExcelAppEvents.WorkbookBeforeClose</item><item>ADXExcelAppEvents.WorkbookBeforePrint</item><item>ADXFrontPageAppEvents.OnWebClose</item><item>ADXFrontPageAppEvents.OnPageClose</item><item>ADXMapPointAppEvents.BeforeClose</item><item>ADXPowerPointAppEvents.WindowBeforeRightClick</item><item>ADXPowerPointAppEvents.WindowBeforeDoubleClick</item><item>ADXPowerPointAppEvents.PresentationBeforeSave</item><item>ADXProjectAppEvents.ProjectBeforeTaskDelete</item><item>ADXProjectAppEvents.ProjectBeforeResourceDelete</item><item>ADXProjectAppEvents.ProjectBeforeAssignmentDelete</item><item>ADXProjectAppEvents.ProjectBeforeTaskNew</item><item>ADXProjectAppEvents.ProjectBeforeResourceNew</item><item>ADXProjectAppEvents.ProjectBeforeAssignmentNew</item><item>ADXProjectAppEvents.ProjectBeforeClose</item><item>ADXProjectAppEvents.ProjectBeforePrint</item><item>ADXPublisherAppEvents.DocumentBeforeClose</item><item>ADXPublisherAppEvents.MailMergeBeforeRecordMerge</item><item>ADXPublisherAppEvents.MailMergeDataSourceValidate</item><item>ADXPublisherAppEvents.MailMergeInsertBarcode</item><item>ADXPublisherAppEvents.BeforePrint</item><item>ADXVisioAppEvents.QueryCancelQuit</item><item>ADXVisioAppEvents.QueryCancelWindowClose</item><item>ADXVisioAppEvents.QueryCancelDocumentClose</item><item>ADXVisioAppEvents.QueryCancelStyleDelete</item><item>ADXVisioAppEvents.QueryCancelMasterDelete</item><item>ADXVisioAppEvents.QueryCancelPageDelete</item><item>ADXVisioAppEvents.QueryCancelSelectionDelete</item><item>ADXVisioAppEvents.QueryCancelUngroup</item><item>ADXVisioAppEvents.QueryCancelConvertToGroup</item><item>ADXVisioAppEvents.QueryCancelSuspend</item><item>ADXVisioAppEvents.OnKeystrokeMessageForAddon</item><item>ADXWordAppEvents.DocumentBeforeClose</item><item>ADXWordAppEvents.DocumentBeforePrint</item><item>ADXWordAppEvents.WindowBeforeDoubleClick</item><item>ADXWordAppEvents.WindowBeforeRightClick</item><item>ADXWordAppEvents.MailMergeBeforeRecordMerge</item></list></summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXHostBeforeActionEventArgs that provide dat for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXHostBeforeSave_EventHandler">
      <summary>Represents the method that handles the following events:

<list type="bullet"><item>WorkbookBeforeSave</item><item>OnBeforePageSave</item><item>BeforeSave</item><item>ProjectBeforeSave</item><item>DocumentBeforeSave</item></list></summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXHostBeforeSaveEventArgs providing data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXHostWindow_EventHandler">
      <summary>Represents the method that handles the following events:

<list type="bullet"><item>WindowResize</item><item>WindowActivate</item><item>WindowDeactivate</item><item>WindowActivate</item><item>WindowDeactivate</item><item>WindowActivate</item><item>WindowDeactivate</item><item>WindowSize</item></list></summary>
      <param name="sender">The object that sent the event.</param>
      <param name="hostObj">The Office document (a COM object) the window of which caused the event.</param>
      <param name="window">The window object (a COM object) that caused the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXInfoPathDocument_EventHandler">
      <summary>Represents the method that handles the following events in InfoPath:

<list type="bullet"><item>NewXDocument</item><item>XDocumentOpen</item></list></summary>
      <param name="sender">The object that caused the event.</param>
      <param name="document">The XDocument object (a COM object) that represents the underlying XML document of the form that was opened</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXInfoPathDocumentBeforeAction_EventHandler">
      <summary>Represents the method that handles the following events in InfoPath:

<list type="bullet"><item>XDocumentBeforeClose</item><item>XDocumentBeforePrint</item><item>XDocumentBeforeSave</item></list></summary>
      <param name="sender">The object that caused the event.</param>
      <param name="document">The document (a COM object).</param>
      <param name="e">An ADXCancelEventArgs that allows cancelling the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXInfoPathWindow_EventHandler">
      <summary>Represents the method that handles the following events in InfoPath:

<list type="bullet"><item>WindowActivate</item><item>WindowDeactivate</item><item>WindowSize</item></list></summary>
      <param name="sender">The object that caused the event.</param>
      <param name="document">The document (a COM object).</param>
      <param name="window">The window (a COM object).</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXKeyDown_EventHandler">
      <summary>Represents the method that handles the ADXAddinModule.OnKeyDown event.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXKeyDownEventArgs that provides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXMsfBeforeDragOver_EventHandler">
      <summary>Represents the method that handles the BeforeDragOver event.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="cancel">Event status. False indicates that the control should handle the event (default). True indicates the application handles the event.</param>
      <param name="data">Data that is dragged in a drag-and-drop operation. The data is packaged in a DataObject.</param>
      <param name="x">The horizontal coordinate of the control's position.</param>
      <param name="y">The vertical coordinate of the control's position.</param>
      <param name="dragState">Transition state of the data being dragged.</param>
      <param name="effect">Operations supported by the drop source.</param>
      <param name="shift">Specifies the state of SHIFT, CTRL, and ALT.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXMsfBeforeDropOrPaste_EventHandler">
      <summary>Represents the method that handles the BeforeDropOrPaste event.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="cancel">Event status. False indicates that the control should handle the event (default). True indicates the application handles the event.</param>
      <param name="action">Indicates the result, based on the current keyboard settings, of the pending drag-and-drop operation.</param>
      <param name="data">Data that is dragged in a drag-and-drop operation. The data is packaged in a DataObject.</param>
      <param name="x">The horizontal position of the mouse pointer when the drop occurs.</param>
      <param name="y">The vertical position of the mouse pointer when the drop occurs.</param>
      <param name="effect">Effect of the drag-and-drop operation on the target control.</param>
      <param name="shift">Specifies the state of SHIFT, CTRL, and ALT.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXMsfDblClick_EventHandler">
      <summary>Represents the method that handles the DblClick event.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="cancel">Event status. False indicates that the control should handle the event (default). True indicates the application handles the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXMsfError_EventHandler">
      <summary>Represents the method that handles the Error event.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="number">Specifies a unique value that the control uses to identify the error.</param>
      <param name="description">A textual description of the error.</param>
      <param name="sCode">Specifies the OLE status code for the error. The low-order 16 bits specify a value that is identical to the Number argument.</param>
      <param name="source">The string that identifies the control which initiated the event.</param>
      <param name="helpFile">Specifies a fully qualified path name for the Help file that describes the error.</param>
      <param name="helpContext">Specifies the context ID of the Help file topic that contains a description of the error.</param>
      <param name="cancelDisplay">Specifies whether to display the error string in a message box.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXMsfKeyDown_EventHandler">
      <summary>Represents the method that handles the KeyDown event.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="keyCode">An integer that represents the key code of the key that was pressed or released.</param>
      <param name="shift">The state of SHIFT, CTRL, and ALT.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXMsfKeyPress_EventHandler">
      <summary>Represents the method that handles the KeyPress event.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="keyAscii">An integer value that represents a standard numeric ANSI key code.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXMsfKeyUp_EventHandler">
      <summary>Represents the method that handles the KeyUp event.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="keyCode">An integer that represents the key code of the key that was pressed or released.</param>
      <param name="shift">The state of SHIFT, CTRL, and ALT.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXMsfMouseDown_EventHandler">
      <summary>Represents the method that handles the MouseDown event.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="button">An integer value that identifies which mouse button caused the event.</param>
      <param name="shift">The state of SHIFT, CTRL, and ALT.</param>
      <param name="x">The horizontal position, in points, from the left or top edge of the form, Frame, or Page.</param>
      <param name="y">The vertical position, in points, from the left or top edge of the form, Frame, or Page.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXMsfMouseMove_EventHandler">
      <summary>Represents the method that handles the MouseMove event.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="button">An integer value that identifies the state of the mouse buttons.</param>
      <param name="shift">Specifies the state of SHIFT, CTRL, and ALT.</param>
      <param name="x">The horizontal position, measured in points, from the left or top edge of the control.</param>
      <param name="y">The vertical position, measured in points, from the left or top edge of the control.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXMsfMouseUp_EventHandler">
      <summary>Represents the method that handles the MouseUp event.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="button">An integer value that identifies which mouse button caused the event.</param>
      <param name="shift">The state of SHIFT, CTRL, and ALT.</param>
      <param name="x">The horizontal position, in points, from the left or top edge of the form, Frame, or Page.</param>
      <param name="y">The vertical position, in points, from the left or top edge of the form, Frame, or Page.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlAttachmentSelectionChange_EventHandler">
      <summary>Represents the method that handles the AttachmentSelectionChange event of the Explorer and Inspector.</summary>
      <param name="sender">The object that caused the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlBeforeFolderSharingDialog_EventHandler">
      <summary>Represents the method that handles the BeforeFolderSharingDialog event in Outlook.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXOlBeforeFolderSharingDialogEventArgs that provides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlBeforeFormRegionShow_EventHandler">
      <summary>Represents the method that handles the ADXOutlookAppEvents.OnBeforeFormRegionShow event.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="formRegion">The FormRegion object representing the form region that is to be displayed.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlBeforeOptionPageAdd_EventHandler">
      <summary>Represents the method that handles the BeforeOptionPageAdd event of ADXOutlookAppEvents.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXOptionPageAddEventArgs that provides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlBeforeReminderShow_EventHandler">
      <summary>Represents the method that handles the BeforeReminderShow event of ADXOutlookAppEvents.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXCancelEventArgs that allows cancelling the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlContextMenu_EventHandler">
      <summary>Represents the method that handles the following events in Outlook:

<list type="bullet"><item>AttachmentContextMenuDisplay</item><item>FolderContextMenuDisplay</item><item>StoreContextMenuDisplay</item><item>ShortcutContextMenuDisplay</item><item>ViewContextMenuDisplay</item><item>ItemContextMenuDisplay</item></list></summary>
      <param name="sender">The object that caused the event.</param>
      <param name="commandBar">The context menu (a COM object) to be displayed.</param>
      <param name="target">An event-specific object (a COM object).</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlContextMenuClose_EventHandler">
      <summary>Represents the method that handles the ContextMenuClose event in Outlook.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="contextMenu">A constant indicating the type of context menu to be closed.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlExplorer_EventHandler">
      <summary>Represents the method that handles the following events of ADXOutlookAppEvents:

<list type="bullet"><item>NewExplorer</item><item>ExplorerActivate</item><item>ExplorerAddCommandBars</item><item>ExplorerFolderSwitch</item><item>ExplorerClose</item><item>ExplorerViewSwitch</item><item>ExplorerDeactivate</item><item>ExplorerSelectionChange</item></list></summary>
      <param name="sender">The object that sent the event.</param>
      <param name="explorer">The explorer object (a COM object) that caused the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlExplorerBeforeFolderSwitch_EventHandler">
      <summary>Represents the method that handles the ExplorerBeforeFolderSwitch event of ADXOutlookAppEvents.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXOlExplorerBeforeFolderSwitchEventArgs containing event data.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlExplorerBeforeItemPaste_EventHandler">
      <summary>Represents the method that handles the ExplorerBeforeItemPaste event of ADXOutlookAppEvents.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXOlExplorerBeforeItemPasteEventArgs containing event data.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlExplorerBeforeViewSwitch_EventHandler">
      <summary>Represents the method that handles the ExplorerBeforeViewSwitch event of ADXOutlookAppEvents.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXOlExplorerBeforeViewSwitchEventArgs containing event data.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlGetFormRegionIcon_EventHandler">
      <summary>Represents the method that handles the ADXOutlookAppEvents.OnGetFormRegionIcon event.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXOlGetFormRegionIconEventArgs that provides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlGetFormRegionManifest_EventHandler">
      <summary>Represents the method that handles the ADXOutlookAppEvents.OnGetFormRegionManifest event.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXOlGetFormRegionManifestEventArgs that provides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlGetFormRegionStorage_EventHandler">
      <summary>Represents the method that handles the ADXOutlookAppEvents.OnGetFormRegionStorage event.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXOlGetFormRegionStorageEventArgs that provides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlInspector_EventHandler">
      <summary>Represents the method that handles the following events of ADXOutlookAppEvents:

<list type="bullet"><item>NewInspector</item><item>InspectorActivate</item><item>InspectorAddCommandBars</item><item>InspectorDeactivate</item><item>InspectorClose</item></list></summary>
      <param name="sender">The object that sent the event.</param>
      <param name="inspector">The inspector object (a COM object) that is the cause of the event.</param>
      <param name="folderName">The full name of the current folder in the active Explorer window.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlItem_EventHandler">
      <summary>Represents the method that handles the following events of ADXOutlookAppEvents:

<list type="bullet"><item>Reminder</item><item>ItemLoad</item></list></summary>
      <param name="sender">The object that sent the event.</param>
      <param name="item">The Outlook item (a COM object) that caused the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlItemSend_EventHandler">
      <summary>Represents the method that handles the ItemSend event of ADXOutlookAppEvents.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXOlItemSendEventArgs containing event data.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlNamespaceBeforeOptionPageAdd_EventHandler">
      <summary>Represents the method that handles the NamespaceBeforeOptionPageAdd event of ADXOutlookAppEvents.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="folder">The Folder object for which the Properties dialog box is being opened.</param>
      <param name="e">An ADXOptionPageAddEventArgs that provides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlNamespaceOptionPages_EventHandler">
      <summary>Represents the method that handles the NamespaceOptionPagesAdd event of ADXOutlookAppEvents.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="optionPages">The collection (a COM object) of property pages that have been added to the dialog box. This collection includes only custom property pages. It
does not include standard Microsoft Outlook property pages.</param>
      <param name="folder">The Folder object (a COM object) for which the Properties dialog box is being opened.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlNewMailEx_EventHandler">
      <summary>Represents the method that handles the NewMailEx event of ADXOutlookAppEvents.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="entryIDCollection">A string representing an Entry ID of an item received in the Inbox.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlOptionPages_EventHandler">
      <summary>Represents the method that handles the OptionPagesAdd event of ADXOutlookAppEvents.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="optionPages">The collection (a COM object) of property pages that have been added to the dialog box. This collection includes only custom property pages. It
does not include standard Microsoft Outlook property pages.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlPageChange_EventHandler">
      <summary>Represents the method that handles the PageChange event in Outlook.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXOlPageChangeEventArgs that provides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlReminder_EventHandler">
      <summary>Represents the method that handles the following events of ADXOutlookAppEvents:

<list type="bullet"><item>ReminderAdd</item><item>ReminderChange</item><item>ReminderFire</item><item>Snooze</item></list></summary>
      <param name="sender">The object that sent the event.</param>
      <param name="reminderObj">The Reminder object (a COM object) that caused the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXOLSolutionModuleParentFolderRequest">
      <summary>Represents the method that will handle the ADXOLSolutionModuleParentFolderRequest event.</summary>
      <param name="sender">An instance of the ADXOLSolutionModule class.</param>
      <param name="parentFolder">The parent folder for the solution module folders.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlSyncObjectEnd_EventHandler">
      <summary>Represents the method that handles the ADXOutlookAppEvents.SyncEnd event.</summary>
      <param name="sender">An ADXOutlookAppEvents that has generated the event.</param>
      <param name="syncObject">An Outlook.SyncObject (a COM object) that generated the original event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlSyncObjectError_EventHandler">
      <summary>Represents the method that handles the ADXOutlookAppEvents.SyncError event.</summary>
      <param name="sender">An ADXOutlookAppEvents that has generated the event.</param>
      <param name="syncObject">An Outlook.SyncObject (a COM object) that generated the original event (SyncObject.OnError).</param>
      <param name="code">A unique value that identifies the error.</param>
      <param name="description">A textual description of the error.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlSyncObjectProgress_EventHandler">
      <summary>Represents the method that handles the ADXOutlookAppEvents.SyncProgress event.</summary>
      <param name="sender">An ADXOutlookAppEvents that has generated the event.</param>
      <param name="syncObject">An Outlook.SyncObject (a COM object) that generated the original event (SyncObject.Progress).</param>
      <param name="state">An ADXOlSyncState that identifies the current state of the synchronization process.</param>
      <param name="description">A textual description of the current state of the synchronization process.</param>
      <param name="value">Specifies the current value of the synchronization process (such as the number of items synchronized).</param>
      <param name="max">The maximum that <i>value</i> can reach. The ratio of <i>value</i> to <i>max</i> represents the percent complete of the synchronization process.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXOlSyncObjectStart_EventHandler">
      <summary>Represents the method that handles the ADXOutlookAppEvents.SyncStart event.</summary>
      <param name="sender">An ADXOutlookAppEvents that has generated the event.</param>
      <param name="syncObject">An Outlook.SyncObject (a COM object) that generated the original event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXPowerPointPresentationBeforeClose_EventHandler">
      <summary>Represents the method that handles the PresentationBeforeClose event in PowerPoint.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXPowerPointPresentationBeforeCloseEventArgs that provides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXPowerPointPresentationCloseFinal_EventHandler">
      <summary>Represents the method that handles the PresentationCloseFinal event in PowerPoint.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="presentation">The Presentation object (a COM object).</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXPowerPointPresentationSync_EventHandler">
      <summary>Represents the method that handles the PresentationSync event in PowerPoint.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="presentation">The presentation (a COM object) that is being synchronized.</param>
      <param name="syncEventType">The status of the synchronization.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXPowerPointProtectedViewWindowActivate_EventHandler">
      <summary>Represents the method that handles the ProtectedViewWindowActivate event in PowerPoint.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="protectedViewWindow">The protected view window (a COM object) that is activated.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXPowerPointProtectedViewWindowBeforeClose_EventHandler">
      <summary>Represents the method that handles the ProtectedViewWindowBeforeClose event in PowerPoint.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXPowerPointProtectedViewWindowBeforeCloseEventArgs that provides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXPowerPointProtectedViewWindowBeforeEdit_EventHandler">
      <summary>Represents the method that handles the ProtectedViewWindowBeforeEdit event in PowerPoint.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXPowerPointProtectedViewWindowBeforeEditEventArgs that provides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXPowerPointProtectedViewWindowDeactivate_EventHandler">
      <summary>Represents the method that handles the ProtectedViewWindowDeactivate event in PowerPoint.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="protectedViewWindow">The deactivated protected view window.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXPowerPointProtectedViewWindowOpen_EventHandler">
      <summary>Represents the method that handles the ProtectedViewWindowOpen event in PowerPoint.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="protectedViewWindow">The protected view window (a COM object) that is opened.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXPowerPointSlideShow_EventHandler">
      <summary>Represents the method that handles the following events in PowerPoint:

<list type="bullet"><item>SlideShowOnNext</item><item>SlideShowOnPrevious</item></list></summary>
      <param name="sender">The object that caused the event.</param>
      <param name="window">The active slideshow window (a COM object).</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXPowerPointSlideShowNextClick_EventHandler">
      <summary>Represents the method that handles the SlideShowNextClick event in PowerPoint.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="slideShowWindow">The slide show window (a COM object) initialized prior to this event.</param>
      <param name="effect">The effect (a COM object) to animate on next click.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectAfterCubeBuilt_EventHandler">
      <summary>Represents the method that handles the AfterCubeBuilt event in Project.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXProjectAfterCubeBuiltEventArgs that p[rovides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectBeforeAssignmentChange_EventHandler">
      <summary>Represents the method that handles the ProjectBeforeAssignmentChange event in Project.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXProjectBeforeAssignmentChangeEventArgs that provides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectBeforeAssignmentChange2_EventHandler">
      <summary>Represents the method that handles the ProjectBeforeAssignmentChange2 event in Project.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="assigment">The assignment (a COM object) whose field is being changed.</param>
      <param name="field">The field being changed. If more than one field is changed by the user, the event is fired for each field changed.</param>
      <param name="newVal">The new value for the field specified with Field</param>
      <param name="info">An EventInfo (a COM object). EventInfo.Cancel is False when the event occurs. If the event procedure sets this argument to True, the value for
the field specified with Field is not changed.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectBeforeChange_EventHandler">
      <summary>Represents the method that handles the following Project events:

<list type="bullet"><item>ProjectBeforeTaskChange</item><item>ProjectBeforeResourceChange</item></list></summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXProjectBeforeChangeEventArgs that provides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectBeforeClearBaseline_EventHandler">
      <summary>Represents the method that handles the ProjectBeforeClearBaseline event in Project.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="project">The project (a COM object) displayed in the deactivated window.</param>
      <param name="interim">True if clearing an interim baseline plan. False if clearing a full baseline plan.</param>
      <param name="bl">The baseline you are clearing. Can be one of the following PjBaselines constants: pjBaseline, pjBaseline1, pjBaseline2, pjBaseline3, pjBaseline4,
pjBaseline5, pjBaseline6, pjBaseline7, pjBaseline8, pjBaseline9, or pjBaseline10.</param>
      <param name="interimFrom">The interim baseline plan being cleared. Can be one of the following PjSaveBaselineTo constants: pjIntoBaseline, pjIntoBaseline1,
pjIntoBaseline2, pjIntoBaseline3, pjIntoBaseline4, pjIntoBaseline5, pjIntoBaseline6, pjIntoBaseline7, pjIntoBaseline8, pjIntoBaseline9,
pjIntoBaseline10,pjIntoStart_Finish1, pjIntoStart_Finish2, pjIntoStart_Finish3, pjIntoStart_Finish4, pjIntoStart_Finish5, pjIntoStart_Finish6,
pjIntoStart_Finish7, pjIntoStart_Finish8, pjIntoStart_Finish9, or pjIntoStart_Finish10.</param>
      <param name="allTasks">True if clearing the entire project.</param>
      <param name="info">An EventInfo (a COM object). EventInfo.Cancel is False when the event occurs. If the event procedure sets this argument to True, the baseline is
not cleared.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectBeforeClose_EventHandler">
      <summary>Represents the method that handles the BeforeClose event in Project.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="info">The EventInfo object (a COM object) that allows cancelling the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectBeforePublish_EventHandler">
      <summary>Represents the method that handles the BeforePublish event in Project.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXProjectBeforePublishEventArgs that provides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectBeforeResourceChange2_EventHandler">
      <summary>Represents the method that handles the ProjectBeforeResourceChange2 event in Project.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="res">The resource (a COM object) whose field is being changed.</param>
      <param name="field">A PjField constant indicating the field being changed. If more than one field is changed by the user, the event is fired for each field changed.</param>
      <param name="newVal">The new value for the field specified with Field.</param>
      <param name="info">An EventInfo (a COM object). EventInfo.Cancel is False when the event occurs. If the event procedure sets this argument to True, the value for
the field specified with Field is not changed.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectBeforeSave2_EventHandler">
      <summary>Represents the method that handles the ProjectBeforeSave2 event in Project.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="project">The project (a COM object) to be saved.</param>
      <param name="saveAsUi">True if the Save As dialog box is displayed.</param>
      <param name="info">An EventInfo (a COM object). EventInfo.Cancel is False when the event occurs. If the event procedure sets this argument to True, the project will
not be saved when the procedure is finished.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectBeforeSaveBaseline_EventHandler">
      <summary>Represents the method that handles the ProjectBeforeSaveBaseline event in Project.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="project">The project (a COM object) displayed in the window.</param>
      <param name="interim">True if saving an interim baseline. False if saving a full baseline.</param>
      <param name="bl">The baseline you are saving. Can be one of the following PjBaselines constants: pjBaseline, pjBaseline1, pjBaseline2, pjBaseline3, pjBaseline4,
pjBaseline5, pjBaseline6, pjBaseline7, pjBaseline8, pjBaseline9, or pjBaseline10.</param>
      <param name="interimCopy">The interim plan being copied from. Can be one of the following PjSaveBaselineFrom constants: pjCopyBaseline, pjCopyBaseline1, pjCopyBaseline2,
pjCopyBaseline3, pjCopyBaseline4, pjCopyBaseline5, pjCopyBaseline6, pjCopyBaseline7, pjCopyBaseline8, pjCopyBaseline9, pjCopyBaseline10, pjCopyCurrent,
pjCopyStart_Finish1, pjCopyStart_Finish2, pjCopyStart_Finish3, pjCopyStart_Finish4, pjCopyStart_Finish5, pjCopyStart_Finish6, pjCopyStart_Finish7,
pjCopyStart_Finish8, pjCopyStart_Finish9, or pjCopyStart_Finish10.</param>
      <param name="interimInto">The interim plan to which you are saving. Can be one of the following PjSaveBaselineTo constants: pjIntoBaseline, pjIntoBaseline1,
pjIntoBaseline2, pjIntoBaseline3, pjIntoBaseline4, pjIntoBaseline5, pjIntoBaseline6, pjIntoBaseline7, pjIntoBaseline8, pjIntoBaseline9, pjIntoBaseline10,
pjIntoStart_Finish1, pjIntoStart_Finish2, pjIntoStart_Finish3, pjIntoStart_Finish4, pjIntoStart_Finish5, pjIntoStart_Finish6, pjIntoStart_Finish7,
pjIntoStart_Finish8, pjIntoStart_Finish9, or pjIntoStart_Finish10.</param>
      <param name="allTasks">True if saving the entire project.</param>
      <param name="rollupToSummaryTasks">True if you wish to roll up baselines to summary tasks.</param>
      <param name="rollupFromSubtasks">True if you wish to roll up baselines from subtasks.</param>
      <param name="Info">An EventInfo (a COM object). EventInfo.Cancel is False when the event occurs. If the event procedure sets this argument to True, the baseline is
not saved.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectBeforeTaskChange2_EventHandler">
      <summary>Represents the method that handles the ProjectBeforeTaskChange2 event in Project.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="task">The task (a COM object) whose field is being changed.</param>
      <param name="field">A PjField constant indicating the field being changed. If more than one field is changed by the user, the event is fired for each field changed.</param>
      <param name="newVal">The new value for the field specified with Field.</param>
      <param name="info">An EventInfo (a COM object). EventInfo.Cancel is False when the event occurs. If the event procedure sets this argument to True, the value for
the field specified with Field is not changed.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectConnectionStatusChanged_EventHandler">
      <summary>Represents the method that handles the ConnectionStatusChanged event in Project. Available only in Project Professional.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="online">True if Project Professional is connected with Project Server; otherwise, False.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectInfo_EventHandler">
      <summary>Represents the method that handles the following Project events:

<list type="bullet"><item>ProjectBeforeClose2</item><item>ProjectBeforePrint2</item><item>ProjectBeforeTaskDelete2</item><item>ProjectBeforeResourceDelete2</item><item>ProjectBeforeAssignmentDelete2</item><item>ProjectBeforeTaskNew2</item><item>ProjectBeforeResourceNew2</item><item>ProjectBeforeAssignmentNew2</item></list></summary>
      <param name="sender">The object that caused the event.</param>
      <param name="project">The Project object (a COM object) that caused the event.</param>
      <param name="info">The EventInfo object (a COM object) that allows cancelling the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectIsFunctionalitySupported_EventHandler">
      <summary>Represents the method that handles the IsFunctionalitySupported event in Project.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="info">An EventInfo object (a COM object) that allows cancelling the event.</param>
      <param name="functionality">Name of the functionality.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectJobCompleted_EventHandler">
      <summary>Represents the method that handles the JobCompleted event in Project.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="name">Name of the project whose queue job was completed.</param>
      <param name="projGuid">GUID of the project whose queue job was completed.</param>
      <param name="jobGuid">GUID of the job that was completed.</param>
      <param name="jobType">Type of the job that was completed. For example, Project Save, Project Publish, or Project Status Update.</param>
      <param name="lResult">HResult (error code) of the queue operation. For example, 0 indicates success and E_FAIL indicates failure.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectJobStart_EventHandler">
      <summary>Represents the method that handles the JobStart event in Project.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="name">Name of the project whose queue job was completed.</param>
      <param name="projGuid">GUID of the project whose queue job was completed.</param>
      <param name="jobGuid">GUID of the job that was completed.</param>
      <param name="jobType">Type of the job that was completed. For example, Project Save, Project Publish, or Project Status Update.</param>
      <param name="lResult">HResult (error code) of the queue operation. For example, 0 indicates success and E_FAIL indicates failure.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectLoadWebPage_EventHandler">
      <summary>Represents the method that handles the LoadWebPage event in Project.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXProjectLoadWebPageEventArgs that provides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectLoadWebPane_EventHandler">
      <summary>Represents the method that handles the LoadWebPane event in Project.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXProjectLoadWebPaneEventArgs that provides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectNew_EventHandler">
      <summary>Represents the method that handles the following events in Project:

<list type="bullet"><item>ProjectTaskNew</item><item>ProjectResourceNew</item><item>ProjectAssignmentNew</item></list></summary>
      <param name="sender">The object that caused the event.</param>
      <param name="project">The project (a COM object) where the new task, resource or assignment was created.</param>
      <param name="id">The ID of the task that was created.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectOnUndoOrRedo_EventHandler">
      <summary>Represents the method that handles the OnUndoOrRedo event in Project.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="label">Label of the transaction just undone or redone.</param>
      <param name="GUID">GUID of the transaction or NULL.</param>
      <param name="undo">True if the transaction was undone or False if it was redone.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectPaneActivate_EventHandler">
      <summary>Represents the method that handles the PaneActivate event in Project.</summary>
      <param name="sender">The object that caused the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectSaveCompletedToServer_EventHandler">
      <summary>Represents the method that handles the SaveCompletedToServer event in Project.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="name">Name of the project.</param>
      <param name="projGuid">GUID of the project.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectSaveStartingToServer_EventHandler">
      <summary>Represents the method that handles the SaveStartingToServer event in Project.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="name">Name of the project.</param>
      <param name="projGuid">GUID of the project.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectSecondaryViewChange_EventHandler">
      <summary>Represents the method that handles the SecondaryViewChange event in Project.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="window">The window (a COM object) where the view change occurs.</param>
      <param name="prevView">The previous topic pane view (a COM object) the user was in before the view change occurred. If the user was not in a project view before
applying the current view, the prevView argument returns null.</param>
      <param name="newView">The new top pane view (a COM object) the user has now applied.</param>
      <param name="success">True if the view change action succeeded.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectWindowBeforeViewChange_EventHandler">
      <summary>Represents the method that handles the WindowBeforeViewChange event in Project.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="window">The window (a COM object) where the view change occurs.</param>
      <param name="prevView">The previous view (top pane, a COM object) the user is in. If the user was not in a project view before applying the current view, this value
will return Null.</param>
      <param name="newView">The new view (top pane, a COM object) to which the user is trying to change.</param>
      <param name="projectHasViewWindow">True if the Project View Bar is currently visible.</param>
      <param name="Info">An EventInfo (a COM object. EventInfo.Cancel is False when the event occurs. If the event procedure sets this argument to True, the value for the
field specified with Field is not changed.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectWindowGoalAreaChange_EventHandler">
      <summary>Represents the method that handles the WindowGoalAreaChange event in Project.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="window">The window (a COM object) where the Project Guide is being changed.</param>
      <param name="goalArea">The ID of the goal area the user just clicked.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectWindowSelectionChange_EventHandler">
      <summary>Represents the method that handles the WindowSelectionChange event in Project.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="window">The window (a COM object) where the selection occurs.</param>
      <param name="selection">The selection (a COM object).</param>
      <param name="selType">The type of data included in the selection. Can be one of the following PjItemType constants: pjOtherItem, pjResourceItem, or pjTaskItem.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectWindowSidepaneDisplayChange_EventHandler">
      <summary>Represents the method that handles the WindowSidepaneDisplayChange event in Project.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="window">The window (a COM object) where the Project Guide is shown or hidden.</param>
      <param name="close">False if the user is closing the Project Guide. True if the user is showing the Project Guide.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectWindowSidepaneTaskChange_EventHandler">
      <summary>Represents the method that handles the WindowSidepaneTaskChange event in Project.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="window">The window (a COM object) where the Project Guide is being changed.</param>
      <param name="ID">The ID of the task in the Project Guide you are trying to display.</param>
      <param name="isGoalArea">True if trying to change to a different goal area in the Project Guide. False if trying to change to a different Project Guide task.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectWindowViewChange_EventHandler">
      <summary>Represents the method that handles the WindowViewChange event in Project.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="window">The window (a COM object) where the view change occurs.</param>
      <param name="prevView">The previous topic pane view (a COM object) the user was in before the view change occurred. If the user was not in a project view before
applying the current view, the prevView argument returns null.</param>
      <param name="newView">The new top pane view (a COM object) the user has now applied.</param>
      <param name="success">True if the view change action succeeded.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXProjectWorkpaneDisplayChange_EventHandler">
      <summary>Represents the method that handles the WorkpaneDisplayChange event in Project.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="displayState">True if the Project Guide is shown. False if the Project Guide is hidden.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXPublisherBeforeMerge_EventHandler">
      <summary>Represents the method that handles the MailMergeBeforeMerge event in Publisher.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXPublisherBeforeMergeEventArgs that provides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXPublisherGenerateBarcode_EventHandler">
      <summary>Represents the method that handles the MailMergeGenerateBarcode event in Publisher.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXPublisherGenerateBarcodeEventArgs that provides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXPublisherWizardStateChange_EventHandler">
      <summary>Represents the method that handles the MailMergeWizardStateChange event in Publisher.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="document">The mail merge main document (a COM object).</param>
      <param name="fromState">The Mail Merge Wizard step from which a user is moving</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonBeforeCreate_EventHandler">
      <summary>Represents the method that handles the OnRibbonBeforeCreate event of ADXAddinModule.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="ribbonId">The ID for the RibbonX UI. For Word, Excel, PowerPoint, and Access, there is only one ID for each application. For Outlook, there will be one for
each type of Inspector object.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonBeforeItemsAdd_EventHandler">
      <summary></summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An EventArgs that provides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonBeforeLoad_EventHandler">
      <summary>Represents the method that handles the OnRibbonBeforeLoad event of ADXAddinModule.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXRibbonBeforeLoadEventArgs that provides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonCommand_EventHandler">
      <summary>Represents the method that handles the OnAction event of ADXRibbonCommand.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="pressed"></param>
      <param name="control">The IRibbonControl (a COM object).</param>
      <param name="e">An ADXCancelEventArgs that allows cancelling the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonCreateMenu_EventHandler">
      <summary>Represents the method that handles the OnCreate event of ADXRibbonMenu.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXRibbonCreateMenuEventArgs that provides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonItemPropertyChanging_EventHandler">
      <summary>Represents the method that handles the ItemPropertyChanging event of a Ribbon component.</summary>
      <param name="sender">The Ribbon component which is the cause of the event.</param>
      <param name="e">An ADXRibbonItemPropertyChangingEventArgs that contains event data.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonLoaded_EventHandler">
      <summary>Represents the method that handles the OnRibbonLoaded event of ADXAddinModule.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="ribbon">An IRibbonUI object (a COM object).</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonOnAction_EventHandler">
      <summary>Represents the method that handles the following events:

<list type="bullet"><item>ADXRibbonButton.OnClick</item><item>ADXRibbonCheckBox.OnClick</item><item>ADXRibbonDialogBoxLauncher.OnAction</item><item>ADXRibbonSplitButton.OnClick</item></list></summary>
      <param name="sender">The object that caused the event.</param>
      <param name="control">The IRibbonControl (a COM object).</param>
      <param name="pressed">True, if the control is pressed.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonOnActionChange_EventHandler">
      <summary>Represents the method that handles the OnChange event of ADXRibbonCustomComboBox.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="Control">The IRibbonControl (a COM object).</param>
      <param name="text">The text.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonOnActionSelected_EventHandler">
      <summary>Represents the method that handles the OnAction event of ADXRibbonCustomDropDown.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="Control">The IRibbonControl (a COM object).</param>
      <param name="selectedId">The ID of the selected item.</param>
      <param name="selectedIndex">The index of the selected item.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonOnClick_EventHandler">
      <summary>Represents the method that handles the OnClick event of ribbon controls.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="control">The IRibbonControl (a COM object).</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXRibbonPropertyChanging_EventHandler">
      <summary>Represents the method that handles the PropertyChanging event of a Ribbon component.</summary>
      <param name="sender">The Ribbon component which is the cause of the event.</param>
      <param name="e">An ADXRibbonPropertyChangingEventArgs that contains event data.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXSendMessage_EventHandler">
      <summary>Represents the method that will handle the ADXAddinModule.OnSendMessage event.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXSendMessageEventArgs provioding data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXTaskPaneAfterCreate_EventHandler">
      <summary>Represents the method that handles the OnTaskPaneAfterCreate event of ADXAddinModule.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="instance">An instance of the task pane wrapper.</param>
      <param name="control">The Microsoft ActiveX control instance (a COM object) displayed in the custom task pane frame.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXTaskPaneAfterShow_EventHandler">
      <summary>Represents the method that handles the OnTaskPaneAfterShow event of ADXAddinModule.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="instance">An instance of the task pane wrapper.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXTaskPaneBeforeCreate_EventHandler">
      <summary>Represents the method that handles the OnTaskPaneBeforeCreate event of ADXAddinModule.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXTaskPaneCreateEventArgs that provides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXTaskPaneBeforeDestroy_EventHandler">
      <summary>Represents the method that handles the OnTaskPaneBeforeDestroy event of ADXAddinModule.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="instance">An instance of the task pane wrapper.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXTaskPaneBeforeShow_EventHandler">
      <summary>Represents the method that handles the OnTaskPaneBeforeShow event of ADXAddinModule.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXTaskPaneShowEventArgs that provides data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXUninstallControls_EventHandler">
      <summary>Represents the method that handles the following events of ADXAddinModule:

<list type="bullet"><item>BeforeUninstallControls</item><item>AfterUninstallControls</item></list></summary>
      <param name="sender">The object that caused the event.</param>
      <param name="hostApp">The application in which the add-in is loaded.</param>
      <param name="hostAppObj">The Application object (a COM object) representing the host application in which the add-in is loaded.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXVisioAfterRemoveHiddenInformation_EventHandler">
      <summary>Represents the method that handles the AfterRemoveHiddenInformation event in Visio.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="document">The document (a COM object) from which hidden information has been removed.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXVisioAfterResumeEvents_EventHandler">
      <summary>Represents the method that handles the AfterResumeEvents event in Visio.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="application">The instance of Microsoft Office Visio (a COM object) in which firing of events resumed.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXVisioBeforeDataRecordsetDelete_EventHandler">
      <summary>Represents the method that handles the BeforeDataRecordsetDelete event in Visio.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="dataRecordset">The data recordset (a COM object) that is going to be deleted.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXVisioBeforeSuspendEvents_EventHandler">
      <summary>Represents the method that handles the BeforeSuspendEvents event in Visio.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="application">The instance of Microsoft Office Visio (a COM object) in which firing of events is going to be suspended.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXVisioCalloutRelationshipAdded_EventHandler">
      <summary>Represents the method that handles the CalloutRelationshipAdded event in Visio.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="shapePair">An object (a COM object) that represents the new callout shape-pair relationship.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXVisioCalloutRelationshipDeleted_EventHandler">
      <summary>Represents the method that handles the CalloutRelationshipDeleted event in Visio.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="shapePair">An object (a COM object) that represents the callout shape-pair relationship.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXVisioContainerRelationshipAdded_EventHandler">
      <summary>Represents the method that handles the ContainerRelationshipAdded event in Visio.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="shapePair">An object (a COM object) that represents the new container shape-pair relationship.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXVisioContainerRelationshipDeleted_EventHandler">
      <summary>Represents the method that handles the ContainerRelationshipDeleted event in Visio.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="shapePair">An object (a COM object) that represents the container shape-pair relationship.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXVisioDataRecordsetAdded_EventHandler">
      <summary>Represents the method that handles the DataRecordsetAdded event in Visio.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="dataRecordset">The data recordset (a COM object) that was added.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXVisioDataRecordsetChanged_EventHandler">
      <summary>Represents the method that handles the DataRecordsetChanged event in Visio.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="dataRecordsetChanged">The data recordset (a COM object) that changed.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXVisioEnterScope_EventHandler">
      <summary>Represents the method that handles the EnterScope event in Visio.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="app">The instance (a COM object) of Microsoft Visio that contains the scope.</param>
      <param name="nScopeID">A language-independent number that describes the operation that just ended or the scope ID returned by the BeginUndoScope method.</param>
      <param name="bstrDescription">A textual description of the operation that changes in different language versions. Contains the user interface description of a Visio operation
or the description passed to the BeginUndoScope method</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXVisioExitScope_EventHandler">
      <summary>Represents the method that handles the ExitScope event in Visio.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="app">The instance (a COM object) of Microsoft Visio that contains the scope.</param>
      <param name="nScopeID">A language-independent number that describes the operation that just ended or the scope ID returned by the BeginUndoScope method.</param>
      <param name="bstrDescription">A textual description of the operation that changes in different language versions. Contains the user interface description of a Visio operation
or the description passed to the BeginUndoScope method</param>
      <param name="bErrOrCancelled">True if there was an error during the scope or if the scope was canceled; False if there wasn't an error and it wasn't canceled.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXVisioGroupCanceled_EventHandler">
      <summary>Represents the method that handles the GroupCanceled event in Visio.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="selection">The selection of shapes (a COM object) that was going to be grouped.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXVisioKeyDown_EventHandler">
      <summary>Represents the method that handles the KeyDown event in Visio.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXVisioKeyUpDownEventArgs providing data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXVisioKeyPress_EventHandler">
      <summary>Represents the method that handles the KeyPress event in Visio.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXVisioKeyPressEventArgs providing data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXVisioKeyUp_EventHandler">
      <summary>Represents the method that handles the KeyUp event in Visio.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXVisioKeyUpDownEventArgs providing data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXVisioMarker_EventHandler">
      <summary>Represents the method that handles the MarkerEvent event in Visio.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="app">The active instance (a COM object) of Microsoft Visio.</param>
      <param name="sequenceNum">The ordinal position of this event with respect to past events</param>
      <param name="contextString">Context string passed by the QueueMarkerEvent method</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXVisioMouseDown_EventHandler">
      <summary>Represents the method that handles the MouseDown event in Visio.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXVisioMouseEventArgs providing data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXVisioMouseMove_EventHandler">
      <summary>Represents the method that handles the MouseMove event in Visio.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXVisioMouseEventArgs providing data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXVisioMouseUp_EventHandler">
      <summary>Represents the method that handles the MouseUp event in Visio.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXVisioMouseEventArgs providing data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXVisioQueryCancelGroup_EventHandler">
      <summary>Represents the method that handles the QueryCancelGroup event in Visio.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXVisioQueryCancelGroupEventArgs providing data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXVisioQueryCancelSuspendEvents_EventHandler">
      <summary>Represents the method that handles the QueryCancelSuspendEvents event in Visio.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXVisioQueryCancelSuspendEventsEventArgs providing data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXVisioRuleSetValidated_EventHandler">
      <summary>Represents the method that handles the RuleSetValidated event in Visio.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="ruleSet">The rule set (a COM object) that was validated.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXVisioShapeDataGraphicChanged_EventHandler">
      <summary>Represents the method that handles the ShapeDataGraphicChanged event in Visio.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="shape">The shape (a COM object) to which the data graphic was applied or from which it was deleted.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXVisioShapeLinkAdded_EventHandler">
      <summary>Represents the method that handles the ShapeLinkAdded event in Visio.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="shape">The shape (a COM object) that is linked to data.</param>
      <param name="dataRecordSetID">The ID of the data recordset containing the data row linked to the shape.</param>
      <param name="dataRowID">The ID of the data row linked to the shape.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXVisioShapeLinkDeleted_EventHandler">
      <summary>Represents the method that handles the ShapeLinkDeleted event in Visio.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="shape">The shape (a COM object) whose link to a data row was broken.</param>
      <param name="dataRecordSetID">The ID of the data recordset containing the data row that was linked to the shape.</param>
      <param name="dataRowID">The ID of the data row that was linked to the shape.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXVisioSuspendEventsCanceled_EventHandler">
      <summary>Represents the method that handles the SuspendEventsCanceled event in Visio.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="application">The instance of Microsoft Visio (a COM object) in which firing of events was going to be suspended.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXWordDocumentSync_EventHandler">
      <summary>Represents the method that handles the following Word events:

<list type="bullet"><item>DocumentSync</item><item>Sync</item></list></summary>
      <param name="sender">The object that caused the event.</param>
      <param name="document">The document (a COM object) being synchronized.</param>
      <param name="syncEventType">The status of the document being synchronized.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXWordDocXMLAfterInsert_EventHandler">
      <summary></summary>
      <param name="sender">The object that caused the event.</param>
      <param name="newXMLNode">The newly added XML node (a COM object).</param>
      <param name="inUndoRedo">True indicates the action was performed using the Undo or Redo feature in Microsoft Word.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXWordDocXMLBeforeDelete_EventHandler">
      <summary></summary>
      <param name="sender">The object that caused the event.</param>
      <param name="deletedRange">A Range object (a COM object) that represents the contents of the XML element being deleted. If only an element is deleted and not associated
text, the DeletedRange parameter will not exist and will, therefore, be set to Nothing.</param>
      <param name="oldXMLNode">The node that is being deleted.</param>
      <param name="inUndoRedo">True indicates the action was performed using the Undo or Redo feature in Microsoft Word.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXWordEPostageInsertEx_EventHandler">
      <summary>Represents the method that handles the EPostageInsertEx event in Word.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXWordEPostageInsertExEventArgs that contains event data.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXWordMailAfterMerge_EventHandler">
      <summary>Represents the method that handles the MailMergeAfterMerge event in Word.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="document">The mail merge main document (a COM object).</param>
      <param name="documentResult">The document (a COM object) created from the mail merge.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXWordMailBeforeMerge_EventHandler">
      <summary>Represents the method that handles the MailMergeBeforeMerge event in Word.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXWordMailBeforeMergeEventArgs that contains event data.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXWordMailMerge_EventHandler">
      <summary>Represents the method that handles the following Word events:

<list type="bullet"><item>MailMergeAfterRecordMerge</item><item>MailMergeDataSourceLoad</item><item>MailMergeWizardSendToCustom</item></list></summary>
      <param name="sender">The object that caused the event.</param>
      <param name="document">The mail merge main document (a COM object).</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXWordMailMergeStateChange_EventHandler">
      <summary>Represents the method that handles the MailMergeWizardStateChange event in Word.</summary>
      <param name="e">An ADXWordMailMergeStateChangeEventArgs that contains event data.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXWordProtectedViewWindowActivate_EventHandler">
      <summary>Represents the method that handles the ProtectedViewWindowActivate event in Word.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="pvWindow">The protected view window (a COM object) that is activated.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXWordProtectedViewWindowBeforeClose_EventHandler">
      <summary>Represents the method that handles the ProtectedViewWindowBeforeClose event in Word.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXWordProtectedViewWindowBeforeCloseEventArgs providing data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXWordProtectedViewWindowBeforeEdit_EventHandler">
      <summary>Represents the method that handles the ProtectedViewWindowBeforeEdit event in Word.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXWordProtectedViewWindowBeforeEditEventArgs providing data for the event.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXWordProtectedViewWindowDeactivate_EventHandler">
      <summary>Represents the method that handles the ProtectedViewWindowDeactivate event in Word.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="protectedViewWindow">The deactivated protected view window (a COM object).</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXWordProtectedViewWindowOpen_EventHandler">
      <summary>Represents the method that handles the ProtectedViewWindowOpen event in Word.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="protectedViewWindow">The protected view window (a COM object) that is opened.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXWordProtectedViewWindowSize_EventHandler">
      <summary>Represents the method that handles the ProtectedViewWindowSize event in Word.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="protectedViewWindow">The protected view window (a COM object) that is sized.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXWordXMLSelectionChange_EventHandler">
      <summary>Represents the method that handles the XMLSelectionChange event in Word.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="e">An ADXWordXMLSelectionChangeEventArgs that contains event data.</param>
    </member>
    <member name="T:AddinExpress.MSO.ADXWordXMLValidationError_EventHandler">
      <summary>Represents the method that handles the XMLValidationError event in Word.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="xmlNode">The XML element (a COM object) that is invalid.</param>
    </member>
    <member name="T:AddinExpress.MSO.CustomTaskPaneEvents_DockPositionStateChangeEventHandler">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:AddinExpress.MSO.CustomTaskPaneEvents_VisibleStateChangeEventHandler">
      <summary>This member supports the Add-in Express infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:AddinExpress.MSO.OfficeColorSchemeChanged_EventHandler">
      <summary>Represents the method that handles the ADXAddinModule.OfficeColorSchemeChanged event.</summary>
      <param name="sender">The object that caused the event.</param>
      <param name="theme">The new Office color scheme.</param>
    </member>
  </members>
</doc>